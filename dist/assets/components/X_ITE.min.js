/* X_ITE v9.7.0 */(()=>{"use strict";var e={n:t=>{var n=t&&t.__esModule?()=>t.default:()=>t;return e.d(n,{a:n}),n},d:(t,n)=>{for(var i in n)e.o(n,i)&&!e.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:n[i]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};const t=window[Symbol.for("X_ITE.X3D-9.7.0")].require("x_ite/Components");var n=e.n(t);const i=window[Symbol.for("X_ITE.X3D-9.7.0")].require("x_ite/Fields");var o=e.n(i);const a=window[Symbol.for("X_ITE.X3D-9.7.0")].require("x_ite/Base/X3DFieldDefinition");var s=e.n(a);const r=window[Symbol.for("X_ITE.X3D-9.7.0")].require("x_ite/Base/FieldDefinitionArray");var u=e.n(r);const p=window[Symbol.for("X_ITE.X3D-9.7.0")].require("x_ite/Components/Shape/X3DAppearanceChildNode");var l=e.n(p);const c=window[Symbol.for("X_ITE.X3D-9.7.0")].require("x_ite/Base/X3DConstants");var _=e.n(c);const h=window[Symbol.for("X_ITE.X3D-9.7.0")].require("x_ite/Namespace");var d=e.n(h);function T(e){l().call(this,e),this.addType(_().BlendMode),this.factorTypes=new Map,this.equationTypes=new Map}Object.assign(Object.setPrototypeOf(T.prototype,l().prototype),{initialize(){l().prototype.initialize.call(this);const e=this.getBrowser().getContext(),t=e.getExtension("EXT_blend_minmax");this.factorTypes.set("ZERO",e.ZERO),this.factorTypes.set("ONE",e.ONE),this.factorTypes.set("SRC_COLOR",e.SRC_COLOR),this.factorTypes.set("ONE_MINUS_SRC_COLOR",e.ONE_MINUS_SRC_COLOR),this.factorTypes.set("DST_COLOR",e.DST_COLOR),this.factorTypes.set("ONE_MINUS_DST_COLOR",e.ONE_MINUS_DST_COLOR),this.factorTypes.set("SRC_ALPHA",e.SRC_ALPHA),this.factorTypes.set("ONE_MINUS_SRC_ALPHA",e.ONE_MINUS_SRC_ALPHA),this.factorTypes.set("DST_ALPHA",e.DST_ALPHA),this.factorTypes.set("ONE_MINUS_DST_ALPHA",e.ONE_MINUS_DST_ALPHA),this.factorTypes.set("SRC_ALPHA_SATURATE",e.SRC_ALPHA_SATURATE),this.factorTypes.set("CONSTANT_COLOR",e.CONSTANT_COLOR),this.factorTypes.set("ONE_MINUS_CONSTANT_COLOR",e.ONE_MINUS_CONSTANT_COLOR),this.factorTypes.set("CONSTANT_ALPHA",e.CONSTANT_ALPHA),this.factorTypes.set("ONE_MINUS_CONSTANT_ALPHA",e.ONE_MINUS_CONSTANT_ALPHA),this.equationTypes.set("FUNC_ADD",e.FUNC_ADD),this.equationTypes.set("FUNC_SUBTRACT",e.FUNC_SUBTRACT),this.equationTypes.set("FUNC_REVERSE_SUBTRACT",e.FUNC_REVERSE_SUBTRACT),this.equationTypes.set("MIN",e.MIN||t&&t.MIN_EXT),this.equationTypes.set("MAX",e.MAX||t&&t.MAX_EXT),this._sourceColorFactor.addInterest("set_sourceColorFactor__",this),this._sourceAlphaFactor.addInterest("set_sourceAlphaFactor__",this),this._destinationColorFactor.addInterest("set_destinationColorFactor__",this),this._destinationAlphaFactor.addInterest("set_destinationAlphaFactor__",this),this._colorEquation.addInterest("set_colorEquation__",this),this._alphaEquation.addInterest("set_alphaEquation__",this),this.set_sourceColorFactor__(),this.set_sourceAlphaFactor__(),this.set_destinationColorFactor__(),this.set_destinationAlphaFactor__(),this.set_colorEquation__(),this.set_alphaEquation__()},set_sourceColorFactor__(){this.sourceColorFactorType=this.factorTypes.get(this._sourceColorFactor.getValue()),void 0===this.sourceColorFactorType&&(this.sourceColorFactorType=this.factorTypes.get("SRC_ALPHA"))},set_sourceAlphaFactor__(){this.sourceAlphaFactorType=this.factorTypes.get(this._sourceAlphaFactor.getValue()),void 0===this.sourceAlphaFactorType&&(this.sourceAlphaFactorType=this.factorTypes.get("ONE"))},set_destinationColorFactor__(){this.destinationColorFactorType=this.factorTypes.get(this._destinationColorFactor.getValue()),void 0===this.destinationColorFactorType&&(this.destinationColorFactorType=this.factorTypes.get("ONE_MINUS_SRC_ALPHA"))},set_destinationAlphaFactor__(){this.destinationAlphaFactorType=this.factorTypes.get(this._destinationAlphaFactor.getValue()),void 0===this.destinationAlphaFactorType&&(this.destinationAlphaFactorType=this.factorTypes.get("ONE_MINUS_SRC_ALPHA"))},set_colorEquation__(){this.colorEquationType=this.equationTypes.get(this._colorEquation.getValue()),void 0===this.colorEquationType&&(this.colorEquationType=this.equationTypes.get("FUNC_ADD"))},set_alphaEquation__(){this.alphaEquationType=this.equationTypes.get(this._alphaEquation.getValue()),void 0===this.alphaEquationType&&(this.alphaEquationType=this.equationTypes.get("FUNC_ADD"))},enable(e){const t=this._blendColor.getValue();e.blendColor(t.r,t.g,t.b,t.a),e.blendFuncSeparate(this.sourceColorFactorType,this.destinationColorFactorType,this.sourceAlphaFactorType,this.destinationAlphaFactorType),e.blendEquationSeparate(this.colorEquationType,this.alphaEquationType)},disable(e){e.blendFuncSeparate(e.SRC_ALPHA,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA),e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD)}}),Object.defineProperties(T,{typeName:{value:"BlendMode",enumerable:!0},componentInfo:{value:Object.freeze({name:"X_ITE",level:1}),enumerable:!0},containerField:{value:"blendMode",enumerable:!0},specificationRange:{value:Object.freeze({from:"3.3",to:"Infinity"}),enumerable:!0},fieldDefinitions:{value:new(u())([new(s())(_().inputOutput,"metadata",new(o().SFNode)),new(s())(_().inputOutput,"blendColor",new(o().SFColorRGBA)),new(s())(_().inputOutput,"sourceColorFactor",new(o().SFString)("SRC_ALPHA")),new(s())(_().inputOutput,"sourceAlphaFactor",new(o().SFString)("ONE")),new(s())(_().inputOutput,"destinationColorFactor",new(o().SFString)("ONE_MINUS_SRC_ALPHA")),new(s())(_().inputOutput,"destinationAlphaFactor",new(o().SFString)("ONE_MINUS_SRC_ALPHA")),new(s())(_().inputOutput,"colorEquation",new(o().SFString)("FUNC_ADD")),new(s())(_().inputOutput,"alphaEquation",new(o().SFString)("FUNC_ADD"))]),enumerable:!0}});const S=T;d().add("BlendMode","x_ite/Components/X_ITE/BlendMode",S);const E=S;function O(e){l().call(this,e),this.addType(_().DepthMode),this.addAlias("depthFunc",this._depthFunction)}Object.assign(Object.setPrototypeOf(O.prototype,l().prototype),{initialize(){l().prototype.initialize.call(this),this._depthFunction.addInterest("set_depthFunction__",this),this.set_depthFunction__()},set_depthFunction__:function(){const e=new Map([["NEVER","NEVER"],["LESS","LESS"],["EQUAL","EQUAL"],["LESS_EQUAL","LEQUAL"],["GREATER","GREATER"],["NOT_EQUAL","NOTEQUAL"],["GREATER_EQUAL","GEQUAL"],["ALWAYS","ALWAYS"]]);return function(){const t=this.getBrowser().getContext();this.depthFunction=t[e.get(this._depthFunction.getValue())??"LEQUAL"]}}(),enable(e){this.depthTest=e.isEnabled(e.DEPTH_TEST),this.depthWriteMask=e.getParameter(e.DEPTH_WRITEMASK),e.enable(e.POLYGON_OFFSET_FILL),e.polygonOffset(...this._polygonOffset),this._depthTest.getValue()?e.enable(e.DEPTH_TEST):e.disable(e.DEPTH_TEST),e.depthFunc(this.depthFunction),e.depthRange(...this._depthRange.getValue()),e.depthMask(this._depthMask.getValue())},disable(e){e.disable(e.POLYGON_OFFSET_FILL),this.depthTest?e.enable(e.DEPTH_TEST):e.disable(e.DEPTH_TEST),e.depthFunc(e.LEQUAL),e.depthRange(0,1),e.depthMask(this.depthWriteMask)}}),Object.defineProperties(O,{typeName:{value:"DepthMode",enumerable:!0},componentInfo:{value:Object.freeze({name:"X_ITE",level:1}),enumerable:!0},containerField:{value:"depthMode",enumerable:!0},specificationRange:{value:Object.freeze({from:"4.0",to:"Infinity"}),enumerable:!0},fieldDefinitions:{value:new(u())([new(s())(_().inputOutput,"metadata",new(o().SFNode)),new(s())(_().inputOutput,"polygonOffset",new(o().SFVec2f)),new(s())(_().inputOutput,"depthRange",new(o().SFVec2f)(0,1)),new(s())(_().inputOutput,"depthTest",new(o().SFBool)(!0)),new(s())(_().inputOutput,"depthFunction",new(o().SFString)("LESS_EQUAL")),new(s())(_().inputOutput,"depthMask",new(o().SFBool)(!0))]),enumerable:!0}});const m=O;d().add("DepthMode","x_ite/Components/X_ITE/DepthMode",m);const f=m,y=window[Symbol.for("X_ITE.X3D-9.7.0")].require("x_ite/Components/Shape/X3DShapeNode");var w=e.n(y);const b=window[Symbol.for("X_ITE.X3D-9.7.0")].require("x_ite/Rendering/TraverseType");var x=e.n(b);const F=window[Symbol.for("X_ITE.X3D-9.7.0")].require("x_ite/Rendering/VertexArray");var g=e.n(F);const N=window[Symbol.for("X_ITE.X3D-9.7.0")].require("standard/Math/Numbers/Vector3");var I=e.n(N);const A=window[Symbol.for("X_ITE.X3D-9.7.0")].require("standard/Math/Numbers/Matrix4");var C=e.n(A);const M=window[Symbol.for("X_ITE.X3D-9.7.0")].require("standard/Math/Geometry/Box3");var R=e.n(M);function v(e){w().call(this,e),this.addType(_().InstancedShape),this.addChildObjects(_().outputOnly,"matrices",new(o().SFTime)),this.min=new(I()),this.max=new(I()),this.scale=new(I())(1,1,1),this.numInstances=0,this.instancesStride=25*Float32Array.BYTES_PER_ELEMENT,this.matrixOffset=0,this.normalMatrixOffset=16*Float32Array.BYTES_PER_ELEMENT}Object.assign(Object.setPrototypeOf(v.prototype,w().prototype),{initialize(){w().prototype.initialize.call(this);const e=this.getBrowser(),t=e.getContext();e.getContext().getVersion()<2||(this.instances=Object.assign(t.createBuffer(),{vertexArrayObject:new(g())(t),thickLinesVertexArrayObject:new(g())(t),lineTrianglesBuffer:t.createBuffer(),numLines:0}),this._translations.addInterest("set_transform__",this),this._rotations.addInterest("set_transform__",this),this._scales.addInterest("set_transform__",this),this._matrices.addInterest("set_matrices__",this),this.set_transform__())},getShapeKey:()=>3,getNumInstances(){return this.numInstances},getInstances(){return this.instances},set_bbox__:function(){const e=new(I()),t=new(I()),n=new(R());return function(){if(this.numInstances)if(this._bboxSize.getValue().equals(this.getDefaultBBoxSize())){this.getGeometry()?n.assign(this.getGeometry().getBBox()):n.set();const i=n.size.multiply(this.scale.magnitude()/2),o=n.center;e.assign(this.min).add(o).subtract(i),t.assign(this.max).add(o).add(i),this.bbox.setExtents(e,t)}else this.bbox.set(this._bboxSize.getValue(),this._bboxCenter.getValue());else this.bbox.set();this.getBBoxSize().assign(this.bbox.size),this.getBBoxCenter().assign(this.bbox.center)}}(),set_transform__(){this._matrices=this.getBrowser().getCurrentTime()},set_matrices__(){const e=this.getBrowser().getContext(),t=this._translations,n=this._rotations,i=this._scales,o=t.length,a=n.length,s=i.length,r=Math.max(o,a,s),u=this.instancesStride/Float32Array.BYTES_PER_ELEMENT,p=this.instancesStride*r,l=new Float32Array(p),c=new(C());this.numInstances=r;const _=this.min.set(Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY),h=this.max.set(Number.NEGATIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.NEGATIVE_INFINITY),d=this.scale.assign(s?h:I().One);for(let e=0,p=0;e<r;++e,p+=u)c.set(o?t[Math.min(e,o-1)].getValue():null,a?n[Math.min(e,a-1)].getValue():null,s?i[Math.min(e,s-1)].getValue():null),s&&d.max(i[Math.min(e,s-1)].getValue()),l.set(c,p),l.set(c.submatrix.transpose().inverse(),p+16),_.min(c.origin),h.max(c.origin);e.bindBuffer(e.ARRAY_BUFFER,this.instances),e.bufferData(e.ARRAY_BUFFER,l,e.DYNAMIC_DRAW),this.set_bbox__()},set_geometry__(){w().prototype.set_geometry__.call(this),this.getGeometry()?delete this.traverse:this.traverse=Function.prototype,this.set_transform__()},intersectsBox(e,t,n){},traverse(e,t){if(this.numInstances){switch(e){case x().POINTER:this._pointerEvents.getValue()&&t.addPointingShape(this);break;case x().PICKING:break;case x().COLLISION:t.addCollisionShape(this);break;case x().SHADOW:this._castShadow.getValue()&&t.addShadowShape(this);break;case x().DISPLAY:t.addDisplayShape(this)&&this.getAppearance().traverse(e,t)}this.getGeometry().traverse(e,t)}},displaySimple(e,t,n){this.getGeometry().displaySimpleInstanced(e,n,this)},display(e,t){this.getGeometry().displayInstanced(e,t,this)}}),Object.defineProperties(v,{typeName:{value:"InstancedShape",enumerable:!0},componentInfo:{value:Object.freeze({name:"X_ITE",level:1}),enumerable:!0},containerField:{value:"children",enumerable:!0},specificationRange:{value:Object.freeze({from:"2.0",to:"Infinity"}),enumerable:!0},fieldDefinitions:{value:new(u())([new(s())(_().inputOutput,"metadata",new(o().SFNode)),new(s())(_().inputOutput,"translations",new(o().MFVec3f)),new(s())(_().inputOutput,"rotations",new(o().MFRotation)),new(s())(_().inputOutput,"scales",new(o().MFVec3f)),new(s())(_().inputOutput,"pointerEvents",new(o().SFBool)(!0)),new(s())(_().inputOutput,"castShadow",new(o().SFBool)(!0)),new(s())(_().inputOutput,"visible",new(o().SFBool)(!0)),new(s())(_().inputOutput,"bboxDisplay",new(o().SFBool)),new(s())(_().initializeOnly,"bboxSize",new(o().SFVec3f)(-1,-1,-1)),new(s())(_().initializeOnly,"bboxCenter",new(o().SFVec3f)),new(s())(_().inputOutput,"appearance",new(o().SFNode)),new(s())(_().inputOutput,"geometry",new(o().SFNode))]),enumerable:!0}});const X=v;d().add("InstancedShape","x_ite/Components/X_ITE/InstancedShape",X);const D=X,L=window[Symbol.for("X_ITE.X3D-9.7.0")].require("standard/Utility/BitSet");var P=e.n(L);function U(e){l().call(this,e),this.addType(_().X3DMaterialExtensionNode),this.textureBits=new(P())}Object.assign(Object.setPrototypeOf(U.prototype,l().prototype),{setTexture(e,t){e*=4,this.textureBits.remove(e,15),this.textureBits.add(e,t?.getTextureBits()??0)},getTextureBits(){return this.textureBits}}),Object.defineProperties(U,{typeName:{value:"X3DMaterialExtensionNode",enumerable:!0},componentInfo:{value:Object.freeze({name:"X_ITE",level:1}),enumerable:!0}});const j=U;d().add("X3DMaterialExtensionNode","x_ite/Components/X_ITE/X3DMaterialExtensionNode",j);const z=j;function B(e){z.call(this,e),this.addType(_().AnisotropyMaterialExtension)}Object.assign(Object.setPrototypeOf(B.prototype,z.prototype),{initialize(){z.prototype.initialize.call(this)},getExtensionKey:()=>0,getShaderOptions(e){},setShaderUniforms(e,t,n,i,o){}}),Object.defineProperties(B,{typeName:{value:"AnisotropyMaterialExtension",enumerable:!0},componentInfo:{value:Object.freeze({name:"X_ITE",level:1}),enumerable:!0},containerField:{value:"extensions",enumerable:!0},specificationRange:{value:Object.freeze({from:"4.0",to:"Infinity"}),enumerable:!0},fieldDefinitions:{value:new(u())([new(s())(_().inputOutput,"metadata",new(o().SFNode)),new(s())(_().inputOutput,"anisotropyStrength",new(o().SFFloat)),new(s())(_().inputOutput,"anisotropyRotation",new(o().SFFloat)),new(s())(_().inputOutput,"anisotropyTextureMapping",new(o().SFString)),new(s())(_().inputOutput,"anisotropyTexture",new(o().SFNode))]),enumerable:!0}});const q=B;d().add("AnisotropyMaterialExtension","x_ite/Components/X_ITE/AnisotropyMaterialExtension",q);const V=q;function H(e){z.call(this,e),this.addType(_().ClearcoatMaterialExtension)}Object.assign(Object.setPrototypeOf(H.prototype,z.prototype),{initialize(){z.prototype.initialize.call(this)},getExtensionKey:()=>1,getShaderOptions(e){},setShaderUniforms(e,t,n,i,o){}}),Object.defineProperties(H,{typeName:{value:"ClearcoatMaterialExtension",enumerable:!0},componentInfo:{value:Object.freeze({name:"X_ITE",level:1}),enumerable:!0},containerField:{value:"extensions",enumerable:!0},specificationRange:{value:Object.freeze({from:"4.0",to:"Infinity"}),enumerable:!0},fieldDefinitions:{value:new(u())([new(s())(_().inputOutput,"metadata",new(o().SFNode)),new(s())(_().inputOutput,"clearcoat",new(o().SFFloat)),new(s())(_().inputOutput,"clearcoatTextureMapping",new(o().SFString)),new(s())(_().inputOutput,"clearcoatTexture",new(o().SFNode)),new(s())(_().inputOutput,"clearcoatRoughness",new(o().SFFloat)),new(s())(_().inputOutput,"clearcoatRoughnessTextureMapping",new(o().SFString)),new(s())(_().inputOutput,"clearcoatRoughnessTexture",new(o().SFNode)),new(s())(_().inputOutput,"clearcoatNormalTextureMapping",new(o().SFString)),new(s())(_().inputOutput,"clearcoatNormalTexture",new(o().SFNode))]),enumerable:!0}});const Y=H;d().add("ClearcoatMaterialExtension","x_ite/Components/X_ITE/ClearcoatMaterialExtension",Y);const k=Y;function G(e){z.call(this,e),this.addType(_().DispersionMaterialExtension)}Object.assign(Object.setPrototypeOf(G.prototype,z.prototype),{initialize(){z.prototype.initialize.call(this)},getExtensionKey:()=>2,getShaderOptions(e){},setShaderUniforms(e,t,n,i,o){}}),Object.defineProperties(G,{typeName:{value:"DispersionMaterialExtension",enumerable:!0},componentInfo:{value:Object.freeze({name:"X_ITE",level:1}),enumerable:!0},containerField:{value:"extensions",enumerable:!0},specificationRange:{value:Object.freeze({from:"4.0",to:"Infinity"}),enumerable:!0},fieldDefinitions:{value:new(u())([new(s())(_().inputOutput,"metadata",new(o().SFNode)),new(s())(_().inputOutput,"dispersion",new(o().SFFloat))]),enumerable:!0}});const K=G;d().add("DispersionMaterialExtension","x_ite/Components/X_ITE/DispersionMaterialExtension",K);const Q=K;function W(e){z.call(this,e),this.addType(_().IORMaterialExtension)}Object.assign(Object.setPrototypeOf(W.prototype,z.prototype),{initialize(){z.prototype.initialize.call(this)},getExtensionKey:()=>3,getShaderOptions(e){},setShaderUniforms(e,t,n,i,o){}}),Object.defineProperties(W,{typeName:{value:"IORMaterialExtension",enumerable:!0},componentInfo:{value:Object.freeze({name:"X_ITE",level:1}),enumerable:!0},containerField:{value:"extensions",enumerable:!0},specificationRange:{value:Object.freeze({from:"4.0",to:"Infinity"}),enumerable:!0},fieldDefinitions:{value:new(u())([new(s())(_().inputOutput,"metadata",new(o().SFNode)),new(s())(_().inputOutput,"indexOfRefraction",new(o().SFFloat)(1.5))]),enumerable:!0}});const Z=W;d().add("IORMaterialExtension","x_ite/Components/X_ITE/IORMaterialExtension",Z);const $=Z;function J(e){z.call(this,e),this.addType(_().IridescenceMaterialExtension)}Object.assign(Object.setPrototypeOf(J.prototype,z.prototype),{initialize(){z.prototype.initialize.call(this)},getExtensionKey:()=>4,getShaderOptions(e){},setShaderUniforms(e,t,n,i,o){}}),Object.defineProperties(J,{typeName:{value:"IridescenceMaterialExtension",enumerable:!0},componentInfo:{value:Object.freeze({name:"X_ITE",level:1}),enumerable:!0},containerField:{value:"extensions",enumerable:!0},specificationRange:{value:Object.freeze({from:"4.0",to:"Infinity"}),enumerable:!0},fieldDefinitions:{value:new(u())([new(s())(_().inputOutput,"metadata",new(o().SFNode)),new(s())(_().inputOutput,"iridescence",new(o().SFFloat)),new(s())(_().inputOutput,"iridescenceTextureMapping",new(o().SFString)),new(s())(_().inputOutput,"iridescenceTexture",new(o().SFNode)),new(s())(_().inputOutput,"iridescenceIndexOfRefraction",new(o().SFFloat)(1.3)),new(s())(_().inputOutput,"iridescenceThicknessMinimum",new(o().SFFloat)(100)),new(s())(_().inputOutput,"iridescenceThicknessMaximum",new(o().SFFloat)(400)),new(s())(_().inputOutput,"iridescenceThicknessTextureMapping",new(o().SFString)),new(s())(_().inputOutput,"iridescenceThicknessTexture",new(o().SFNode))]),enumerable:!0}});const ee=J;d().add("IridescenceMaterialExtension","x_ite/Components/X_ITE/IridescenceMaterialExtension",ee);const te=ee;function ne(e){z.call(this,e),this.addType(_().SheenMaterialExtension)}Object.assign(Object.setPrototypeOf(ne.prototype,z.prototype),{initialize(){z.prototype.initialize.call(this)},getExtensionKey:()=>5,getShaderOptions(e){},setShaderUniforms(e,t,n,i,o){}}),Object.defineProperties(ne,{typeName:{value:"SheenMaterialExtension",enumerable:!0},componentInfo:{value:Object.freeze({name:"X_ITE",level:1}),enumerable:!0},containerField:{value:"extensions",enumerable:!0},specificationRange:{value:Object.freeze({from:"4.0",to:"Infinity"}),enumerable:!0},fieldDefinitions:{value:new(u())([new(s())(_().inputOutput,"metadata",new(o().SFNode)),new(s())(_().inputOutput,"sheenColor",new(o().SFColor)),new(s())(_().inputOutput,"sheenColorTextureMapping",new(o().SFString)),new(s())(_().inputOutput,"sheenColorTexture",new(o().SFNode)),new(s())(_().inputOutput,"sheenRoughness",new(o().SFFloat)),new(s())(_().inputOutput,"sheenRoughnessTextureMapping",new(o().SFString)),new(s())(_().inputOutput,"sheenRoughnessTexture",new(o().SFNode))]),enumerable:!0}});const ie=ne;d().add("SheenMaterialExtension","x_ite/Components/X_ITE/SheenMaterialExtension",ie);const oe=ie,ae=window[Symbol.for("X_ITE.X3D-9.7.0")].require("x_ite/Base/X3DCast");var se=e.n(ae);function re(e){z.call(this,e),this.addType(_().SpecularMaterialExtension),this.specularColorArray=new Float32Array(3)}Object.assign(Object.setPrototypeOf(re.prototype,z.prototype),{initialize(){z.prototype.initialize.call(this),this._specular.addInterest("set_specular__",this),this._specularTexture.addInterest("set_specularTexture__",this),this._specularColor.addInterest("set_specularColor__",this),this._specularColorTexture.addInterest("set_specularColorTexture__",this),this.set_specular__(),this.set_specularTexture__(),this.set_specularColor__(),this.set_specularColorTexture__()},getExtensionKey:()=>6,set_specular__(){this.specular=Math.max(this._specular.getValue(),0)},set_specularTexture__(){this.specularTextureNode=se()(_().X3DSingleTextureNode,this._specularTexture),this.setTexture(0,this.specularTextureNode)},set_specularColor__(){const e=this.specularColorArray,t=this._specularColor.getValue();e[0]=t.r,e[1]=t.g,e[2]=t.b},set_specularColorTexture__(){this.specularColorTextureNode=se()(_().X3DSingleTextureNode,this._specularColorTexture),this.setTexture(1,this.specularColorTextureNode)},getShaderOptions(e){e.push("X3D_SPECULAR_MATERIAL_EXT"),+this.getTextureBits()&&(e.push("X3D_MATERIAL_TEXTURES"),this.specularTextureNode&&e.push("X3D_SPECULAR_MATERIAL_EXT_SPECULAR_TEXTURE",`X3D_SPECULAR_MATERIAL_EXT_SPECULAR_TEXTURE_${this.specularTextureNode.getTextureTypeString()}`),1===this.specularTextureNode?.getTextureType()&&e.push("X3D_SPECULAR_MATERIAL_EXT_SPECULAR_TEXTURE_FLIP_Y"),this.specularColorTextureNode&&e.push("X3D_SPECULAR_MATERIAL_EXT_SPECULAR_COLOR_TEXTURE",`X3D_SPECULAR_MATERIAL_EXT_SPECULAR_COLOR_TEXTURE_${this.specularColorTextureNode.getTextureTypeString()}`),1===this.specularColorTextureNode?.getTextureType()&&e.push("X3D_SPECULAR_MATERIAL_EXT_SPECULAR_COLOR_TEXTURE_FLIP_Y"))},setShaderUniforms(e,t,n,i,o){if(e.uniform1f(t.x3d_SpecularEXT,this.specular),e.uniform3fv(t.x3d_SpecularColorEXT,this.specularColorArray),+this.getTextureBits()){if(this.specularTextureNode){const a=this._specularTextureMapping.getValue(),s=t.x3d_SpecularTextureEXT;this.specularTextureNode.setShaderUniforms(e,t,n,s),e.uniform1i(s.textureTransformMapping,i.get(a)??0),e.uniform1i(s.textureCoordinateMapping,o.get(a)??0)}if(this.specularColorTextureNode){const a=this._specularColorTextureMapping.getValue(),s=t.x3d_SpecularColorTextureEXT;this.specularColorTextureNode.setShaderUniforms(e,t,n,s),e.uniform1i(s.textureTransformMapping,i.get(a)??0),e.uniform1i(s.textureCoordinateMapping,o.get(a)??0)}}}}),Object.defineProperties(re,{typeName:{value:"SpecularMaterialExtension",enumerable:!0},componentInfo:{value:Object.freeze({name:"X_ITE",level:1}),enumerable:!0},containerField:{value:"extensions",enumerable:!0},specificationRange:{value:Object.freeze({from:"4.0",to:"Infinity"}),enumerable:!0},fieldDefinitions:{value:new(u())([new(s())(_().inputOutput,"metadata",new(o().SFNode)),new(s())(_().inputOutput,"specular",new(o().SFFloat)(1)),new(s())(_().inputOutput,"specularTextureMapping",new(o().SFString)),new(s())(_().inputOutput,"specularTexture",new(o().SFNode)),new(s())(_().inputOutput,"specularColor",new(o().SFColor)(1,1,1)),new(s())(_().inputOutput,"specularColorTextureMapping",new(o().SFString)),new(s())(_().inputOutput,"specularColorTexture",new(o().SFNode))]),enumerable:!0}});const ue=re;d().add("SpecularMaterialExtension","x_ite/Components/X_ITE/SpecularMaterialExtension",ue);const pe=ue;function le(e){z.call(this,e),this.addType(_().TransmissionMaterialExtension)}Object.assign(Object.setPrototypeOf(le.prototype,z.prototype),{initialize(){z.prototype.initialize.call(this)},getExtensionKey:()=>7,getShaderOptions(e){},setShaderUniforms(e,t,n,i,o){}}),Object.defineProperties(le,{typeName:{value:"TransmissionMaterialExtension",enumerable:!0},componentInfo:{value:Object.freeze({name:"X_ITE",level:1}),enumerable:!0},containerField:{value:"extensions",enumerable:!0},specificationRange:{value:Object.freeze({from:"4.0",to:"Infinity"}),enumerable:!0},fieldDefinitions:{value:new(u())([new(s())(_().inputOutput,"metadata",new(o().SFNode)),new(s())(_().inputOutput,"transmission",new(o().SFFloat)),new(s())(_().inputOutput,"transmissionTextureMapping",new(o().SFString)),new(s())(_().inputOutput,"transmissionTexture",new(o().SFNode)),new(s())(_().inputOutput,"dispersion",new(o().SFFloat))]),enumerable:!0}});const ce=le;d().add("TransmissionMaterialExtension","x_ite/Components/X_ITE/TransmissionMaterialExtension",ce);const _e=ce;function he(e){z.call(this,e),this.addType(_().VolumeMaterialExtension)}Object.assign(Object.setPrototypeOf(he.prototype,z.prototype),{initialize(){z.prototype.initialize.call(this)},getExtensionKey:()=>8,getShaderOptions(e){},setShaderUniforms(e,t,n,i,o){}}),Object.defineProperties(he,{typeName:{value:"VolumeMaterialExtension",enumerable:!0},componentInfo:{value:Object.freeze({name:"X_ITE",level:1}),enumerable:!0},containerField:{value:"extensions",enumerable:!0},specificationRange:{value:Object.freeze({from:"4.0",to:"Infinity"}),enumerable:!0},fieldDefinitions:{value:new(u())([new(s())(_().inputOutput,"metadata",new(o().SFNode)),new(s())(_().inputOutput,"thickness",new(o().SFFloat)),new(s())(_().inputOutput,"thicknessTextureMapping",new(o().SFString)),new(s())(_().inputOutput,"thicknessTexture",new(o().SFNode)),new(s())(_().inputOutput,"attenuationDistance",new(o().SFFloat)(1e6)),new(s())(_().inputOutput,"attenuationColor",new(o().SFColor)(1,1,1))]),enumerable:!0}});const de=he;d().add("VolumeMaterialExtension","x_ite/Components/X_ITE/VolumeMaterialExtension",de);const Te=de;n().add({name:"X_ITE",concreteNodes:[E,f,D,V,k,Q,$,te,oe,pe,_e,Te],abstractNodes:[z]});const Se=void 0;d().add("X_ITE","assets/components/X_ITE",Se)})();