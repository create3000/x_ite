/* X_ITE v9.6.2 */(()=>{"use strict";var e={n:t=>{var s=t&&t.__esModule?()=>t.default:()=>t;return e.d(s,{a:s}),s},d:(t,s)=>{for(var i in s)e.o(s,i)&&!e.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:s[i]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};const t=window[Symbol.for("X_ITE.X3D-9.6.2")].require("x_ite/Components");var s=e.n(t);const i=window[Symbol.for("X_ITE.X3D-9.6.2")].require("x_ite/Fields");var n=e.n(i);const o=window[Symbol.for("X_ITE.X3D-9.6.2")].require("x_ite/Base/X3DFieldDefinition");var a=e.n(o);const r=window[Symbol.for("X_ITE.X3D-9.6.2")].require("x_ite/Base/FieldDefinitionArray");var _=e.n(r);const h=window[Symbol.for("X_ITE.X3D-9.6.2")].require("x_ite/Components/Shape/X3DAppearanceChildNode");var p=e.n(h);const l=window[Symbol.for("X_ITE.X3D-9.6.2")].require("x_ite/Base/X3DConstants");var u=e.n(l);const c=window[Symbol.for("X_ITE.X3D-9.6.2")].require("x_ite/Namespace");var d=e.n(c);function T(e){p().call(this,e),this.addType(u().BlendMode),this.factorTypes=new Map,this.equationTypes=new Map}Object.assign(Object.setPrototypeOf(T.prototype,p().prototype),{initialize(){p().prototype.initialize.call(this);const e=this.getBrowser().getContext(),t=e.getExtension("EXT_blend_minmax");this.factorTypes.set("ZERO",e.ZERO),this.factorTypes.set("ONE",e.ONE),this.factorTypes.set("SRC_COLOR",e.SRC_COLOR),this.factorTypes.set("ONE_MINUS_SRC_COLOR",e.ONE_MINUS_SRC_COLOR),this.factorTypes.set("DST_COLOR",e.DST_COLOR),this.factorTypes.set("ONE_MINUS_DST_COLOR",e.ONE_MINUS_DST_COLOR),this.factorTypes.set("SRC_ALPHA",e.SRC_ALPHA),this.factorTypes.set("ONE_MINUS_SRC_ALPHA",e.ONE_MINUS_SRC_ALPHA),this.factorTypes.set("DST_ALPHA",e.DST_ALPHA),this.factorTypes.set("ONE_MINUS_DST_ALPHA",e.ONE_MINUS_DST_ALPHA),this.factorTypes.set("SRC_ALPHA_SATURATE",e.SRC_ALPHA_SATURATE),this.factorTypes.set("CONSTANT_COLOR",e.CONSTANT_COLOR),this.factorTypes.set("ONE_MINUS_CONSTANT_COLOR",e.ONE_MINUS_CONSTANT_COLOR),this.factorTypes.set("CONSTANT_ALPHA",e.CONSTANT_ALPHA),this.factorTypes.set("ONE_MINUS_CONSTANT_ALPHA",e.ONE_MINUS_CONSTANT_ALPHA),this.equationTypes.set("FUNC_ADD",e.FUNC_ADD),this.equationTypes.set("FUNC_SUBTRACT",e.FUNC_SUBTRACT),this.equationTypes.set("FUNC_REVERSE_SUBTRACT",e.FUNC_REVERSE_SUBTRACT),this.equationTypes.set("MIN",e.MIN||t&&t.MIN_EXT),this.equationTypes.set("MAX",e.MAX||t&&t.MAX_EXT),this._sourceColorFactor.addInterest("set_sourceColorFactor__",this),this._sourceAlphaFactor.addInterest("set_sourceAlphaFactor__",this),this._destinationColorFactor.addInterest("set_destinationColorFactor__",this),this._destinationAlphaFactor.addInterest("set_destinationAlphaFactor__",this),this._colorEquation.addInterest("set_colorEquation__",this),this._alphaEquation.addInterest("set_alphaEquation__",this),this.set_sourceColorFactor__(),this.set_sourceAlphaFactor__(),this.set_destinationColorFactor__(),this.set_destinationAlphaFactor__(),this.set_colorEquation__(),this.set_alphaEquation__()},set_sourceColorFactor__(){this.sourceColorFactorType=this.factorTypes.get(this._sourceColorFactor.getValue()),void 0===this.sourceColorFactorType&&(this.sourceColorFactorType=this.factorTypes.get("SRC_ALPHA"))},set_sourceAlphaFactor__(){this.sourceAlphaFactorType=this.factorTypes.get(this._sourceAlphaFactor.getValue()),void 0===this.sourceAlphaFactorType&&(this.sourceAlphaFactorType=this.factorTypes.get("ONE"))},set_destinationColorFactor__(){this.destinationColorFactorType=this.factorTypes.get(this._destinationColorFactor.getValue()),void 0===this.destinationColorFactorType&&(this.destinationColorFactorType=this.factorTypes.get("ONE_MINUS_SRC_ALPHA"))},set_destinationAlphaFactor__(){this.destinationAlphaFactorType=this.factorTypes.get(this._destinationAlphaFactor.getValue()),void 0===this.destinationAlphaFactorType&&(this.destinationAlphaFactorType=this.factorTypes.get("ONE_MINUS_SRC_ALPHA"))},set_colorEquation__(){this.colorEquationType=this.equationTypes.get(this._colorEquation.getValue()),void 0===this.colorEquationType&&(this.colorEquationType=this.equationTypes.get("FUNC_ADD"))},set_alphaEquation__(){this.alphaEquationType=this.equationTypes.get(this._alphaEquation.getValue()),void 0===this.alphaEquationType&&(this.alphaEquationType=this.equationTypes.get("FUNC_ADD"))},enable(e){const t=this._blendColor.getValue();e.blendColor(t.r,t.g,t.b,t.a),e.blendFuncSeparate(this.sourceColorFactorType,this.destinationColorFactorType,this.sourceAlphaFactorType,this.destinationAlphaFactorType),e.blendEquationSeparate(this.colorEquationType,this.alphaEquationType)},disable(e){e.blendFuncSeparate(e.SRC_ALPHA,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA),e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD)}}),Object.defineProperties(T,{typeName:{value:"BlendMode",enumerable:!0},componentInfo:{value:Object.freeze({name:"X_ITE",level:1}),enumerable:!0},containerField:{value:"blendMode",enumerable:!0},specificationRange:{value:Object.freeze({from:"3.3",to:"Infinity"}),enumerable:!0},fieldDefinitions:{value:new(_())([new(a())(u().inputOutput,"metadata",new(n().SFNode)),new(a())(u().inputOutput,"blendColor",new(n().SFColorRGBA)),new(a())(u().inputOutput,"sourceColorFactor",new(n().SFString)("SRC_ALPHA")),new(a())(u().inputOutput,"sourceAlphaFactor",new(n().SFString)("ONE")),new(a())(u().inputOutput,"destinationColorFactor",new(n().SFString)("ONE_MINUS_SRC_ALPHA")),new(a())(u().inputOutput,"destinationAlphaFactor",new(n().SFString)("ONE_MINUS_SRC_ALPHA")),new(a())(u().inputOutput,"colorEquation",new(n().SFString)("FUNC_ADD")),new(a())(u().inputOutput,"alphaEquation",new(n().SFString)("FUNC_ADD"))]),enumerable:!0}});const S=T;d().add("BlendMode","x_ite/Components/X_ITE/BlendMode",S);const E=S;function A(e){p().call(this,e),this.addType(u().DepthMode),this.addAlias("depthFunc",this._depthFunction)}Object.assign(Object.setPrototypeOf(A.prototype,p().prototype),{initialize(){p().prototype.initialize.call(this),this._depthFunction.addInterest("set_depthFunction__",this),this.set_depthFunction__()},set_depthFunction__:function(){const e=new Map([["NEVER","NEVER"],["LESS","LESS"],["EQUAL","EQUAL"],["LESS_EQUAL","LEQUAL"],["GREATER","GREATER"],["NOT_EQUAL","NOTEQUAL"],["GREATER_EQUAL","GEQUAL"],["ALWAYS","ALWAYS"]]);return function(){const t=this.getBrowser().getContext();this.depthFunction=t[e.get(this._depthFunction.getValue())??"LEQUAL"]}}(),enable(e){this.depthTest=e.isEnabled(e.DEPTH_TEST),this.depthWriteMask=e.getParameter(e.DEPTH_WRITEMASK),e.enable(e.POLYGON_OFFSET_FILL),e.polygonOffset(...this._polygonOffset),this._depthTest.getValue()?e.enable(e.DEPTH_TEST):e.disable(e.DEPTH_TEST),e.depthFunc(this.depthFunction),e.depthRange(...this._depthRange.getValue()),e.depthMask(this._depthMask.getValue())},disable(e){e.disable(e.POLYGON_OFFSET_FILL),this.depthTest?e.enable(e.DEPTH_TEST):e.disable(e.DEPTH_TEST),e.depthFunc(e.LEQUAL),e.depthRange(0,1),e.depthMask(this.depthWriteMask)}}),Object.defineProperties(A,{typeName:{value:"DepthMode",enumerable:!0},componentInfo:{value:Object.freeze({name:"X_ITE",level:1}),enumerable:!0},containerField:{value:"depthMode",enumerable:!0},specificationRange:{value:Object.freeze({from:"4.0",to:"Infinity"}),enumerable:!0},fieldDefinitions:{value:new(_())([new(a())(u().inputOutput,"metadata",new(n().SFNode)),new(a())(u().inputOutput,"polygonOffset",new(n().SFVec2f)),new(a())(u().inputOutput,"depthRange",new(n().SFVec2f)(0,1)),new(a())(u().inputOutput,"depthTest",new(n().SFBool)(!0)),new(a())(u().inputOutput,"depthFunction",new(n().SFString)("LESS_EQUAL")),new(a())(u().inputOutput,"depthMask",new(n().SFBool)(!0))]),enumerable:!0}});const y=A;d().add("DepthMode","x_ite/Components/X_ITE/DepthMode",y);const O=y,N=window[Symbol.for("X_ITE.X3D-9.6.2")].require("x_ite/Components/Shape/X3DShapeNode");var F=e.n(N);const f=window[Symbol.for("X_ITE.X3D-9.6.2")].require("x_ite/Rendering/TraverseType");var b=e.n(f);const m=window[Symbol.for("X_ITE.X3D-9.6.2")].require("x_ite/Rendering/VertexArray");var I=e.n(m);const w=window[Symbol.for("X_ITE.X3D-9.6.2")].require("standard/Math/Numbers/Vector3");var g=e.n(w);const C=window[Symbol.for("X_ITE.X3D-9.6.2")].require("standard/Math/Numbers/Matrix4");var R=e.n(C);const L=window[Symbol.for("X_ITE.X3D-9.6.2")].require("standard/Math/Geometry/Box3");var D=e.n(L);function M(e){F().call(this,e),this.addType(u().InstancedShape),this.addChildObjects(u().outputOnly,"matrices",new(n().SFTime)),this.min=new(g()),this.max=new(g()),this.scale=new(g())(1,1,1),this.numInstances=0,this.instancesStride=25*Float32Array.BYTES_PER_ELEMENT,this.matrixOffset=0,this.normalMatrixOffset=16*Float32Array.BYTES_PER_ELEMENT}Object.assign(Object.setPrototypeOf(M.prototype,F().prototype),{initialize(){F().prototype.initialize.call(this);const e=this.getBrowser(),t=e.getContext();e.getContext().getVersion()<2||(this.instances=Object.assign(t.createBuffer(),{vertexArrayObject:new(I())(t),thickLinesVertexArrayObject:new(I())(t),lineTrianglesBuffer:t.createBuffer(),numLines:0}),this._translations.addInterest("set_transform__",this),this._rotations.addInterest("set_transform__",this),this._scales.addInterest("set_transform__",this),this._matrices.addInterest("set_matrices__",this),this.set_transform__())},getShapeKey:()=>3,getNumInstances(){return this.numInstances},getInstances(){return this.instances},set_bbox__:function(){const e=new(g()),t=new(g()),s=new(D());return function(){if(this.numInstances)if(this._bboxSize.getValue().equals(this.getDefaultBBoxSize())){this.getGeometry()?s.assign(this.getGeometry().getBBox()):s.set();const i=s.size.multiply(this.scale.magnitude()/2),n=s.center;e.assign(this.min).add(n).subtract(i),t.assign(this.max).add(n).add(i),this.bbox.setExtents(e,t)}else this.bbox.set(this._bboxSize.getValue(),this._bboxCenter.getValue());else this.bbox.set();this.getBBoxSize().assign(this.bbox.size),this.getBBoxCenter().assign(this.bbox.center)}}(),set_transform__(){this._matrices=this.getBrowser().getCurrentTime()},set_matrices__(){const e=this.getBrowser().getContext(),t=this._translations,s=this._rotations,i=this._scales,n=t.length,o=s.length,a=i.length,r=Math.max(n,o,a),_=this.instancesStride/Float32Array.BYTES_PER_ELEMENT,h=this.instancesStride*r,p=new Float32Array(h),l=new(R());this.numInstances=r;const u=this.min.set(Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY),c=this.max.set(Number.NEGATIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.NEGATIVE_INFINITY),d=this.scale.assign(a?c:g().One);for(let e=0,h=0;e<r;++e,h+=_)l.set(n?t[Math.min(e,n-1)].getValue():null,o?s[Math.min(e,o-1)].getValue():null,a?i[Math.min(e,a-1)].getValue():null),a&&d.max(i[Math.min(e,a-1)].getValue()),p.set(l,h),p.set(l.submatrix.transpose().inverse(),h+16),u.min(l.origin),c.max(l.origin);e.bindBuffer(e.ARRAY_BUFFER,this.instances),e.bufferData(e.ARRAY_BUFFER,p,e.DYNAMIC_DRAW),this.set_bbox__()},set_geometry__(){F().prototype.set_geometry__.call(this),this.getGeometry()?delete this.traverse:this.traverse=Function.prototype,this.set_transform__()},intersectsBox(e,t,s){},traverse(e,t){if(this.numInstances){switch(e){case b().POINTER:this._pointerEvents.getValue()&&t.addPointingShape(this);break;case b().PICKING:break;case b().COLLISION:t.addCollisionShape(this);break;case b().SHADOW:this._castShadow.getValue()&&t.addShadowShape(this);break;case b().DISPLAY:t.addDisplayShape(this)&&this.getAppearance().traverse(e,t)}this.getGeometry().traverse(e,t)}},displaySimple(e,t,s){this.getGeometry().displaySimpleInstanced(e,s,this)},display(e,t){this.getGeometry().displayInstanced(e,t,this)}}),Object.defineProperties(M,{typeName:{value:"InstancedShape",enumerable:!0},componentInfo:{value:Object.freeze({name:"X_ITE",level:1}),enumerable:!0},containerField:{value:"children",enumerable:!0},specificationRange:{value:Object.freeze({from:"2.0",to:"Infinity"}),enumerable:!0},fieldDefinitions:{value:new(_())([new(a())(u().inputOutput,"metadata",new(n().SFNode)),new(a())(u().inputOutput,"translations",new(n().MFVec3f)),new(a())(u().inputOutput,"rotations",new(n().MFRotation)),new(a())(u().inputOutput,"scales",new(n().MFVec3f)),new(a())(u().inputOutput,"pointerEvents",new(n().SFBool)(!0)),new(a())(u().inputOutput,"castShadow",new(n().SFBool)(!0)),new(a())(u().inputOutput,"visible",new(n().SFBool)(!0)),new(a())(u().inputOutput,"bboxDisplay",new(n().SFBool)),new(a())(u().initializeOnly,"bboxSize",new(n().SFVec3f)(-1,-1,-1)),new(a())(u().initializeOnly,"bboxCenter",new(n().SFVec3f)),new(a())(u().inputOutput,"appearance",new(n().SFNode)),new(a())(u().inputOutput,"geometry",new(n().SFNode))]),enumerable:!0}});const x=M;d().add("InstancedShape","x_ite/Components/X_ITE/InstancedShape",x);const v=x;s().add({name:"X_ITE",concreteNodes:[E,O,v],abstractNodes:[]});const P=void 0;d().add("X_ITE","assets/components/X_ITE",P)})();