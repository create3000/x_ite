/* X_ITE v9.7.0 */(()=>{"use strict";var e={n:t=>{var n=t&&t.__esModule?()=>t.default:()=>t;return e.d(n,{a:n}),n},d:(t,n)=>{for(var s in n)e.o(n,s)&&!e.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:n[s]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};const t=window[Symbol.for("X_ITE.X3D-9.7.0")].require("x_ite/Components");var n=e.n(t);const s=window[Symbol.for("X_ITE.X3D-9.7.0")].require("x_ite/Fields");var i=e.n(s);const o=window[Symbol.for("X_ITE.X3D-9.7.0")].require("x_ite/Base/X3DFieldDefinition");var a=e.n(o);const r=window[Symbol.for("X_ITE.X3D-9.7.0")].require("x_ite/Base/FieldDefinitionArray");var u=e.n(r);const l=window[Symbol.for("X_ITE.X3D-9.7.0")].require("x_ite/Components/Shape/X3DAppearanceChildNode");var p=e.n(l);const h=window[Symbol.for("X_ITE.X3D-9.7.0")].require("x_ite/Base/X3DConstants");var _=e.n(h);const c=window[Symbol.for("X_ITE.X3D-9.7.0")].require("x_ite/Namespace");var T=e.n(c);function d(e){p().call(this,e),this.addType(_().BlendMode),this.factorTypes=new Map,this.equationTypes=new Map}Object.assign(Object.setPrototypeOf(d.prototype,p().prototype),{initialize(){p().prototype.initialize.call(this);const e=this.getBrowser().getContext(),t=e.getExtension("EXT_blend_minmax");this.factorTypes.set("ZERO",e.ZERO),this.factorTypes.set("ONE",e.ONE),this.factorTypes.set("SRC_COLOR",e.SRC_COLOR),this.factorTypes.set("ONE_MINUS_SRC_COLOR",e.ONE_MINUS_SRC_COLOR),this.factorTypes.set("DST_COLOR",e.DST_COLOR),this.factorTypes.set("ONE_MINUS_DST_COLOR",e.ONE_MINUS_DST_COLOR),this.factorTypes.set("SRC_ALPHA",e.SRC_ALPHA),this.factorTypes.set("ONE_MINUS_SRC_ALPHA",e.ONE_MINUS_SRC_ALPHA),this.factorTypes.set("DST_ALPHA",e.DST_ALPHA),this.factorTypes.set("ONE_MINUS_DST_ALPHA",e.ONE_MINUS_DST_ALPHA),this.factorTypes.set("SRC_ALPHA_SATURATE",e.SRC_ALPHA_SATURATE),this.factorTypes.set("CONSTANT_COLOR",e.CONSTANT_COLOR),this.factorTypes.set("ONE_MINUS_CONSTANT_COLOR",e.ONE_MINUS_CONSTANT_COLOR),this.factorTypes.set("CONSTANT_ALPHA",e.CONSTANT_ALPHA),this.factorTypes.set("ONE_MINUS_CONSTANT_ALPHA",e.ONE_MINUS_CONSTANT_ALPHA),this.equationTypes.set("FUNC_ADD",e.FUNC_ADD),this.equationTypes.set("FUNC_SUBTRACT",e.FUNC_SUBTRACT),this.equationTypes.set("FUNC_REVERSE_SUBTRACT",e.FUNC_REVERSE_SUBTRACT),this.equationTypes.set("MIN",e.MIN||t&&t.MIN_EXT),this.equationTypes.set("MAX",e.MAX||t&&t.MAX_EXT),this._sourceColorFactor.addInterest("set_sourceColorFactor__",this),this._sourceAlphaFactor.addInterest("set_sourceAlphaFactor__",this),this._destinationColorFactor.addInterest("set_destinationColorFactor__",this),this._destinationAlphaFactor.addInterest("set_destinationAlphaFactor__",this),this._colorEquation.addInterest("set_colorEquation__",this),this._alphaEquation.addInterest("set_alphaEquation__",this),this.set_sourceColorFactor__(),this.set_sourceAlphaFactor__(),this.set_destinationColorFactor__(),this.set_destinationAlphaFactor__(),this.set_colorEquation__(),this.set_alphaEquation__()},set_sourceColorFactor__(){this.sourceColorFactorType=this.factorTypes.get(this._sourceColorFactor.getValue()),void 0===this.sourceColorFactorType&&(this.sourceColorFactorType=this.factorTypes.get("SRC_ALPHA"))},set_sourceAlphaFactor__(){this.sourceAlphaFactorType=this.factorTypes.get(this._sourceAlphaFactor.getValue()),void 0===this.sourceAlphaFactorType&&(this.sourceAlphaFactorType=this.factorTypes.get("ONE"))},set_destinationColorFactor__(){this.destinationColorFactorType=this.factorTypes.get(this._destinationColorFactor.getValue()),void 0===this.destinationColorFactorType&&(this.destinationColorFactorType=this.factorTypes.get("ONE_MINUS_SRC_ALPHA"))},set_destinationAlphaFactor__(){this.destinationAlphaFactorType=this.factorTypes.get(this._destinationAlphaFactor.getValue()),void 0===this.destinationAlphaFactorType&&(this.destinationAlphaFactorType=this.factorTypes.get("ONE_MINUS_SRC_ALPHA"))},set_colorEquation__(){this.colorEquationType=this.equationTypes.get(this._colorEquation.getValue()),void 0===this.colorEquationType&&(this.colorEquationType=this.equationTypes.get("FUNC_ADD"))},set_alphaEquation__(){this.alphaEquationType=this.equationTypes.get(this._alphaEquation.getValue()),void 0===this.alphaEquationType&&(this.alphaEquationType=this.equationTypes.get("FUNC_ADD"))},enable(e){const t=this._blendColor.getValue();e.blendColor(t.r,t.g,t.b,t.a),e.blendFuncSeparate(this.sourceColorFactorType,this.destinationColorFactorType,this.sourceAlphaFactorType,this.destinationAlphaFactorType),e.blendEquationSeparate(this.colorEquationType,this.alphaEquationType)},disable(e){e.blendFuncSeparate(e.SRC_ALPHA,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA),e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD)}}),Object.defineProperties(d,{typeName:{value:"BlendMode",enumerable:!0},componentInfo:{value:Object.freeze({name:"X_ITE",level:1}),enumerable:!0},containerField:{value:"blendMode",enumerable:!0},specificationRange:{value:Object.freeze({from:"3.3",to:"Infinity"}),enumerable:!0},fieldDefinitions:{value:new(u())([new(a())(_().inputOutput,"metadata",new(i().SFNode)),new(a())(_().inputOutput,"blendColor",new(i().SFColorRGBA)),new(a())(_().inputOutput,"sourceColorFactor",new(i().SFString)("SRC_ALPHA")),new(a())(_().inputOutput,"sourceAlphaFactor",new(i().SFString)("ONE")),new(a())(_().inputOutput,"destinationColorFactor",new(i().SFString)("ONE_MINUS_SRC_ALPHA")),new(a())(_().inputOutput,"destinationAlphaFactor",new(i().SFString)("ONE_MINUS_SRC_ALPHA")),new(a())(_().inputOutput,"colorEquation",new(i().SFString)("FUNC_ADD")),new(a())(_().inputOutput,"alphaEquation",new(i().SFString)("FUNC_ADD"))]),enumerable:!0}});const E=d;T().add("BlendMode","x_ite/Components/X_ITE/BlendMode",E);const S=E;function m(e){p().call(this,e),this.addType(_().DepthMode),this.addAlias("depthFunc",this._depthFunction)}Object.assign(Object.setPrototypeOf(m.prototype,p().prototype),{initialize(){p().prototype.initialize.call(this),this._depthFunction.addInterest("set_depthFunction__",this),this.set_depthFunction__()},set_depthFunction__:function(){const e=new Map([["NEVER","NEVER"],["LESS","LESS"],["EQUAL","EQUAL"],["LESS_EQUAL","LEQUAL"],["GREATER","GREATER"],["NOT_EQUAL","NOTEQUAL"],["GREATER_EQUAL","GEQUAL"],["ALWAYS","ALWAYS"]]);return function(){const t=this.getBrowser().getContext();this.depthFunction=t[e.get(this._depthFunction.getValue())??"LEQUAL"]}}(),enable(e){this.depthTest=e.isEnabled(e.DEPTH_TEST),this.depthWriteMask=e.getParameter(e.DEPTH_WRITEMASK),e.enable(e.POLYGON_OFFSET_FILL),e.polygonOffset(...this._polygonOffset),this._depthTest.getValue()?e.enable(e.DEPTH_TEST):e.disable(e.DEPTH_TEST),e.depthFunc(this.depthFunction),e.depthRange(...this._depthRange.getValue()),e.depthMask(this._depthMask.getValue())},disable(e){e.disable(e.POLYGON_OFFSET_FILL),this.depthTest?e.enable(e.DEPTH_TEST):e.disable(e.DEPTH_TEST),e.depthFunc(e.LEQUAL),e.depthRange(0,1),e.depthMask(this.depthWriteMask)}}),Object.defineProperties(m,{typeName:{value:"DepthMode",enumerable:!0},componentInfo:{value:Object.freeze({name:"X_ITE",level:1}),enumerable:!0},containerField:{value:"depthMode",enumerable:!0},specificationRange:{value:Object.freeze({from:"4.0",to:"Infinity"}),enumerable:!0},fieldDefinitions:{value:new(u())([new(a())(_().inputOutput,"metadata",new(i().SFNode)),new(a())(_().inputOutput,"polygonOffset",new(i().SFVec2f)),new(a())(_().inputOutput,"depthRange",new(i().SFVec2f)(0,1)),new(a())(_().inputOutput,"depthTest",new(i().SFBool)(!0)),new(a())(_().inputOutput,"depthFunction",new(i().SFString)("LESS_EQUAL")),new(a())(_().inputOutput,"depthMask",new(i().SFBool)(!0))]),enumerable:!0}});const x=m;T().add("DepthMode","x_ite/Components/X_ITE/DepthMode",x);const O=x,g=window[Symbol.for("X_ITE.X3D-9.7.0")].require("x_ite/Components/Shape/X3DShapeNode");var N=e.n(g);const f=window[Symbol.for("X_ITE.X3D-9.7.0")].require("x_ite/Rendering/TraverseType");var y=e.n(f);const I=window[Symbol.for("X_ITE.X3D-9.7.0")].require("x_ite/Rendering/VertexArray");var A=e.n(I);const w=window[Symbol.for("X_ITE.X3D-9.7.0")].require("standard/Math/Numbers/Vector3");var b=e.n(w);const R=window[Symbol.for("X_ITE.X3D-9.7.0")].require("standard/Math/Numbers/Matrix4");var F=e.n(R);const C=window[Symbol.for("X_ITE.X3D-9.7.0")].require("standard/Math/Geometry/Box3");var M=e.n(C);function X(e){N().call(this,e),this.addType(_().InstancedShape),this.addChildObjects(_().outputOnly,"matrices",new(i().SFTime)),this.min=new(b()),this.max=new(b()),this.scale=new(b())(1,1,1),this.numInstances=0,this.instancesStride=25*Float32Array.BYTES_PER_ELEMENT,this.matrixOffset=0,this.normalMatrixOffset=16*Float32Array.BYTES_PER_ELEMENT}Object.assign(Object.setPrototypeOf(X.prototype,N().prototype),{initialize(){N().prototype.initialize.call(this);const e=this.getBrowser(),t=e.getContext();e.getContext().getVersion()<2||(this.instances=Object.assign(t.createBuffer(),{vertexArrayObject:new(A())(t),thickLinesVertexArrayObject:new(A())(t),lineTrianglesBuffer:t.createBuffer(),numLines:0}),this._translations.addInterest("set_transform__",this),this._rotations.addInterest("set_transform__",this),this._scales.addInterest("set_transform__",this),this._matrices.addInterest("set_matrices__",this),this.set_transform__())},getShapeKey:()=>3,getNumInstances(){return this.numInstances},getInstances(){return this.instances},set_bbox__:function(){const e=new(b()),t=new(b()),n=new(M());return function(){if(this.numInstances)if(this._bboxSize.getValue().equals(this.getDefaultBBoxSize())){this.getGeometry()?n.assign(this.getGeometry().getBBox()):n.set();const s=n.size.multiply(this.scale.magnitude()/2),i=n.center;e.assign(this.min).add(i).subtract(s),t.assign(this.max).add(i).add(s),this.bbox.setExtents(e,t)}else this.bbox.set(this._bboxSize.getValue(),this._bboxCenter.getValue());else this.bbox.set();this.getBBoxSize().assign(this.bbox.size),this.getBBoxCenter().assign(this.bbox.center)}}(),set_transform__(){this._matrices=this.getBrowser().getCurrentTime()},set_matrices__(){const e=this.getBrowser().getContext(),t=this._translations,n=this._rotations,s=this._scales,i=t.length,o=n.length,a=s.length,r=Math.max(i,o,a),u=this.instancesStride/Float32Array.BYTES_PER_ELEMENT,l=this.instancesStride*r,p=new Float32Array(l),h=new(F());this.numInstances=r;const _=this.min.set(Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY),c=this.max.set(Number.NEGATIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.NEGATIVE_INFINITY),T=this.scale.assign(a?c:b().One);for(let e=0,l=0;e<r;++e,l+=u)h.set(i?t[Math.min(e,i-1)].getValue():null,o?n[Math.min(e,o-1)].getValue():null,a?s[Math.min(e,a-1)].getValue():null),a&&T.max(s[Math.min(e,a-1)].getValue()),p.set(h,l),p.set(h.submatrix.transpose().inverse(),l+16),_.min(h.origin),c.max(h.origin);e.bindBuffer(e.ARRAY_BUFFER,this.instances),e.bufferData(e.ARRAY_BUFFER,p,e.DYNAMIC_DRAW),this.set_bbox__()},set_geometry__(){N().prototype.set_geometry__.call(this),this.getGeometry()?delete this.traverse:this.traverse=Function.prototype,this.set_transform__()},intersectsBox(e,t,n){},traverse(e,t){if(this.numInstances){switch(e){case y().POINTER:this._pointerEvents.getValue()&&t.addPointingShape(this);break;case y().PICKING:break;case y().COLLISION:t.addCollisionShape(this);break;case y().SHADOW:this._castShadow.getValue()&&t.addShadowShape(this);break;case y().DISPLAY:t.addDisplayShape(this)&&this.getAppearance().traverse(e,t)}this.getGeometry().traverse(e,t)}},displaySimple(e,t,n){this.getGeometry().displaySimpleInstanced(e,n,this)},display(e,t){this.getGeometry().displayInstanced(e,t,this)}}),Object.defineProperties(X,{typeName:{value:"InstancedShape",enumerable:!0},componentInfo:{value:Object.freeze({name:"X_ITE",level:1}),enumerable:!0},containerField:{value:"children",enumerable:!0},specificationRange:{value:Object.freeze({from:"2.0",to:"Infinity"}),enumerable:!0},fieldDefinitions:{value:new(u())([new(a())(_().inputOutput,"metadata",new(i().SFNode)),new(a())(_().inputOutput,"translations",new(i().MFVec3f)),new(a())(_().inputOutput,"rotations",new(i().MFRotation)),new(a())(_().inputOutput,"scales",new(i().MFVec3f)),new(a())(_().inputOutput,"pointerEvents",new(i().SFBool)(!0)),new(a())(_().inputOutput,"castShadow",new(i().SFBool)(!0)),new(a())(_().inputOutput,"visible",new(i().SFBool)(!0)),new(a())(_().inputOutput,"bboxDisplay",new(i().SFBool)),new(a())(_().initializeOnly,"bboxSize",new(i().SFVec3f)(-1,-1,-1)),new(a())(_().initializeOnly,"bboxCenter",new(i().SFVec3f)),new(a())(_().inputOutput,"appearance",new(i().SFNode)),new(a())(_().inputOutput,"geometry",new(i().SFNode))]),enumerable:!0}});const v=X;T().add("InstancedShape","x_ite/Components/X_ITE/InstancedShape",v);const L=v,D=window[Symbol.for("X_ITE.X3D-9.7.0")].require("x_ite/Components/Core/X3DNode");var U=e.n(D);const P=window[Symbol.for("X_ITE.X3D-9.7.0")].require("standard/Utility/BitSet");var j=e.n(P);function V(e){U().call(this,e),this.addType(_().X3DMaterialExtensionNode),this.textureBits=new(j())}Object.assign(Object.setPrototypeOf(V.prototype,U().prototype),{setTexture(e,t){e*=4,this.textureBits.remove(e,15),this.textureBits.add(e,t?.getTextureBits()??0)},getTextureBits(){return this.textureBits}}),Object.defineProperties(V,{typeName:{value:"X3DMaterialExtensionNode",enumerable:!0},componentInfo:{value:Object.freeze({name:"X_ITE",level:1}),enumerable:!0}});const z=V;T().add("X3DMaterialExtensionNode","x_ite/Components/X_ITE/X3DMaterialExtensionNode",z);const B=z,q=window[Symbol.for("X_ITE.X3D-9.7.0")].require("x_ite/Base/X3DCast");var H=e.n(q);let G=0;const Y={ANISOTROPY_MATERIAL_EXTENSION:G++,CLEARCOAT_MATERIAL_EXTENSION:G++,DISPERSION_MATERIAL_EXTENSION:G++,EMISSIVE_STRENGTH_MATERIAL_EXTENSION:G++,IOR_MATERIAL_EXTENSION:G++,IRIDESCENCE_MATERIAL_EXTENSION:G++,SHEEN_MATERIAL_EXTENSION:G++,SPECULAR_MATERIAL_EXTENSION:G++,TRANSMISSION_MATERIAL_EXTENSION:G++,VOLUME_MATERIAL_EXTENSION:G++};T().add("ExtensionKeys","x_ite/Browser/X_ITE/ExtensionKeys",Y);const k=Y;function K(e){B.call(this,e),this.addType(_().AnisotropyMaterialExtension),this.anisotropyArray=new Float32Array(3)}Object.assign(Object.setPrototypeOf(K.prototype,B.prototype),{initialize(){B.prototype.initialize.call(this),this._anisotropyStrength.addInterest("set_anisotropyStrength__",this),this._anisotropyRotation.addInterest("set_anisotropyRotation__",this),this._anisotropyTexture.addInterest("set_anisotropyTexture__",this),this.set_anisotropyStrength__(),this.set_anisotropyRotation__(),this.set_anisotropyTexture__()},getExtensionKey:()=>k.ANISOTROPY_MATERIAL_EXTENSION,set_anisotropyStrength__(){this.anisotropyArray[2]=Math.max(this._anisotropyStrength.getValue(),0)},set_anisotropyRotation__(){const e=this._anisotropyRotation.getValue();this.anisotropyArray[0]=Math.cos(e),this.anisotropyArray[1]=Math.sin(e)},set_anisotropyTexture__(){this.anisotropyTextureNode=H()(_().X3DSingleTextureNode,this._anisotropyTexture),this.setTexture(0,this.anisotropyTextureNode)},getShaderOptions(e){e.push("X3D_ANISOTROPY_MATERIAL_EXT"),+this.getTextureBits()&&(e.push("X3D_MATERIAL_TEXTURES"),this.anisotropyTextureNode?.getShaderOptions(e,"ANISOTROPY",!0))},setShaderUniforms(e,t,n,s,i){e.uniform3fv(t.x3d_AnisotropyEXT,this.anisotropyArray),this.anisotropyTextureNode?.setNamedShaderUniforms(e,t,n,t.x3d_AnisotropyTextureEXT,this._anisotropyTextureMapping.getValue(),s,i)}}),Object.defineProperties(K,{typeName:{value:"AnisotropyMaterialExtension",enumerable:!0},componentInfo:{value:Object.freeze({name:"X_ITE",level:1}),enumerable:!0},containerField:{value:"extensions",enumerable:!0},specificationRange:{value:Object.freeze({from:"4.0",to:"Infinity"}),enumerable:!0},fieldDefinitions:{value:new(u())([new(a())(_().inputOutput,"metadata",new(i().SFNode)),new(a())(_().inputOutput,"anisotropyStrength",new(i().SFFloat)),new(a())(_().inputOutput,"anisotropyRotation",new(i().SFFloat)),new(a())(_().inputOutput,"anisotropyTextureMapping",new(i().SFString)),new(a())(_().inputOutput,"anisotropyTexture",new(i().SFNode))]),enumerable:!0}});const Q=K;T().add("AnisotropyMaterialExtension","x_ite/Components/X_ITE/AnisotropyMaterialExtension",Q);const W=Q,Z=window[Symbol.for("X_ITE.X3D-9.7.0")].require("standard/Math/Algorithm");var J=e.n(Z);function $(e){B.call(this,e),this.addType(_().ClearcoatMaterialExtension)}Object.assign(Object.setPrototypeOf($.prototype,B.prototype),{initialize(){B.prototype.initialize.call(this),this._clearcoat.addInterest("set_clearcoat__",this),this._clearcoatTexture.addInterest("set_clearcoatTexture__",this),this._clearcoatRoughness.addInterest("set_clearcoatRoughness__",this),this._clearcoatRoughnessTexture.addInterest("set_clearcoatRoughnessTexture__",this),this._clearcoatNormalTexture.addInterest("set_clearcoatNormalTexture__",this),this.set_clearcoat__(),this.set_clearcoatTexture__(),this.set_clearcoatRoughness__(),this.set_clearcoatRoughnessTexture__(),this.set_clearcoatNormalTexture__()},getExtensionKey:()=>k.CLEARCOAT_MATERIAL_EXTENSION,set_clearcoat__(){this.clearcoat=Math.max(this._clearcoat.getValue(),0)},set_clearcoatTexture__(){this.clearcoatTextureNode=H()(_().X3DSingleTextureNode,this._clearcoatTexture),this.setTexture(0,this.clearcoatTextureNode)},set_clearcoatRoughness__(){this.clearcoatRoughness=J().clamp(this._clearcoatRoughness.getValue(),0,1)},set_clearcoatRoughnessTexture__(){this.clearcoatRoughnessTextureNode=H()(_().X3DSingleTextureNode,this._clearcoatRoughnessTexture),this.setTexture(1,this.clearcoatRoughnessTextureNode)},set_clearcoatNormalTexture__(){this.clearcoatNormalTextureNode=H()(_().X3DSingleTextureNode,this._clearcoatNormalTexture),this.setTexture(2,this.clearcoatNormalTextureNode)},getShaderOptions(e){e.push("X3D_CLEARCOAT_MATERIAL_EXT"),+this.getTextureBits()&&(e.push("X3D_MATERIAL_TEXTURES"),this.clearcoatTextureNode?.getShaderOptions(e,"CLEARCOAT",!0),this.clearcoatRoughnessTextureNode?.getShaderOptions(e,"CLEARCOAT_ROUGHNESS",!0),this.clearcoatNormalTextureNode?.getShaderOptions(e,"CLEARCOAT_NORMAL",!0))},setShaderUniforms(e,t,n,s,i){e.uniform1f(t.x3d_ClearcoatEXT,this.clearcoat),e.uniform1f(t.x3d_ClearcoatRoughnessEXT,this.clearcoatRoughness),+this.getTextureBits()&&(this.clearcoatTextureNode?.setNamedShaderUniforms(e,t,n,t.x3d_ClearcoatTextureEXT,this._clearcoatTextureMapping.getValue(),s,i),this.clearcoatRoughnessTextureNode?.setNamedShaderUniforms(e,t,n,t.x3d_ClearcoatRoughnessTextureEXT,this._clearcoatRoughnessTextureMapping.getValue(),s,i),this.clearcoatNormalTextureNode?.setNamedShaderUniforms(e,t,n,t.x3d_ClearcoatNormalTextureEXT,this._clearcoatNormalTextureMapping.getValue(),s,i))}}),Object.defineProperties($,{typeName:{value:"ClearcoatMaterialExtension",enumerable:!0},componentInfo:{value:Object.freeze({name:"X_ITE",level:1}),enumerable:!0},containerField:{value:"extensions",enumerable:!0},specificationRange:{value:Object.freeze({from:"4.0",to:"Infinity"}),enumerable:!0},fieldDefinitions:{value:new(u())([new(a())(_().inputOutput,"metadata",new(i().SFNode)),new(a())(_().inputOutput,"clearcoat",new(i().SFFloat)),new(a())(_().inputOutput,"clearcoatTextureMapping",new(i().SFString)),new(a())(_().inputOutput,"clearcoatTexture",new(i().SFNode)),new(a())(_().inputOutput,"clearcoatRoughness",new(i().SFFloat)),new(a())(_().inputOutput,"clearcoatRoughnessTextureMapping",new(i().SFString)),new(a())(_().inputOutput,"clearcoatRoughnessTexture",new(i().SFNode)),new(a())(_().inputOutput,"clearcoatNormalTextureMapping",new(i().SFString)),new(a())(_().inputOutput,"clearcoatNormalTexture",new(i().SFNode))]),enumerable:!0}});const ee=$;T().add("ClearcoatMaterialExtension","x_ite/Components/X_ITE/ClearcoatMaterialExtension",ee);const te=ee;function ne(e){B.call(this,e),this.addType(_().DispersionMaterialExtension)}Object.assign(Object.setPrototypeOf(ne.prototype,B.prototype),{initialize(){B.prototype.initialize.call(this)},getExtensionKey:()=>k.DISPERSION_MATERIAL_EXTENSION,getShaderOptions(e){},setShaderUniforms(e,t,n,s,i){}}),Object.defineProperties(ne,{typeName:{value:"DispersionMaterialExtension",enumerable:!0},componentInfo:{value:Object.freeze({name:"X_ITE",level:1}),enumerable:!0},containerField:{value:"extensions",enumerable:!0},specificationRange:{value:Object.freeze({from:"4.0",to:"Infinity"}),enumerable:!0},fieldDefinitions:{value:new(u())([new(a())(_().inputOutput,"metadata",new(i().SFNode)),new(a())(_().inputOutput,"dispersion",new(i().SFFloat))]),enumerable:!0}});const se=ne;T().add("DispersionMaterialExtension","x_ite/Components/X_ITE/DispersionMaterialExtension",se);const ie=se;function oe(e){B.call(this,e),this.addType(_().EmissiveStrengthMaterialExtension)}Object.assign(Object.setPrototypeOf(oe.prototype,B.prototype),{initialize(){B.prototype.initialize.call(this),this._emissiveStrength.addInterest("set_emissiveStrength__",this),this.set_emissiveStrength__()},getExtensionKey:()=>k.EMISSIVE_STRENGTH_MATERIAL_EXTENSION,set_emissiveStrength__(){this.emissiveStrength=Math.max(this._emissiveStrength.getValue(),0)},getShaderOptions(e){e.push("X3D_EMISSIVE_STRENGTH_MATERIAL_EXT")},setShaderUniforms(e,t,n,s,i){e.uniform1f(t.x3d_EmissiveStrengthEXT,this.emissiveStrength)}}),Object.defineProperties(oe,{typeName:{value:"EmissiveStrengthMaterialExtension",enumerable:!0},componentInfo:{value:Object.freeze({name:"X_ITE",level:1}),enumerable:!0},containerField:{value:"extensions",enumerable:!0},specificationRange:{value:Object.freeze({from:"4.0",to:"Infinity"}),enumerable:!0},fieldDefinitions:{value:new(u())([new(a())(_().inputOutput,"metadata",new(i().SFNode)),new(a())(_().inputOutput,"emissiveStrength",new(i().SFFloat)(1))]),enumerable:!0}});const ae=oe;T().add("EmissiveStrengthMaterialExtension","x_ite/Components/X_ITE/EmissiveStrengthMaterialExtension",ae);const re=ae;function ue(e){B.call(this,e),this.addType(_().IORMaterialExtension)}Object.assign(Object.setPrototypeOf(ue.prototype,B.prototype),{initialize(){B.prototype.initialize.call(this)},getExtensionKey:()=>k.IOR_MATERIAL_EXTENSION,getShaderOptions(e){},setShaderUniforms(e,t,n,s,i){}}),Object.defineProperties(ue,{typeName:{value:"IORMaterialExtension",enumerable:!0},componentInfo:{value:Object.freeze({name:"X_ITE",level:1}),enumerable:!0},containerField:{value:"extensions",enumerable:!0},specificationRange:{value:Object.freeze({from:"4.0",to:"Infinity"}),enumerable:!0},fieldDefinitions:{value:new(u())([new(a())(_().inputOutput,"metadata",new(i().SFNode)),new(a())(_().inputOutput,"indexOfRefraction",new(i().SFFloat)(1.5))]),enumerable:!0}});const le=ue;T().add("IORMaterialExtension","x_ite/Components/X_ITE/IORMaterialExtension",le);const pe=le;function he(e){B.call(this,e),this.addType(_().IridescenceMaterialExtension)}Object.assign(Object.setPrototypeOf(he.prototype,B.prototype),{initialize(){B.prototype.initialize.call(this)},getExtensionKey:()=>k.IRIDESCENCE_MATERIAL_EXTENSION,getShaderOptions(e){},setShaderUniforms(e,t,n,s,i){}}),Object.defineProperties(he,{typeName:{value:"IridescenceMaterialExtension",enumerable:!0},componentInfo:{value:Object.freeze({name:"X_ITE",level:1}),enumerable:!0},containerField:{value:"extensions",enumerable:!0},specificationRange:{value:Object.freeze({from:"4.0",to:"Infinity"}),enumerable:!0},fieldDefinitions:{value:new(u())([new(a())(_().inputOutput,"metadata",new(i().SFNode)),new(a())(_().inputOutput,"iridescence",new(i().SFFloat)),new(a())(_().inputOutput,"iridescenceTextureMapping",new(i().SFString)),new(a())(_().inputOutput,"iridescenceTexture",new(i().SFNode)),new(a())(_().inputOutput,"iridescenceIndexOfRefraction",new(i().SFFloat)(1.3)),new(a())(_().inputOutput,"iridescenceThicknessMinimum",new(i().SFFloat)(100)),new(a())(_().inputOutput,"iridescenceThicknessMaximum",new(i().SFFloat)(400)),new(a())(_().inputOutput,"iridescenceThicknessTextureMapping",new(i().SFString)),new(a())(_().inputOutput,"iridescenceThicknessTexture",new(i().SFNode))]),enumerable:!0}});const _e=he;T().add("IridescenceMaterialExtension","x_ite/Components/X_ITE/IridescenceMaterialExtension",_e);const ce=_e;function Te(e){B.call(this,e),this.addType(_().SheenMaterialExtension),this.sheenColorArray=new Float32Array(3)}Object.assign(Object.setPrototypeOf(Te.prototype,B.prototype),{initialize(){B.prototype.initialize.call(this),this._sheenColor.addInterest("set_sheenColor__",this),this._sheenColorTexture.addInterest("set_sheenColorTexture__",this),this._sheenRoughness.addInterest("set_sheenRoughness__",this),this._sheenRoughnessTexture.addInterest("set_sheenRoughnessTexture__",this),this.set_sheenColor__(),this.set_sheenColorTexture__(),this.set_sheenRoughness__(),this.set_sheenRoughnessTexture__()},getExtensionKey:()=>k.SHEEN_MATERIAL_EXTENSION,set_sheenColor__(){const e=this.sheenColorArray,t=this._sheenColor.getValue();e[0]=t.r,e[1]=t.g,e[2]=t.b},set_sheenColorTexture__(){this.sheenColorTextureNode=H()(_().X3DSingleTextureNode,this._sheenColorTexture),this.setTexture(0,this.sheenColorTextureNode)},set_sheenRoughness__(){this.sheenRoughness=J().clamp(this._sheenRoughness.getValue(),0,1)},set_sheenRoughnessTexture__(){this.sheenRoughnessTextureNode=H()(_().X3DSingleTextureNode,this._sheenRoughnessTexture),this.setTexture(1,this.sheenRoughnessTextureNode)},getShaderOptions(e){e.push("X3D_SHEEN_MATERIAL_EXT"),+this.getTextureBits()&&(e.push("X3D_MATERIAL_TEXTURES"),this.sheenColorTextureNode?.getShaderOptions(e,"SHEEN_COLOR",!0),this.sheenRoughnessTextureNode?.getShaderOptions(e,"SHEEN_ROUGHNESS",!0))},setShaderUniforms(e,t,n,s,i){e.uniform3fv(t.x3d_SheenColorEXT,this.sheenColorArray),e.uniform1f(t.x3d_SheenRoughnessEXT,this.sheenRoughness);const o=this.getBrowser(),a=o.getLibraryTexture("lut_sheen_E.png"),r=o.getTexture2DUnit();e.activeTexture(e.TEXTURE0+r),e.bindTexture(e.TEXTURE_2D,a.getTexture()),e.uniform1i(t.x3d_SheenELUTTextureEXT,r),+this.getTextureBits()&&(this.sheenColorTextureNode?.setNamedShaderUniforms(e,t,n,t.x3d_SheenColorTextureEXT,this._sheenColorTextureMapping.getValue(),s,i),this.sheenRoughnessTextureNode?.setNamedShaderUniforms(e,t,n,t.x3d_SheenRoughnessTextureEXT,this._sheenRoughnessTextureMapping.getValue(),s,i))}}),Object.defineProperties(Te,{typeName:{value:"SheenMaterialExtension",enumerable:!0},componentInfo:{value:Object.freeze({name:"X_ITE",level:1}),enumerable:!0},containerField:{value:"extensions",enumerable:!0},specificationRange:{value:Object.freeze({from:"4.0",to:"Infinity"}),enumerable:!0},fieldDefinitions:{value:new(u())([new(a())(_().inputOutput,"metadata",new(i().SFNode)),new(a())(_().inputOutput,"sheenColor",new(i().SFColor)),new(a())(_().inputOutput,"sheenColorTextureMapping",new(i().SFString)),new(a())(_().inputOutput,"sheenColorTexture",new(i().SFNode)),new(a())(_().inputOutput,"sheenRoughness",new(i().SFFloat)),new(a())(_().inputOutput,"sheenRoughnessTextureMapping",new(i().SFString)),new(a())(_().inputOutput,"sheenRoughnessTexture",new(i().SFNode))]),enumerable:!0}});const de=Te;T().add("SheenMaterialExtension","x_ite/Components/X_ITE/SheenMaterialExtension",de);const Ee=de;function Se(e){B.call(this,e),this.addType(_().SpecularMaterialExtension),this.specularColorArray=new Float32Array(3)}Object.assign(Object.setPrototypeOf(Se.prototype,B.prototype),{initialize(){B.prototype.initialize.call(this),this._specular.addInterest("set_specular__",this),this._specularTexture.addInterest("set_specularTexture__",this),this._specularColor.addInterest("set_specularColor__",this),this._specularColorTexture.addInterest("set_specularColorTexture__",this),this.set_specular__(),this.set_specularTexture__(),this.set_specularColor__(),this.set_specularColorTexture__()},getExtensionKey:()=>k.SPECULAR_MATERIAL_EXTENSION,set_specular__(){this.specular=Math.max(this._specular.getValue(),0)},set_specularTexture__(){this.specularTextureNode=H()(_().X3DSingleTextureNode,this._specularTexture),this.setTexture(0,this.specularTextureNode)},set_specularColor__(){const e=this.specularColorArray,t=this._specularColor.getValue();e[0]=t.r,e[1]=t.g,e[2]=t.b},set_specularColorTexture__(){this.specularColorTextureNode=H()(_().X3DSingleTextureNode,this._specularColorTexture),this.setTexture(1,this.specularColorTextureNode)},getShaderOptions(e){e.push("X3D_SPECULAR_MATERIAL_EXT"),+this.getTextureBits()&&(e.push("X3D_MATERIAL_TEXTURES"),this.specularTextureNode?.getShaderOptions(e,"SPECULAR",!0),this.specularColorTextureNode?.getShaderOptions(e,"SPECULAR_COLOR",!0))},setShaderUniforms(e,t,n,s,i){e.uniform1f(t.x3d_SpecularEXT,this.specular),e.uniform3fv(t.x3d_SpecularColorEXT,this.specularColorArray),+this.getTextureBits()&&(this.specularTextureNode?.setNamedShaderUniforms(e,t,n,t.x3d_SpecularTextureEXT,this._specularTextureMapping.getValue(),s,i),this.specularColorTextureNode?.setNamedShaderUniforms(e,t,n,t.x3d_SpecularColorTextureEXT,this._specularColorTextureMapping.getValue(),s,i))}}),Object.defineProperties(Se,{typeName:{value:"SpecularMaterialExtension",enumerable:!0},componentInfo:{value:Object.freeze({name:"X_ITE",level:1}),enumerable:!0},containerField:{value:"extensions",enumerable:!0},specificationRange:{value:Object.freeze({from:"4.0",to:"Infinity"}),enumerable:!0},fieldDefinitions:{value:new(u())([new(a())(_().inputOutput,"metadata",new(i().SFNode)),new(a())(_().inputOutput,"specular",new(i().SFFloat)(1)),new(a())(_().inputOutput,"specularTextureMapping",new(i().SFString)),new(a())(_().inputOutput,"specularTexture",new(i().SFNode)),new(a())(_().inputOutput,"specularColor",new(i().SFColor)(1,1,1)),new(a())(_().inputOutput,"specularColorTextureMapping",new(i().SFString)),new(a())(_().inputOutput,"specularColorTexture",new(i().SFNode))]),enumerable:!0}});const me=Se;T().add("SpecularMaterialExtension","x_ite/Components/X_ITE/SpecularMaterialExtension",me);const xe=me;function Oe(e){B.call(this,e),this.addType(_().TransmissionMaterialExtension)}Object.assign(Object.setPrototypeOf(Oe.prototype,B.prototype),{initialize(){B.prototype.initialize.call(this),this._transmission.addInterest("set_transmission__",this),this._transmissionTexture.addInterest("set_transmissionTexture__",this),this.set_transmission__(),this.set_transmissionTexture__()},getExtensionKey:()=>k.TRANSMISSION_MATERIAL_EXTENSION,set_transmission__(){this.transmission=Math.max(this._transmission.getValue(),0)},set_transmissionTexture__(){this.transmissionTextureNode=H()(_().X3DSingleTextureNode,this._transmissionTexture),this.setTexture(0,this.transmissionTextureNode)},getShaderOptions(e){e.push("X3D_TRANSMISSION_MATERIAL_EXT"),+this.getTextureBits()&&(e.push("X3D_MATERIAL_TEXTURES"),this.transmissionTextureNode?.getShaderOptions(e,"TRANSMISSION",!0))},setShaderUniforms(e,t,n,s,i){const o=this.getBrowser(),a=o.getTransmissionBuffer(),r=o.getTexture2DUnit();e.uniform1f(t.x3d_TransmissionEXT,this.transmission),e.activeTexture(e.TEXTURE0+r),e.bindTexture(e.TEXTURE_2D,a.getColorTexture()),e.uniform1i(t.x3d_TransmissionFramebufferSamplerEXT,r),e.uniform2i(t.x3d_TransmissionFramebufferSizeEXT,a.getWidth(),a.getHeight()),+this.getTextureBits()&&this.transmissionTextureNode?.setNamedShaderUniforms(e,t,n,t.x3d_TransmissionTextureEXT,this._transmissionTextureMapping.getValue(),s,i)}}),Object.defineProperties(Oe,{typeName:{value:"TransmissionMaterialExtension",enumerable:!0},componentInfo:{value:Object.freeze({name:"X_ITE",level:1}),enumerable:!0},containerField:{value:"extensions",enumerable:!0},specificationRange:{value:Object.freeze({from:"4.0",to:"Infinity"}),enumerable:!0},fieldDefinitions:{value:new(u())([new(a())(_().inputOutput,"metadata",new(i().SFNode)),new(a())(_().inputOutput,"transmission",new(i().SFFloat)),new(a())(_().inputOutput,"transmissionTextureMapping",new(i().SFString)),new(a())(_().inputOutput,"transmissionTexture",new(i().SFNode))]),enumerable:!0}});const ge=Oe;T().add("TransmissionMaterialExtension","x_ite/Components/X_ITE/TransmissionMaterialExtension",ge);const Ne=ge;function fe(e){B.call(this,e),this.addType(_().VolumeMaterialExtension)}Object.assign(Object.setPrototypeOf(fe.prototype,B.prototype),{initialize(){B.prototype.initialize.call(this)},getExtensionKey:()=>k.VOLUME_MATERIAL_EXTENSION,getShaderOptions(e){},setShaderUniforms(e,t,n,s,i){}}),Object.defineProperties(fe,{typeName:{value:"VolumeMaterialExtension",enumerable:!0},componentInfo:{value:Object.freeze({name:"X_ITE",level:1}),enumerable:!0},containerField:{value:"extensions",enumerable:!0},specificationRange:{value:Object.freeze({from:"4.0",to:"Infinity"}),enumerable:!0},fieldDefinitions:{value:new(u())([new(a())(_().inputOutput,"metadata",new(i().SFNode)),new(a())(_().inputOutput,"thickness",new(i().SFFloat)),new(a())(_().inputOutput,"thicknessTextureMapping",new(i().SFString)),new(a())(_().inputOutput,"thicknessTexture",new(i().SFNode)),new(a())(_().inputOutput,"attenuationDistance",new(i().SFFloat)(1e6)),new(a())(_().inputOutput,"attenuationColor",new(i().SFColor)(1,1,1))]),enumerable:!0}});const ye=fe;T().add("VolumeMaterialExtension","x_ite/Components/X_ITE/VolumeMaterialExtension",ye);const Ie=ye;n().add({name:"X_ITE",concreteNodes:[S,O,L,W,te,ie,re,pe,ce,Ee,xe,Ne,Ie],abstractNodes:[B]});const Ae=void 0;T().add("X_ITE","assets/components/X_ITE",Ae)})();