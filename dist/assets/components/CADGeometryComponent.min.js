/* X_ITE v11.2.2 */
const e=window[Symbol.for("X_ITE.X3D-11.2.2")];(()=>{var t={n:e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},d:(e,n)=>{for(var i in n)t.o(n,i)&&!t.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:n[i]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};const n=e.Components;var i=t.n(n);const o=e.Fields;var s=t.n(o);const r=e.X3DFieldDefinition;var a=t.n(r);const l=e.FieldDefinitionArray;var d=t.n(l);const u=e.X3DNode;var p=t.n(u);const c=e.X3DGroupingNode;var w=t.n(c);const h=e.X3DChildNode;var b=t.n(h);const O=e.X3DConstants;var y=t.n(O);const S=e.Namespace;var _=t.n(S);function F(e){b().call(this,e),this.addType(y().X3DProductStructureChildNode)}Object.setPrototypeOf(F.prototype,b().prototype),Object.defineProperties(F,p().getStaticProperties("X3DProductStructureChildNode","CADGeometry",2));const N=F,f=_().add("X3DProductStructureChildNode",N);function m(e){w().call(this,e),f.call(this,e),this.addType(y().CADAssembly)}Object.assign(Object.setPrototypeOf(m.prototype,w().prototype),{}),Object.defineProperties(m,{...p().getStaticProperties("CADAssembly","CADGeometry",2,"children","3.1"),fieldDefinitions:{value:new(d())([new(a())(y().inputOutput,"metadata",new(s().SFNode)),new(a())(y().inputOutput,"name",new(s().SFString)),new(a())(y().inputOutput,"visible",new(s().SFBool)(!0)),new(a())(y().inputOutput,"bboxDisplay",new(s().SFBool)),new(a())(y().initializeOnly,"bboxSize",new(s().SFVec3f)(-1,-1,-1)),new(a())(y().initializeOnly,"bboxCenter",new(s().SFVec3f)),new(a())(y().inputOnly,"addChildren",new(s().MFNode)),new(a())(y().inputOnly,"removeChildren",new(s().MFNode)),new(a())(y().inputOutput,"children",new(s().MFNode))]),enumerable:!0}});const D=m,g=_().add("CADAssembly",D),C=e.X3DBoundedObject;var v=t.n(C);const P=e.TraverseType;var x=t.n(P);const j=e.X3DCast;var z=t.n(j);function A(e){f.call(this,e),v().call(this,e),this.addType(y().CADFace)}Object.assign(Object.setPrototypeOf(A.prototype,f.prototype),v().prototype,{initialize(){f.prototype.initialize.call(this),v().prototype.initialize.call(this),this._shape.addInterest("set_shape__",this),this.set_shape__()},getBBox(e,t){return this._bboxSize.getValue().equals(this.getDefaultBBoxSize())?this.visibleNode?.getBBox(e,t)??e.set():e.set(this._bboxSize.getValue(),this._bboxCenter.getValue())},set_shape__(){this.childNode&&(this.childNode._isCameraObject.removeInterest("set_cameraObject__",this),this.childNode._isPickableObject.removeInterest("set_transformSensors__",this),this.childNode._display.removeInterest("set_display__",this),this.childNode._bboxDisplay.removeInterest("set_bboxDisplay__",this)),this.childNode=null;const e=z()(y().X3DChildNode,this._shape);if(e){const t=e.getType();for(let n=t.length-1;n>=0;--n){switch(t[n]){case y().LOD:case y().Transform:case y().X3DShapeNode:e._isCameraObject.addInterest("set_cameraObject__",this),e._isPickableObject.addInterest("set_transformSensors__",this),e._display.addInterest("set_display__",this),e._bboxDisplay.addInterest("set_bboxDisplay__",this),this.childNode=e;break;default:continue}break}}this.childNode?delete this.traverse:this.traverse=Function.prototype,this.set_display__(),this.set_bboxDisplay__()},set_cameraObject__(){this.setCameraObject(this.visibleNode?.isCameraObject())},set_transformSensors__(){this.setPickableObject(this.visibleNode?.isPickableObject())},set_display__(){this.childNode?this.visibleNode=this.childNode._display.getValue()?this.childNode:null:this.visibleNode=null,this.set_cameraObject__(),this.set_transformSensors__()},set_bboxDisplay__(){this.childNode?this.boundedObject=this.childNode._bboxDisplay.getValue()?this.childNode:null:this.boundedObject=null},traverse(e,t){switch(e){case x().POINTER:case x().CAMERA:case x().SHADOW:return void this.visibleNode?.traverse(e,t);case x().PICKING:{const n=this.getBrowser().getPickingHierarchy();return n.push(this),this.visibleNode?.traverse(e,t),void n.pop()}case x().COLLISION:return void this.visibleNode?.traverse(e,t);case x().DISPLAY:return this.visibleNode?.traverse(e,t),void this.boundedObject?.displayBBox(e,t)}},dispose(){v().prototype.dispose.call(this),f.prototype.dispose.call(this)}}),Object.defineProperties(A,{...p().getStaticProperties("CADFace","CADGeometry",2,"children","3.1"),fieldDefinitions:{value:new(d())([new(a())(y().inputOutput,"metadata",new(s().SFNode)),new(a())(y().inputOutput,"name",new(s().SFString)),new(a())(y().inputOutput,"visible",new(s().SFBool)(!0)),new(a())(y().inputOutput,"bboxDisplay",new(s().SFBool)),new(a())(y().initializeOnly,"bboxSize",new(s().SFVec3f)(-1,-1,-1)),new(a())(y().initializeOnly,"bboxCenter",new(s().SFVec3f)),new(a())(y().inputOutput,"shape",new(s().SFNode))]),enumerable:!0}});const B=A,I=_().add("CADFace",B);function V(e){w().call(this,e),this.addType(y().CADLayer)}Object.setPrototypeOf(V.prototype,w().prototype),Object.defineProperties(V,{...p().getStaticProperties("CADLayer","CADGeometry",2,"children","3.1"),fieldDefinitions:{value:new(d())([new(a())(y().inputOutput,"metadata",new(s().SFNode)),new(a())(y().inputOutput,"name",new(s().SFString)),new(a())(y().inputOutput,"visible",new(s().SFBool)(!0)),new(a())(y().inputOutput,"bboxDisplay",new(s().SFBool)),new(a())(y().initializeOnly,"bboxSize",new(s().SFVec3f)(-1,-1,-1)),new(a())(y().initializeOnly,"bboxCenter",new(s().SFVec3f)),new(a())(y().inputOnly,"addChildren",new(s().MFNode)),new(a())(y().inputOnly,"removeChildren",new(s().MFNode)),new(a())(y().inputOutput,"children",new(s().MFNode))]),enumerable:!0}});const M=V,T=_().add("CADLayer",M),X=e.X3DTransformNode;var G=t.n(X);function k(e){G().call(this,e),f.call(this,e),this.addType(y().CADPart)}Object.assign(Object.setPrototypeOf(k.prototype,G().prototype),{}),Object.defineProperties(k,{...p().getStaticProperties("CADPart","CADGeometry",2,"children","3.1"),fieldDefinitions:{value:new(d())([new(a())(y().inputOutput,"metadata",new(s().SFNode)),new(a())(y().inputOutput,"name",new(s().SFString)),new(a())(y().inputOutput,"translation",new(s().SFVec3f)),new(a())(y().inputOutput,"rotation",new(s().SFRotation)),new(a())(y().inputOutput,"scale",new(s().SFVec3f)(1,1,1)),new(a())(y().inputOutput,"scaleOrientation",new(s().SFRotation)),new(a())(y().inputOutput,"center",new(s().SFVec3f)),new(a())(y().inputOutput,"visible",new(s().SFBool)(!0)),new(a())(y().inputOutput,"bboxDisplay",new(s().SFBool)),new(a())(y().initializeOnly,"bboxSize",new(s().SFVec3f)(-1,-1,-1)),new(a())(y().initializeOnly,"bboxCenter",new(s().SFVec3f)),new(a())(y().inputOnly,"addChildren",new(s().MFNode)),new(a())(y().inputOnly,"removeChildren",new(s().MFNode)),new(a())(y().inputOutput,"children",new(s().MFNode))]),enumerable:!0}});const L=k,Q=_().add("CADPart",L),R=e.X3DComposedGeometryNode;var E=t.n(R);function H(e){E().call(this,e),this.addType(y().IndexedQuadSet)}Object.assign(Object.setPrototypeOf(H.prototype,E().prototype),{initialize(){E().prototype.initialize.call(this),this._set_index.addFieldInterest(this._index)},getTriangleIndex(e){const t=e%6;return 4*Math.floor(e/6)+t%3+Math.floor(t/4)},getPolygonIndex(e){return this._index[e]},getVerticesPerPolygon:()=>4,getNumVertices(){return this._index.length},build(){let e=this._index.length;e-=e%4,E().prototype.build.call(this,4,e,6,e/4*6)}}),Object.defineProperties(H,{...p().getStaticProperties("IndexedQuadSet","CADGeometry",1,"geometry","3.1"),fieldDefinitions:{value:new(d())([new(a())(y().inputOutput,"metadata",new(s().SFNode)),new(a())(y().inputOnly,"set_index",new(s().MFInt32)),new(a())(y().initializeOnly,"solid",new(s().SFBool)(!0)),new(a())(y().initializeOnly,"ccw",new(s().SFBool)(!0)),new(a())(y().initializeOnly,"colorPerVertex",new(s().SFBool)(!0)),new(a())(y().initializeOnly,"normalPerVertex",new(s().SFBool)(!0)),new(a())(y().initializeOnly,"index",new(s().MFInt32)),new(a())(y().inputOutput,"attrib",new(s().MFNode)),new(a())(y().inputOutput,"fogCoord",new(s().SFNode)),new(a())(y().inputOutput,"color",new(s().SFNode)),new(a())(y().inputOutput,"texCoord",new(s().SFNode)),new(a())(y().inputOutput,"tangent",new(s().SFNode)),new(a())(y().inputOutput,"normal",new(s().SFNode)),new(a())(y().inputOutput,"coord",new(s().SFNode))]),enumerable:!0}});const q=H,K=_().add("IndexedQuadSet",q);function W(e){E().call(this,e),this.addType(y().QuadSet)}Object.assign(Object.setPrototypeOf(W.prototype,E().prototype),{getTriangleIndex(e){const t=e%6;return 4*Math.floor(e/6)+t%3+Math.floor(t/4)},getVerticesPerPolygon:()=>4,getNumVertices(){return this.getCoord()?.getSize()},build(){if(!this.getCoord())return;let e=this.getCoord().getSize();e-=e%4,E().prototype.build.call(this,4,e,6,e/4*6)},createNormals(e,t,n){return this.createFaceNormals(e,t,n)}}),Object.defineProperties(W,{...p().getStaticProperties("QuadSet","CADGeometry",1,"geometry","3.1"),fieldDefinitions:{value:new(d())([new(a())(y().inputOutput,"metadata",new(s().SFNode)),new(a())(y().initializeOnly,"solid",new(s().SFBool)(!0)),new(a())(y().initializeOnly,"ccw",new(s().SFBool)(!0)),new(a())(y().initializeOnly,"colorPerVertex",new(s().SFBool)(!0)),new(a())(y().initializeOnly,"normalPerVertex",new(s().SFBool)(!0)),new(a())(y().inputOutput,"attrib",new(s().MFNode)),new(a())(y().inputOutput,"fogCoord",new(s().SFNode)),new(a())(y().inputOutput,"color",new(s().SFNode)),new(a())(y().inputOutput,"texCoord",new(s().SFNode)),new(a())(y().inputOutput,"tangent",new(s().SFNode)),new(a())(y().inputOutput,"normal",new(s().SFNode)),new(a())(y().inputOutput,"coord",new(s().SFNode))]),enumerable:!0}});const Y=W,J=_().add("QuadSet",Y);i().add({name:"CADGeometry",concreteNodes:[g,I,T,Q,K,J],abstractNodes:[f]});_().add("CADGeometryComponent",undefined)})();