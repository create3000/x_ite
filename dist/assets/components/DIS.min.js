/* X_ITE v10.2.0 */
const __X_ITE_X3D__=window[Symbol.for("X_ITE.X3D-10.2.0")];(()=>{"use strict";var t={n:e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},d:(e,n)=>{for(var i in n)t.o(n,i)&&!t.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:n[i]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e)};const e=__X_ITE_X3D__.Components;var n=t.n(e);const i=__X_ITE_X3D__.Fields;var u=t.n(i);const p=__X_ITE_X3D__.X3DFieldDefinition;var a=t.n(p);const o=__X_ITE_X3D__.FieldDefinitionArray;var w=t.n(o);const l=__X_ITE_X3D__.X3DChildNode;var r=t.n(l);const S=__X_ITE_X3D__.X3DConstants;var O=t.n(S);const c=__X_ITE_X3D__.Namespace;var s=t.n(c);function F(t){r().call(this,t),this.addType(O().DISEntityManager),t.getSpecificationVersion()<=3.3&&this.addAlias("mapping",this._children)}Object.setPrototypeOf(F.prototype,r().prototype),Object.defineProperties(F,{typeName:{value:"DISEntityManager",enumerable:!0},componentInfo:{value:Object.freeze({name:"DIS",level:2}),enumerable:!0},containerField:{value:"children",enumerable:!0},specificationRange:{value:Object.freeze({from:"3.0",to:"Infinity"}),enumerable:!0},fieldDefinitions:{value:new(w())([new(a())(O().inputOutput,"metadata",new(u().SFNode)),new(a())(O().inputOutput,"address",new(u().SFString)("localhost")),new(a())(O().inputOutput,"applicationID",new(u().SFInt32)),new(a())(O().inputOutput,"children",new(u().MFNode)),new(a())(O().inputOutput,"port",new(u().SFInt32)),new(a())(O().inputOutput,"siteID",new(u().SFInt32)),new(a())(O().outputOnly,"addedEntities",new(u().MFNode)),new(a())(O().outputOnly,"removedEntities",new(u().MFNode))]),enumerable:!0}});const d=F,y=s().add("DISEntityManager",d),I=__X_ITE_X3D__.X3DInfoNode;var m=t.n(I);const f=__X_ITE_X3D__.X3DUrlObject;var _=t.n(f);function b(t){m().call(this,t),_().call(this,t),this.addType(O().DISEntityTypeMapping)}Object.assign(Object.setPrototypeOf(b.prototype,m().prototype),_().prototype,{initialize(){m().prototype.initialize.call(this),_().prototype.initialize.call(this)},dispose(){_().prototype.dispose.call(this),m().prototype.dispose.call(this)}}),Object.defineProperties(b,{typeName:{value:"DISEntityTypeMapping",enumerable:!0},componentInfo:{value:Object.freeze({name:"DIS",level:2}),enumerable:!0},containerField:{value:"children",enumerable:!0},specificationRange:{value:Object.freeze({from:"3.0",to:"Infinity"}),enumerable:!0},fieldDefinitions:{value:new(w())([new(a())(O().inputOutput,"metadata",new(u().SFNode)),new(a())(O().inputOutput,"description",new(u().SFString)),new(a())(O().inputOutput,"load",new(u().SFBool)(!0)),new(a())(O().inputOutput,"url",new(u().MFString)),new(a())(O().inputOutput,"autoRefresh",new(u().SFTime)),new(a())(O().inputOutput,"autoRefreshTimeLimit",new(u().SFTime)(3600)),new(a())(O().initializeOnly,"category",new(u().SFInt32)),new(a())(O().initializeOnly,"country",new(u().SFInt32)),new(a())(O().initializeOnly,"domain",new(u().SFInt32)),new(a())(O().initializeOnly,"extra",new(u().SFInt32)),new(a())(O().initializeOnly,"kind",new(u().SFInt32)),new(a())(O().initializeOnly,"specific",new(u().SFInt32)),new(a())(O().initializeOnly,"subcategory",new(u().SFInt32))]),enumerable:!0}});const D=b,h=s().add("DISEntityTypeMapping",D),g=__X_ITE_X3D__.X3DGroupingNode;var v=t.n(g);const T=__X_ITE_X3D__.X3DSensorNode;var P=t.n(T);function z(t){v().call(this,t),P().call(this,t),this.addType(O().EspduTransform),t.getSpecificationVersion()<=3.3&&(this._applicationID=1,this._munitionApplicationID=1)}Object.assign(Object.setPrototypeOf(z.prototype,v().prototype),P().prototype,{initialize(){v().prototype.initialize.call(this),P().prototype.initialize.call(this)}}),Object.defineProperties(z,{typeName:{value:"EspduTransform",enumerable:!0},componentInfo:{value:Object.freeze({name:"DIS",level:1}),enumerable:!0},containerField:{value:"children",enumerable:!0},specificationRange:{value:Object.freeze({from:"3.0",to:"Infinity"}),enumerable:!0},fieldDefinitions:{value:new(w())([new(a())(O().inputOutput,"metadata",new(u().SFNode)),new(a())(O().inputOutput,"description",new(u().SFString)),new(a())(O().inputOutput,"enabled",new(u().SFBool)(!0)),new(a())(O().inputOutput,"visible",new(u().SFBool)(!0)),new(a())(O().inputOutput,"bboxDisplay",new(u().SFBool)),new(a())(O().initializeOnly,"bboxSize",new(u().SFVec3f)(-1,-1,-1)),new(a())(O().initializeOnly,"bboxCenter",new(u().SFVec3f)),new(a())(O().inputOnly,"addChildren",new(u().MFNode)),new(a())(O().inputOnly,"removeChildren",new(u().MFNode)),new(a())(O().inputOutput,"children",new(u().MFNode)),new(a())(O().outputOnly,"isActive",new(u().SFBool)),new(a())(O().inputOnly,"set_articulationParameterValue0",new(u().SFFloat)),new(a())(O().inputOnly,"set_articulationParameterValue1",new(u().SFFloat)),new(a())(O().inputOnly,"set_articulationParameterValue2",new(u().SFFloat)),new(a())(O().inputOnly,"set_articulationParameterValue3",new(u().SFFloat)),new(a())(O().inputOnly,"set_articulationParameterValue4",new(u().SFFloat)),new(a())(O().inputOnly,"set_articulationParameterValue5",new(u().SFFloat)),new(a())(O().inputOnly,"set_articulationParameterValue6",new(u().SFFloat)),new(a())(O().inputOnly,"set_articulationParameterValue7",new(u().SFFloat)),new(a())(O().inputOutput,"address",new(u().SFString)("localhost")),new(a())(O().inputOutput,"applicationID",new(u().SFInt32)),new(a())(O().inputOutput,"articulationParameterCount",new(u().SFInt32)),new(a())(O().inputOutput,"articulationParameterDesignatorArray",new(u().MFInt32)),new(a())(O().inputOutput,"articulationParameterChangeIndicatorArray",new(u().MFInt32)),new(a())(O().inputOutput,"articulationParameterIdPartAttachedToArray",new(u().MFInt32)),new(a())(O().inputOutput,"articulationParameterTypeArray",new(u().MFInt32)),new(a())(O().inputOutput,"articulationParameterArray",new(u().MFFloat)),new(a())(O().inputOutput,"center",new(u().SFVec3f)),new(a())(O().inputOutput,"collisionType",new(u().SFInt32)),new(a())(O().inputOutput,"deadReckoning",new(u().SFInt32)),new(a())(O().inputOutput,"detonationLocation",new(u().SFVec3f)),new(a())(O().inputOutput,"detonationRelativeLocation",new(u().SFVec3f)),new(a())(O().inputOutput,"detonationResult",new(u().SFInt32)),new(a())(O().inputOutput,"entityCategory",new(u().SFInt32)),new(a())(O().inputOutput,"entityCountry",new(u().SFInt32)),new(a())(O().inputOutput,"entityDomain",new(u().SFInt32)),new(a())(O().inputOutput,"entityExtra",new(u().SFInt32)),new(a())(O().inputOutput,"entityID",new(u().SFInt32)),new(a())(O().inputOutput,"entityKind",new(u().SFInt32)),new(a())(O().inputOutput,"entitySpecific",new(u().SFInt32)),new(a())(O().inputOutput,"entitySubcategory",new(u().SFInt32)),new(a())(O().inputOutput,"eventApplicationID",new(u().SFInt32)),new(a())(O().inputOutput,"eventEntityID",new(u().SFInt32)),new(a())(O().inputOutput,"eventNumber",new(u().SFInt32)),new(a())(O().inputOutput,"eventSiteID",new(u().SFInt32)),new(a())(O().inputOutput,"fired1",new(u().SFBool)),new(a())(O().inputOutput,"fired2",new(u().SFBool)),new(a())(O().inputOutput,"fireMissionIndex",new(u().SFInt32)),new(a())(O().inputOutput,"firingRange",new(u().SFFloat)),new(a())(O().inputOutput,"firingRate",new(u().SFInt32)),new(a())(O().inputOutput,"forceID",new(u().SFInt32)),new(a())(O().inputOutput,"fuse",new(u().SFInt32)),new(a())(O().inputOutput,"linearVelocity",new(u().SFVec3f)),new(a())(O().inputOutput,"linearAcceleration",new(u().SFVec3f)),new(a())(O().inputOutput,"marking",new(u().SFString)),new(a())(O().inputOutput,"multicastRelayHost",new(u().SFString)),new(a())(O().inputOutput,"multicastRelayPort",new(u().SFInt32)),new(a())(O().inputOutput,"munitionApplicationID",new(u().SFInt32)),new(a())(O().inputOutput,"munitionEndPoint",new(u().SFVec3f)),new(a())(O().inputOutput,"munitionEntityID",new(u().SFInt32)),new(a())(O().inputOutput,"munitionQuantity",new(u().SFInt32)),new(a())(O().inputOutput,"munitionSiteID",new(u().SFInt32)),new(a())(O().inputOutput,"munitionStartPoint",new(u().SFVec3f)),new(a())(O().inputOutput,"networkMode",new(u().SFString)("standAlone")),new(a())(O().inputOutput,"port",new(u().SFInt32)),new(a())(O().inputOutput,"readInterval",new(u().SFTime)(.1)),new(a())(O().inputOutput,"rotation",new(u().SFRotation)),new(a())(O().inputOutput,"scale",new(u().SFVec3f)(1,1,1)),new(a())(O().inputOutput,"scaleOrientation",new(u().SFRotation)),new(a())(O().inputOutput,"siteID",new(u().SFInt32)),new(a())(O().inputOutput,"translation",new(u().SFVec3f)),new(a())(O().inputOutput,"warhead",new(u().SFInt32)),new(a())(O().inputOutput,"writeInterval",new(u().SFTime)(1)),new(a())(O().outputOnly,"articulationParameterValue0_changed",new(u().SFFloat)),new(a())(O().outputOnly,"articulationParameterValue1_changed",new(u().SFFloat)),new(a())(O().outputOnly,"articulationParameterValue2_changed",new(u().SFFloat)),new(a())(O().outputOnly,"articulationParameterValue3_changed",new(u().SFFloat)),new(a())(O().outputOnly,"articulationParameterValue4_changed",new(u().SFFloat)),new(a())(O().outputOnly,"articulationParameterValue5_changed",new(u().SFFloat)),new(a())(O().outputOnly,"articulationParameterValue6_changed",new(u().SFFloat)),new(a())(O().outputOnly,"articulationParameterValue7_changed",new(u().SFFloat)),new(a())(O().outputOnly,"collideTime",new(u().SFTime)),new(a())(O().outputOnly,"detonateTime",new(u().SFTime)),new(a())(O().outputOnly,"firedTime",new(u().SFTime)),new(a())(O().outputOnly,"isCollided",new(u().SFBool)),new(a())(O().outputOnly,"isDetonated",new(u().SFBool)),new(a())(O().outputOnly,"isNetworkReader",new(u().SFBool)),new(a())(O().outputOnly,"isNetworkWriter",new(u().SFBool)),new(a())(O().outputOnly,"isRtpHeaderHeard",new(u().SFBool)),new(a())(O().outputOnly,"isStandAlone",new(u().SFBool)),new(a())(O().outputOnly,"timestamp",new(u().SFTime)),new(a())(O().inputOutput,"rtpHeaderExpected",new(u().SFBool)),new(a())(O().inputOutput,"geoCoords",new(u().SFVec3d)),new(a())(O().initializeOnly,"geoSystem",new(u().MFString)("GD","WE"))]),enumerable:!0}});const V=z,E=s().add("EspduTransform",V),B=__X_ITE_X3D__.X3DBoundedObject;var N=t.n(B);function R(t){P().call(this,t),N().call(this,t),this.addType(O().ReceiverPdu),t.getSpecificationVersion()<=3.3&&(this._applicationID=1,this._transmitterApplicationID=1)}Object.assign(Object.setPrototypeOf(R.prototype,P().prototype),N().prototype,{initialize(){P().prototype.initialize.call(this),N().prototype.initialize.call(this)},dispose(){N().prototype.dispose.call(this),P().prototype.dispose.call(this)}}),Object.defineProperties(R,{typeName:{value:"ReceiverPdu",enumerable:!0},componentInfo:{value:Object.freeze({name:"DIS",level:1}),enumerable:!0},containerField:{value:"children",enumerable:!0},specificationRange:{value:Object.freeze({from:"3.0",to:"Infinity"}),enumerable:!0},fieldDefinitions:{value:new(w())([new(a())(O().inputOutput,"metadata",new(u().SFNode)),new(a())(O().inputOutput,"description",new(u().SFString)),new(a())(O().inputOutput,"visible",new(u().SFBool)(!0)),new(a())(O().inputOutput,"bboxDisplay",new(u().SFBool)),new(a())(O().initializeOnly,"bboxSize",new(u().SFVec3f)(-1,-1,-1)),new(a())(O().initializeOnly,"bboxCenter",new(u().SFVec3f)),new(a())(O().inputOutput,"enabled",new(u().SFBool)(!0)),new(a())(O().outputOnly,"isActive",new(u().SFBool)),new(a())(O().inputOutput,"address",new(u().SFString)("localhost")),new(a())(O().inputOutput,"applicationID",new(u().SFInt32)),new(a())(O().inputOutput,"entityID",new(u().SFInt32)),new(a())(O().inputOutput,"multicastRelayHost",new(u().SFString)),new(a())(O().inputOutput,"multicastRelayPort",new(u().SFInt32)),new(a())(O().inputOutput,"networkMode",new(u().SFString)("standAlone")),new(a())(O().inputOutput,"port",new(u().SFInt32)),new(a())(O().inputOutput,"radioID",new(u().SFInt32)),new(a())(O().inputOutput,"readInterval",new(u().SFTime)(.1)),new(a())(O().inputOutput,"receivedPower",new(u().SFFloat)),new(a())(O().inputOutput,"receiverState",new(u().SFInt32)),new(a())(O().inputOutput,"rtpHeaderExpected",new(u().SFBool)),new(a())(O().inputOutput,"siteID",new(u().SFInt32)),new(a())(O().inputOutput,"transmitterApplicationID",new(u().SFInt32)),new(a())(O().inputOutput,"transmitterEntityID",new(u().SFInt32)),new(a())(O().inputOutput,"transmitterRadioID",new(u().SFInt32)),new(a())(O().inputOutput,"transmitterSiteID",new(u().SFInt32)),new(a())(O().inputOutput,"whichGeometry",new(u().SFInt32)(1)),new(a())(O().inputOutput,"writeInterval",new(u().SFTime)(1)),new(a())(O().outputOnly,"isNetworkReader",new(u().SFBool)),new(a())(O().outputOnly,"isNetworkWriter",new(u().SFBool)),new(a())(O().outputOnly,"isRtpHeaderHeard",new(u().SFBool)),new(a())(O().outputOnly,"isStandAlone",new(u().SFBool)),new(a())(O().outputOnly,"timestamp",new(u().SFTime)),new(a())(O().inputOutput,"geoCoords",new(u().SFVec3d)),new(a())(O().initializeOnly,"geoSystem",new(u().MFString)("GD","WE"))]),enumerable:!0}});const X=R,j=s().add("ReceiverPdu",X);function M(t){P().call(this,t),N().call(this,t),this.addType(O().SignalPdu),t.getSpecificationVersion()<=3.3&&(this._applicationID=1)}Object.assign(Object.setPrototypeOf(M.prototype,P().prototype),N().prototype,{initialize(){P().prototype.initialize.call(this),N().prototype.initialize.call(this)},dispose(){N().prototype.dispose.call(this),P().prototype.dispose.call(this)}}),Object.defineProperties(M,{typeName:{value:"SignalPdu",enumerable:!0},componentInfo:{value:Object.freeze({name:"DIS",level:1}),enumerable:!0},containerField:{value:"children",enumerable:!0},specificationRange:{value:Object.freeze({from:"3.0",to:"Infinity"}),enumerable:!0},fieldDefinitions:{value:new(w())([new(a())(O().inputOutput,"metadata",new(u().SFNode)),new(a())(O().inputOutput,"description",new(u().SFString)),new(a())(O().inputOutput,"visible",new(u().SFBool)(!0)),new(a())(O().inputOutput,"bboxDisplay",new(u().SFBool)),new(a())(O().initializeOnly,"bboxSize",new(u().SFVec3f)(-1,-1,-1)),new(a())(O().initializeOnly,"bboxCenter",new(u().SFVec3f)),new(a())(O().inputOutput,"enabled",new(u().SFBool)(!0)),new(a())(O().outputOnly,"isActive",new(u().SFBool)),new(a())(O().inputOutput,"address",new(u().SFString)("localhost")),new(a())(O().inputOutput,"applicationID",new(u().SFInt32)),new(a())(O().inputOutput,"data",new(u().MFInt32)),new(a())(O().inputOutput,"dataLength",new(u().SFInt32)),new(a())(O().inputOutput,"encodingScheme",new(u().SFInt32)),new(a())(O().inputOutput,"entityID",new(u().SFInt32)),new(a())(O().inputOutput,"multicastRelayHost",new(u().SFString)),new(a())(O().inputOutput,"multicastRelayPort",new(u().SFInt32)),new(a())(O().inputOutput,"networkMode",new(u().SFString)("standAlone")),new(a())(O().inputOutput,"port",new(u().SFInt32)),new(a())(O().inputOutput,"radioID",new(u().SFInt32)),new(a())(O().inputOutput,"readInterval",new(u().SFTime)(.1)),new(a())(O().inputOutput,"rtpHeaderExpected",new(u().SFBool)),new(a())(O().inputOutput,"sampleRate",new(u().SFInt32)),new(a())(O().inputOutput,"samples",new(u().SFInt32)),new(a())(O().inputOutput,"siteID",new(u().SFInt32)),new(a())(O().inputOutput,"tdlType",new(u().SFInt32)),new(a())(O().inputOutput,"whichGeometry",new(u().SFInt32)(1)),new(a())(O().inputOutput,"writeInterval",new(u().SFTime)(1)),new(a())(O().outputOnly,"isNetworkReader",new(u().SFBool)),new(a())(O().outputOnly,"isNetworkWriter",new(u().SFBool)),new(a())(O().outputOnly,"isRtpHeaderHeard",new(u().SFBool)),new(a())(O().outputOnly,"isStandAlone",new(u().SFBool)),new(a())(O().outputOnly,"timestamp",new(u().SFTime)),new(a())(O().inputOutput,"geoCoords",new(u().SFVec3d)),new(a())(O().initializeOnly,"geoSystem",new(u().MFString)("GD","WE"))]),enumerable:!0}});const A=M,C=s().add("SignalPdu",A);function x(t){P().call(this,t),N().call(this,t),this.addType(O().TransmitterPdu),t.getSpecificationVersion()<=3.3&&(this._applicationID=1)}Object.assign(Object.setPrototypeOf(x.prototype,P().prototype),N().prototype,{initialize(){P().prototype.initialize.call(this),N().prototype.initialize.call(this)},dispose(){N().prototype.dispose.call(this),P().prototype.dispose.call(this)}}),Object.defineProperties(x,{typeName:{value:"TransmitterPdu",enumerable:!0},componentInfo:{value:Object.freeze({name:"DIS",level:1}),enumerable:!0},containerField:{value:"children",enumerable:!0},specificationRange:{value:Object.freeze({from:"3.0",to:"Infinity"}),enumerable:!0},fieldDefinitions:{value:new(w())([new(a())(O().inputOutput,"metadata",new(u().SFNode)),new(a())(O().inputOutput,"description",new(u().SFString)),new(a())(O().inputOutput,"visible",new(u().SFBool)(!0)),new(a())(O().inputOutput,"bboxDisplay",new(u().SFBool)),new(a())(O().initializeOnly,"bboxSize",new(u().SFVec3f)(-1,-1,-1)),new(a())(O().initializeOnly,"bboxCenter",new(u().SFVec3f)),new(a())(O().inputOutput,"enabled",new(u().SFBool)(!0)),new(a())(O().outputOnly,"isActive",new(u().SFBool)),new(a())(O().inputOutput,"address",new(u().SFString)("localhost")),new(a())(O().inputOutput,"antennaLocation",new(u().SFVec3f)),new(a())(O().inputOutput,"antennaPatternLength",new(u().SFInt32)),new(a())(O().inputOutput,"antennaPatternType",new(u().SFInt32)),new(a())(O().inputOutput,"applicationID",new(u().SFInt32)),new(a())(O().inputOutput,"cryptoKeyID",new(u().SFInt32)),new(a())(O().inputOutput,"cryptoSystem",new(u().SFInt32)),new(a())(O().inputOutput,"entityID",new(u().SFInt32)),new(a())(O().inputOutput,"frequency",new(u().SFInt32)),new(a())(O().inputOutput,"inputSource",new(u().SFInt32)),new(a())(O().inputOutput,"lengthOfModulationParameters",new(u().SFInt32)),new(a())(O().inputOutput,"modulationTypeDetail",new(u().SFInt32)),new(a())(O().inputOutput,"modulationTypeMajor",new(u().SFInt32)),new(a())(O().inputOutput,"modulationTypeSpreadSpectrum",new(u().SFInt32)),new(a())(O().inputOutput,"modulationTypeSystem",new(u().SFInt32)),new(a())(O().inputOutput,"multicastRelayHost",new(u().SFString)),new(a())(O().inputOutput,"multicastRelayPort",new(u().SFInt32)),new(a())(O().inputOutput,"networkMode",new(u().SFString)("standAlone")),new(a())(O().inputOutput,"port",new(u().SFInt32)),new(a())(O().inputOutput,"power",new(u().SFFloat)),new(a())(O().inputOutput,"radioEntityTypeCategory",new(u().SFInt32)),new(a())(O().inputOutput,"radioEntityTypeCountry",new(u().SFInt32)),new(a())(O().inputOutput,"radioEntityTypeDomain",new(u().SFInt32)),new(a())(O().inputOutput,"radioEntityTypeKind",new(u().SFInt32)),new(a())(O().inputOutput,"radioEntityTypeNomenclature",new(u().SFInt32)),new(a())(O().inputOutput,"radioEntityTypeNomenclatureVersion",new(u().SFInt32)),new(a())(O().inputOutput,"radioID",new(u().SFInt32)),new(a())(O().inputOutput,"readInterval",new(u().SFTime)(.1)),new(a())(O().inputOutput,"relativeAntennaLocation",new(u().SFVec3f)),new(a())(O().inputOutput,"rtpHeaderExpected",new(u().SFBool)),new(a())(O().inputOutput,"siteID",new(u().SFInt32)),new(a())(O().inputOutput,"transmitFrequencyBandwidth",new(u().SFFloat)),new(a())(O().inputOutput,"transmitState",new(u().SFInt32)),new(a())(O().inputOutput,"whichGeometry",new(u().SFInt32)(1)),new(a())(O().inputOutput,"writeInterval",new(u().SFTime)(1)),new(a())(O().outputOnly,"isNetworkReader",new(u().SFBool)),new(a())(O().outputOnly,"isNetworkWriter",new(u().SFBool)),new(a())(O().outputOnly,"isRtpHeaderHeard",new(u().SFBool)),new(a())(O().outputOnly,"isStandAlone",new(u().SFBool)),new(a())(O().outputOnly,"timestamp",new(u().SFTime)),new(a())(O().inputOutput,"geoCoords",new(u().SFVec3d)),new(a())(O().initializeOnly,"geoSystem",new(u().MFString)("GD","WE"))]),enumerable:!0}});const H=x,k=s().add("TransmitterPdu",H);n().add({name:"DIS",concreteNodes:[y,h,E,j,C,k],abstractNodes:[]});s().add("DIS",undefined)})();