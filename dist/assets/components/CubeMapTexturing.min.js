/* X_ITE v10.2.0 */
const __X_ITE_X3D__=window[Symbol.for("X_ITE.X3D-10.2.0")];(()=>{"use strict";var e={588:e=>{e.exports=__X_ITE_X3D__.require("lib/jquery")}},t={};function r(i){var a=t[i];if(void 0!==a)return a.exports;var s=t[i]={exports:{}};return e[i](s,s.exports,r),s.exports}r.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return r.d(t,{a:t}),t},r.d=(e,t)=>{for(var i in t)r.o(t,i)&&!r.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);const i=__X_ITE_X3D__.require("x_ite/Components");var a=r.n(i);const s=__X_ITE_X3D__.require("x_ite/Namespace");var n=r.n(s);const o="\nprecision highp float;precision highp int;precision highp sampler2D;const float M_PI=3.1415926535897932384626433832795;varying vec2 texCoord;uniform sampler2D x3d_PanoramaTexture;uniform int x3d_CurrentFace;vec3 uvToXYZ(const in int face,const in vec2 uv){vec3 xyz;if(face==0)xyz=vec3(1.0,uv.y,uv.x);else if(face==1)xyz=vec3(-1.0,uv.y,-uv.x);else if(face==2)xyz=vec3(uv.x,uv.y,-1.0);else if(face==3)xyz=vec3(-uv.x,uv.y,1.0);else if(face==4)xyz=vec3(uv.y,-1.0,uv.x);else xyz=vec3(-uv.y,1.0,uv.x);return xyz;}vec2 dirToUV(const in vec3 dir){return vec2(0.5+0.5*atan(dir.z,dir.x)/M_PI,1.0-acos(dir.y)/M_PI);}vec3 panoramaToCubeMap(const in int face,const in vec2 texCoord){vec3 scan=uvToXYZ(face,texCoord);vec3 direction=normalize(scan);vec2 src=dirToUV(direction);return texture2D(x3d_PanoramaTexture,src).rgb;}void main(){gl_FragColor=vec4(panoramaToCubeMap(x3d_CurrentFace,texCoord),1.0);}";n().add("Panorama1.fs","x_ite/Browser/CubeMapTexturing/Panorama1.fs",o);const u=o,_="#version 300 es\nprecision highp float;precision highp int;precision highp sampler2D;const float M_PI=3.1415926535897932384626433832795;in vec2 texCoord;out vec4 x3d_FragColor;uniform sampler2D x3d_PanoramaTexture;uniform int x3d_CurrentFace;vec3 uvToXYZ(const in int face,const in vec2 uv){switch(face){case 0:return vec3(1.0,uv.y,uv.x);case 1:return vec3(-1.0,uv.y,-uv.x);case 2:return vec3(uv.x,uv.y,-1.0);case 3:return vec3(-uv.x,uv.y,1.0);case 4:return vec3(uv.y,-1.0,uv.x);default:return vec3(-uv.y,1.0,uv.x);}}vec2 dirToUV(const in vec3 dir){return vec2(0.5+0.5*atan(dir.z,dir.x)/M_PI,1.0-acos(dir.y)/M_PI);}vec3 panoramaToCubeMap(const in int face,const in vec2 texCoord){vec3 scan=uvToXYZ(face,texCoord);vec3 direction=normalize(scan);vec2 src=dirToUV(direction);return texture(x3d_PanoramaTexture,src).rgb;}void main(){x3d_FragColor=vec4(panoramaToCubeMap(x3d_CurrentFace,texCoord),1.0);}";n().add("Panorama2.fs","x_ite/Browser/CubeMapTexturing/Panorama2.fs",_);const h=_,T=Symbol();function d(){}Object.assign(d.prototype,{getPanoramaShader(){return this[T]?this[T]:this[T]=this.createShader("Panorama","FullScreen","data:x-shader/x-fragment,"+["",u,h][this.getContext().getVersion()],[],["x3d_PanoramaTexture","x3d_CurrentFace"])}});const c=d;n().add("X3DCubeMapTexturingContext","x_ite/Browser/CubeMapTexturing/X3DCubeMapTexturingContext",c);const p=c,x=__X_ITE_X3D__.require("x_ite/Fields");var g=r.n(x);const l=__X_ITE_X3D__.require("x_ite/Base/X3DFieldDefinition");var m=r.n(l);const f=__X_ITE_X3D__.require("x_ite/Base/FieldDefinitionArray");var E=r.n(f);const b=__X_ITE_X3D__.require("x_ite/Components/Texturing/X3DSingleTextureNode");var v=r.n(b);const w=__X_ITE_X3D__.require("x_ite/Base/X3DConstants");var M=r.n(w);function C(e){v().call(this,e),this.addType(M().X3DEnvironmentTextureNode);const t=this.getBrowser().getContext();this.target=t.TEXTURE_CUBE_MAP,this.targets=[t.TEXTURE_CUBE_MAP_POSITIVE_Z,t.TEXTURE_CUBE_MAP_NEGATIVE_Z,t.TEXTURE_CUBE_MAP_NEGATIVE_X,t.TEXTURE_CUBE_MAP_POSITIVE_X,t.TEXTURE_CUBE_MAP_POSITIVE_Y,t.TEXTURE_CUBE_MAP_NEGATIVE_Y],this.size=1,this.levels=0}Object.assign(Object.setPrototypeOf(C.prototype,v().prototype),{getTarget(){return this.target},getTextureType:()=>4,getTargets(){return this.targets},getSize(){return this.size},setSize(e){this.size=e,this.levels=Math.floor(Math.log2(Math.max(e,1)))},getLevels(){return this.levels},clearTexture:(()=>{const e=new Uint8Array([255,255,255,255]);return function(){const t=this.getBrowser().getContext();t.bindTexture(this.getTarget(),this.getTexture());for(const r of this.getTargets())t.texImage2D(r,0,t.RGBA,1,1,0,t.RGBA,t.UNSIGNED_BYTE,e);this.setSize(1),this.setTransparent(!1),this.updateTextureParameters()}})(),updateTextureParameters(){v().prototype.updateTextureParameters.call(this,this.target,this._textureProperties.getValue(),this.texturePropertiesNode,this.size,this.size,!1,!1,!1)},setShaderUniforms(e,t,r,i=t.x3d_Texture[0]){const a=this.getBrowser().getTextureCubeUnit();e.activeTexture(e.TEXTURE0+a),e.bindTexture(e.TEXTURE_CUBE_MAP,this.getTexture()),e.uniform1i(i.textureCube,a)}}),Object.defineProperties(C,{typeName:{value:"X3DEnvironmentTextureNode",enumerable:!0},componentInfo:{value:Object.freeze({name:"CubeMapTexturing",level:1}),enumerable:!0}});const R=C;n().add("X3DEnvironmentTextureNode","x_ite/Components/CubeMapTexturing/X3DEnvironmentTextureNode",R);const I=R,y=__X_ITE_X3D__.require("x_ite/Base/X3DCast");var X=r.n(y);const D=__X_ITE_X3D__.require("standard/Utility/BitSet");var S=r.n(D);function U(e){I.call(this,e),this.addType(M().ComposedCubeMapTexture),this.addChildObjects(M().inputOutput,"update",new(g().SFTime)),e.getSpecificationVersion()<=3.3&&(this.addAlias("front",this._frontTexture),this.addAlias("back",this._backTexture),this.addAlias("left",this._leftTexture),this.addAlias("right",this._rightTexture),this.addAlias("top",this._topTexture),this.addAlias("bottom",this._bottomTexture)),this.textureNodes=[null,null,null,null,null,null],this.textureBits=new(S())}Object.assign(Object.setPrototypeOf(U.prototype,I.prototype),{initialize(){I.prototype.initialize.call(this);const e=this.getBrowser().getContext();this.frameBuffer=e.createFramebuffer(),this.clearTexture(),this._frontTexture.addInterest("set_texture__",this,0),this._backTexture.addInterest("set_texture__",this,1),this._leftTexture.addInterest("set_texture__",this,2),this._rightTexture.addInterest("set_texture__",this,3),this._topTexture.addInterest("set_texture__",this,5),this._bottomTexture.addInterest("set_texture__",this,4),this._update.addInterest("update",this),this.set_texture__(0,this._frontTexture),this.set_texture__(1,this._backTexture),this.set_texture__(2,this._leftTexture),this.set_texture__(3,this._rightTexture),this.set_texture__(4,this._topTexture),this.set_texture__(5,this._bottomTexture)},set_texture__(e,t){let r=this.textureNodes[e];r?.removeInterest(`set_loadState${e}__`,this),r=this.textureNodes[e]=X()(M().X3DTexture2DNode,t),r?.addInterest(`set_loadState${e}__`,this,e,r),this.set_loadState__(e,r)},set_loadState__(e,t){this.setTextureBit(e,t?.checkLoadState()),this._update.addEvent()},setTextureBit(e,t){this.textureBits.set(e,t===M().COMPLETE_STATE)},isComplete(){if(63!=+this.textureBits)return!1;const e=this.textureNodes,t=e[0].getWidth();for(const r of e){if(r.getWidth()!==t)return!1;if(r.getHeight()!==t)return!1}return!0},update(){if(this.isComplete()){const e=this.getBrowser().getContext(),t=this.textureNodes,r=t[0].getWidth();if(r!==this.getSize()){const t=new Uint8Array(r*r*4);e.bindTexture(this.getTarget(),this.getTexture());for(let i=0;i<6;++i)e.texImage2D(this.getTargets()[i],0,e.RGBA,r,r,0,e.RGBA,e.UNSIGNED_BYTE,t);this.setSize(r),this.updateTextureParameters()}e.bindFramebuffer(e.FRAMEBUFFER,this.frameBuffer);for(let i=0;i<6;++i){const a=t[i];if(e.bindTexture(e.TEXTURE_2D,a.getTexture()),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,a.getTexture(),0),e.bindTexture(this.getTarget(),this.getTexture()),1===a.getTextureType())e.copyTexSubImage2D(this.getTargets()[i],0,0,0,0,0,r,r);else for(let t=0;t<r;++t)e.copyTexSubImage2D(this.getTargets()[i],0,0,r-t-1,0,t,r,1)}this.setTransparent(t.some((e=>e.isTransparent()))),this.setLinear(t.some((e=>e.isLinear()))),this.setMipMaps(t.every((e=>e.canMipMaps()))),this.updateTextureParameters()}else this.clearTexture()}}),Object.defineProperties(U,{typeName:{value:"ComposedCubeMapTexture",enumerable:!0},componentInfo:{value:Object.freeze({name:"CubeMapTexturing",level:1}),enumerable:!0},containerField:{value:"texture",enumerable:!0},specificationRange:{value:Object.freeze({from:"3.1",to:"Infinity"}),enumerable:!0},fieldDefinitions:{value:new(E())([new(m())(M().inputOutput,"metadata",new(g().SFNode)),new(m())(M().inputOutput,"description",new(g().SFString)),new(m())(M().inputOutput,"frontTexture",new(g().SFNode)),new(m())(M().inputOutput,"backTexture",new(g().SFNode)),new(m())(M().inputOutput,"leftTexture",new(g().SFNode)),new(m())(M().inputOutput,"rightTexture",new(g().SFNode)),new(m())(M().inputOutput,"topTexture",new(g().SFNode)),new(m())(M().inputOutput,"bottomTexture",new(g().SFNode)),new(m())(M().initializeOnly,"textureProperties",new(g().SFNode))]),enumerable:!0}});for(let e=0;e<6;++e)U.prototype[`set_loadState${e}__`]=function(e,t){this.set_loadState__(e,t)};const O=U;n().add("ComposedCubeMapTexture","x_ite/Components/CubeMapTexturing/ComposedCubeMapTexture",O);const A=O,P=__X_ITE_X3D__.require("x_ite/Base/X3DBaseNode");var B=r.n(P);const N=__X_ITE_X3D__.require("x_ite/Rendering/X3DRenderObject");var F=r.n(N);const z=__X_ITE_X3D__.require("x_ite/Rendering/TraverseType");var L=r.n(z);function V(e,t,r){B().call(this,e),F().call(this,e),this.node=r,this.renderObject=t}Object.assign(Object.setPrototypeOf(V.prototype,B().prototype),F().prototype,{initialize(){B().prototype.initialize.call(this),F().prototype.initialize.call(this)},isIndependent:()=>!1,getNode(){return this.node},getLayer(){return this.renderObject.getLayer()},getBackground(){return this.renderObject.getBackground()},getFog(){return this.renderObject.getFog()},getNavigationInfo(){return this.renderObject.getNavigationInfo()},getViewpoint(){return this.renderObject.getViewpoint()},getViewpointStack(){return this.renderObject.getViewpointStack()},getLightContainer(){return this.renderObject.getLights()[this.lightIndex++]},render(e,t,r){switch(e){case L().COLLISION:case L().SHADOW:F().prototype.render.call(this,e,t,r);break;case L().DISPLAY:this.lightIndex=0,F().prototype.render.call(this,e,t,r);for(const e of this.renderObject.getLights())e.modelViewMatrix.pop()}}});for(const e of Object.keys(V.prototype))Object.defineProperty(V.prototype,e,{enumerable:!1});const j=V;n().add("DependentRenderer","x_ite/Rendering/DependentRenderer",j);const G=j,q=__X_ITE_X3D__.require("x_ite/Rendering/TextureBuffer");var k=r.n(q);const Y=__X_ITE_X3D__.require("standard/Math/Geometry/Camera");var W=r.n(Y);const H=__X_ITE_X3D__.require("standard/Math/Geometry/ViewVolume");var $=r.n(H);const Z=__X_ITE_X3D__.require("standard/Math/Numbers/Rotation4");var K=r.n(Z);const J=__X_ITE_X3D__.require("standard/Math/Numbers/Vector3");var Q=r.n(J);const ee=__X_ITE_X3D__.require("standard/Math/Numbers/Vector4");var te=r.n(ee);const re=__X_ITE_X3D__.require("standard/Math/Numbers/Matrix4");var ie=r.n(re);const ae=__X_ITE_X3D__.require("standard/Math/Algorithm");var se=r.n(ae);function ne(e){I.call(this,e),this.addType(M().GeneratedCubeMapTexture),this.dependentRenderers=new WeakMap,this.projectionMatrix=new(ie()),this.modelMatrix=new(ie()),this.viewVolume=new($())}Object.assign(Object.setPrototypeOf(ne.prototype,I.prototype),{initialize(){I.prototype.initialize.call(this),this._size.addInterest("set_size__",this),this.set_size__()},set_size__(){const e=this.getBrowser().getContext(),t=e.getVersion()>=2?this._size.getValue():se().nextPowerOfTwo(this._size.getValue());if(t>0){const r=new Uint8Array(t*t*4);e.bindTexture(this.getTarget(),this.getTexture());for(const i of this.getTargets())e.texImage2D(i,0,e.RGBA,t,t,0,e.RGBA,e.UNSIGNED_BYTE,r);this.updateTextureParameters(),this.viewport=new(te())(0,0,t,t),this.frameBuffer=new(k())(this.getBrowser(),t,t),this.setSize(t)}else this.frameBuffer=null,this.setSize(0)},traverse(e,t){"NONE"!==this._update.getValue()&&t.isIndependent()&&this.frameBuffer&&(t.getGeneratedCubeMapTextures().push(this),this.modelMatrix.assign(t.getModelViewMatrix().get()).multRight(t.getCameraSpaceMatrix().get()))},renderTexture:(()=>{const e=[new(K())(Q().zAxis,new(Q())(0,0,-1)),new(K())(Q().zAxis,new(Q())(0,0,1)),new(K())(Q().zAxis,new(Q())(1,0,0)),new(K())(Q().zAxis,new(Q())(-1,0,0)),new(K())(Q().zAxis,new(Q())(0,-1,0)),new(K())(Q().zAxis,new(Q())(0,1,0))],t=[new(Q())(-1,-1,1),new(Q())(-1,-1,1),new(Q())(-1,-1,1),new(Q())(-1,-1,1),new(Q())(1,1,1),new(Q())(1,1,1)],r=new(ie());return function(i){if(!this.dependentRenderers.has(i)){const e=new G(this.getExecutionContext(),i,this);e.setup(),this.dependentRenderers.set(i,e)}const a=this.dependentRenderers.get(i),s=this.getBrowser(),n=i.getLayer(),o=s.getContext(),u=a.getBackground(),_=a.getNavigationInfo(),h=a.getViewpoint(),T=s.getHeadlight(),d=_._headlight.getValue(),c=_.getNearValue(),p=_.getFarValue(h),x=W().perspective(se().radians(90),c,p,1,1,this.projectionMatrix),g=this.frameBuffer.getWidth(),l=this.frameBuffer.getHeight();this.setTransparent(u.isTransparent()),this.frameBuffer.bind(),a.getViewVolumes().push(this.viewVolume.set(x,this.viewport,this.viewport)),a.getProjectionMatrix().pushMatrix(x),o.bindTexture(this.getTarget(),this.getTexture());for(let i=0;i<6;++i)o.clear(o.COLOR_BUFFER_BIT),a.getCameraSpaceMatrix().pushMatrix(this.modelMatrix),a.getCameraSpaceMatrix().rotate(e[i]),a.getCameraSpaceMatrix().scale(t[i]),a.getViewMatrix().pushMatrix(r.assign(a.getCameraSpaceMatrix().get()).inverse()),a.getModelViewMatrix().pushMatrix(r),d&&(T.modelViewMatrix.pushMatrix(r),T.modelViewMatrix.multLeft(h.getCameraSpaceMatrix())),n.traverse(L().DISPLAY,a),d&&T.modelViewMatrix.pop(),a.getModelViewMatrix().pop(),a.getCameraSpaceMatrix().pop(),a.getViewMatrix().pop(),o.bindTexture(this.getTarget(),this.getTexture()),o.copyTexSubImage2D(this.getTargets()[i],0,0,0,0,0,g,l);this.updateTextureParameters(),a.getProjectionMatrix().pop(),a.getViewVolumes().pop(),"NEXT_FRAME_ONLY"===this._update.getValue()&&(this._update="NONE")}})(),setShaderUniforms:(()=>{const e=new Float32Array(16);return function(t,r,i,a){I.prototype.setShaderUniforms.call(this,t,r,i,a),i.getNode()===this&&t.uniformMatrix4fv(r.x3d_ModelViewMatrix,!1,e)}})()}),Object.defineProperties(ne,{typeName:{value:"GeneratedCubeMapTexture",enumerable:!0},componentInfo:{value:Object.freeze({name:"CubeMapTexturing",level:3}),enumerable:!0},containerField:{value:"texture",enumerable:!0},specificationRange:{value:Object.freeze({from:"3.0",to:"Infinity"}),enumerable:!0},fieldDefinitions:{value:new(E())([new(m())(M().inputOutput,"metadata",new(g().SFNode)),new(m())(M().inputOutput,"description",new(g().SFString)),new(m())(M().inputOutput,"update",new(g().SFString)("NONE")),new(m())(M().initializeOnly,"size",new(g().SFInt32)(128)),new(m())(M().initializeOnly,"textureProperties",new(g().SFNode))]),enumerable:!0}});const oe=ne;n().add("GeneratedCubeMapTexture","x_ite/Components/CubeMapTexturing/GeneratedCubeMapTexture",oe);const ue=oe,_e=__X_ITE_X3D__.require("x_ite/Components/Networking/X3DUrlObject");var he=r.n(_e);const Te=__X_ITE_X3D__.require("standard/Math/Numbers/Vector2");var de=r.n(Te);const ce=__X_ITE_X3D__.require("x_ite/DEVELOPMENT");var pe=r.n(ce),xe=r(588);const ge=new Uint8Array([255,255,255,255]);function le(e){I.call(this,e),he().call(this,e),this.addType(M().ImageCubeMapTexture),this.image=xe("<img></img>"),this.urlStack=new(g().MFString)}Object.assign(Object.setPrototypeOf(le.prototype,I.prototype),he().prototype,{initialize(){I.prototype.initialize.call(this),he().prototype.initialize.call(this);const e=this.getBrowser().getContext();e.bindTexture(this.getTarget(),this.getTexture());for(let t=0;t<6;++t)e.texImage2D(this.getTargets()[t],0,e.RGBA,1,1,0,e.RGBA,e.UNSIGNED_BYTE,ge);this.image.on("load",this.setImage.bind(this)),this.image.on("abort error",this.setError.bind(this)),this.image.prop("crossOrigin","Anonymous"),this.requestImmediateLoad().catch(Function.prototype)},unloadData(){this.clearTexture()},loadData(){this.urlStack.setValue(this._url),this.loadNext()},loadNext(){if(0===this.urlStack.length)return this.clearTexture(),void this.setLoadState(M().FAILED_STATE);this.URL=new URL(this.urlStack.shift(),this.getExecutionContext().getBaseURL()),this.URL.pathname.match(/\.ktx2?(?:\.gz)?$/)||this.URL.href.match(/^data:image\/ktx2[;,]/)?(this.setLinear(!0),this.setMipMaps(!1),this.getBrowser().getKTXDecoder().then((e=>e.loadKTXFromURL(this.URL,this.getCache()))).then((e=>this.setKTXTexture(e))).catch((e=>this.setError({type:e.message})))):(this.setLinear(!1),this.setMipMaps(!0),"data:"!==this.URL.protocol&&(this.getCache()||this.URL.searchParams.set("_",Date.now())),this.image.attr("src",this.URL.href))},setError(e){"data:"!==this.URL.protocol&&console.warn(`Error loading image '${decodeURI(this.URL.href)}'`,e.type),this.loadNext()},setKTXTexture(e){if(e.target!==this.getTarget())return this.setError({type:"Invalid KTX texture target, must be 'TEXTURE_CUBE_MAP'."});pe()&&"data:"!==this.URL.protocol&&console.info(`Done loading image cube map texture '${decodeURI(this.URL.href)}'.`);try{this.setTexture(e),this.setTransparent(!1),this.setSize(e.baseWidth),this.updateTextureParameters(),this.setLoadState(M().COMPLETE_STATE)}catch(e){this.setError({type:e.message})}},setImage(){pe()&&"data:"!==this.URL.protocol&&console.info(`Done loading image cube map texture '${decodeURI(this.URL.href)}'.`);try{const e=this.getBrowser().getContext(),t=e.createTexture();e.bindTexture(e.TEXTURE_2D,t),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,this.image[0]),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.LINEAR),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.LINEAR),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),this.imageToCubeMap(t,this.image.prop("width"),this.image.prop("height"),!1),this.setLoadState(M().COMPLETE_STATE)}catch(e){this.setError({type:e.message})}},imageToCubeMap(e,t,r){const i=t/r;Math.abs(i-4/3)<.01&&this.skyBoxToCubeMap(e,t,r),Math.abs(i-2)<.01&&this.panoramaToCubeMap(e,t,r),this.updateTextureParameters()},skyBoxToCubeMap:function(){const e=[new(de())(1,1),new(de())(3,1),new(de())(0,1),new(de())(2,1),new(de())(1,0),new(de())(1,2)];return function(t,r,i){const a=this.getBrowser().getContext(),s=a.createFramebuffer(),n=Math.floor(r/4),o=Math.floor(i/3),u=new Uint8Array(n*o*4);a.bindTexture(this.getTarget(),this.getTexture());for(let e=0;e<6;++e)a.texImage2D(this.getTargets()[e],0,a.RGBA,n,o,0,a.RGBA,a.UNSIGNED_BYTE,null);a.bindFramebuffer(a.FRAMEBUFFER,s),a.framebufferTexture2D(a.FRAMEBUFFER,a.COLOR_ATTACHMENT0,a.TEXTURE_2D,t,0);let _=!1;a.bindTexture(this.getTarget(),this.getTexture());for(let t=0;t<6;++t)a.copyTexSubImage2D(this.getTargets()[t],0,0,0,e[t].x*n,e[t].y*o,n,o),_||(a.readPixels(e[t].x*n,e[t].y*o,n,o,a.RGBA,a.UNSIGNED_BYTE,u),_=this.isImageTransparent(u));a.deleteFramebuffer(s),a.deleteTexture(t),this.setTransparent(_),this.setSize(n)}}(),panoramaToCubeMap(e,t,r){const i=this.getBrowser(),a=i.getContext(),s=i.getPanoramaShader(),n=a.createFramebuffer(),o=i.getTextureCubeUnit(),u=Math.floor(r/2),_=new Uint8Array(u*u*4);a.bindTexture(a.TEXTURE_2D,e),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_S,a.MIRRORED_REPEAT),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_T,a.MIRRORED_REPEAT),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MIN_FILTER,a.LINEAR),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MAG_FILTER,a.LINEAR),a.bindTexture(this.getTarget(),this.getTexture());for(let e=0;e<6;++e)a.texImage2D(this.getTargets()[e],0,a.RGBA,u,u,0,a.RGBA,a.UNSIGNED_BYTE,null);a.useProgram(s.getProgram()),a.activeTexture(a.TEXTURE0+o),a.bindTexture(a.TEXTURE_2D,e),a.uniform1i(s.x3d_PanoramaTexture,o),a.bindFramebuffer(a.FRAMEBUFFER,n),a.viewport(0,0,u,u),a.scissor(0,0,u,u),a.disable(a.DEPTH_TEST),a.enable(a.CULL_FACE),a.frontFace(a.CCW),a.clearColor(0,0,0,0),a.bindVertexArray(i.getFullscreenVertexArrayObject());let h=!1;for(let e=0;e<6;++e)a.framebufferTexture2D(a.FRAMEBUFFER,a.COLOR_ATTACHMENT0,this.getTargets()[e],this.getTexture(),0),a.clear(a.COLOR_BUFFER_BIT),a.uniform1i(s.x3d_CurrentFace,e),a.drawArrays(a.TRIANGLES,0,6),h||(a.readPixels(0,0,u,u,a.RGBA,a.UNSIGNED_BYTE,_),h=this.isImageTransparent(_));a.enable(a.DEPTH_TEST),a.deleteFramebuffer(n),a.deleteTexture(e),i.resetTextureUnits(),this.setTransparent(h),this.setSize(u)},dispose(){he().prototype.dispose.call(this),I.prototype.dispose.call(this)}}),Object.defineProperties(le,{typeName:{value:"ImageCubeMapTexture",enumerable:!0},componentInfo:{value:Object.freeze({name:"CubeMapTexturing",level:2}),enumerable:!0},containerField:{value:"texture",enumerable:!0},specificationRange:{value:Object.freeze({from:"3.0",to:"Infinity"}),enumerable:!0},fieldDefinitions:{value:new(E())([new(m())(M().inputOutput,"metadata",new(g().SFNode)),new(m())(M().inputOutput,"description",new(g().SFString)),new(m())(M().inputOutput,"load",new(g().SFBool)(!0)),new(m())(M().inputOutput,"url",new(g().MFString)),new(m())(M().inputOutput,"autoRefresh",new(g().SFTime)),new(m())(M().inputOutput,"autoRefreshTimeLimit",new(g().SFTime)(3600)),new(m())(M().initializeOnly,"textureProperties",new(g().SFNode))]),enumerable:!0}});const me=le;n().add("ImageCubeMapTexture","x_ite/Components/CubeMapTexturing/ImageCubeMapTexture",me);const fe=me;a().add({name:"CubeMapTexturing",concreteNodes:[A,ue,fe],abstractNodes:[I],browserContext:p});const Ee=void 0;n().add("CubeMapTexturing","assets/components/CubeMapTexturing",Ee)})();