/* X_ITE v11.1.1 */
const e=window[Symbol.for("X_ITE.X3D-11.1.1")];(()=>{var t={n:e=>{var s=e&&e.__esModule?()=>e.default:()=>e;return t.d(s,{a:s}),s},d:(e,s)=>{for(var i in s)t.o(s,i)&&!t.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:s[i]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};const s=e.Components;var i=t.n(s);const n=e.ScreenLine;var r=t.n(n);const a=e.GeometryContext;var o=t.n(a);const c=e.AlphaMode;var h=t.n(c);const l=e.VertexArray;var f=t.n(l);const m=e.Layer;var u=t.n(m);const d=e.Matrix4;var g=t.n(d);const x=e.Vector3;var w=t.n(x);const p=e.Namespace;var v=t.n(p);function b(e){const t=e.getContext();this.browser=e,this.vertexBuffer=t.createBuffer(),this.vertexArrayObject=new(f())(t),this.geometryContext=new(o())({renderObject:new(u())(e.getPrivateScene()),alphaMode:h().BLEND,geometryType:3}),this.geometryContext.renderObject.setup();const s=e.getSphereOptions().getGeometry().getVertices();this.numVertices=s.length/4,t.bindBuffer(t.ARRAY_BUFFER,this.vertexBuffer),t.bufferData(t.ARRAY_BUFFER,s.getValue(),t.STATIC_DRAW)}Object.assign(b.prototype,{display:(()=>{const e=new Float32Array(g().Identity),t=new Float32Array(g().Identity),s=new(g()),i=[];return function(n,r,a,o,c,h){const l=this.browser,f=l.getContext(),m=l.getViewport();h.bind(),f.viewport(...m),f.scissor(...m);const u=n*(l.getRenderingProperty("ContentScale")*Math.abs(o.origin.z)),d=o.xAxis.normalize().multiply(u),g=o.yAxis.normalize().multiply(u),x=o.zAxis.normalize().multiply(u);s.set(...d,0,...g,0,...x,0,...o.origin,1),e.set(c),t.set(s),t.set(w().Zero,8);const p=l.getDefaultMaterial().getShader(this.geometryContext);p.enable(f),p.setClipPlanes(f,i),f.uniformMatrix4fv(p.x3d_ProjectionMatrix,!1,e),f.uniformMatrix4fv(p.x3d_ModelViewMatrix,!1,t),f.uniform3f(p.x3d_EmissiveColor,...r),f.uniform1f(p.x3d_Transparency,a),this.vertexArrayObject.enable(p.getProgram())&&p.enableVertexAttribute(f,this.vertexBuffer,0,0),f.disable(f.DEPTH_TEST),f.enable(f.BLEND),f.enable(f.CULL_FACE),f.drawArrays(f.TRIANGLES,0,this.numVertices),f.enable(f.DEPTH_TEST),f.disable(f.BLEND)}})(),dispose(){const e=this.browser.getContext();e.deleteBuffer(this.vertexBuffer),this.vertexArrayObject.dispose(e)}});const y=b,S=v().add("ScreenPoint",y),R=e.ViewVolume;var M=t.n(R);const C=e.Color3;var A=t.n(C);const F=e.Rotation4;var V=t.n(F);const E=e.Lock;var B=t.n(E);const X=Symbol(),j=Symbol(),D=Symbol(),L=Symbol(),P=Symbol(),_=Symbol(),T=Symbol();function O(){}Object.assign(O.prototype,{initialize(){console.log("Loaded X3DWebXRContext."),this._activeViewpoint.addInterest("setReferenceSpace",this)},async initXRSession(){return B().acquire(`X3DWebXRContext.session-${this.getId()}`,(async()=>{if(this.getSession()!==window)return;const e=this.getContext(),t=this.getBrowserOption("XRSessionMode").toLowerCase().replaceAll("_","-"),s=(await e.makeXRCompatible(),await navigator.xr.requestSession(t)),i=await s.requestReferenceSpace("local");e.bindFramebuffer(e.FRAMEBUFFER,null);const n=new XRWebGLLayer(s,e,{antialias:!1,alpha:!0,depth:!1,ignoreDepthValues:!0});this.finishedEvents().addInterest("finishedFrame",this),this.endEvents().addInterest("endFrame",this),s.updateRenderState({baseLayer:n}),s.addEventListener("end",(()=>this.stopXRSession())),this[X]=i,this[D]=n,this.setSession(s),this.setDefaultFrameBuffer(n.framebuffer),this.setReferenceSpace(),this[L]={cameraSpaceMatrix:new(g()),viewMatrix:new(g()),views:[]},this[P]=[],this[_]=new(r())(this,5,3,.9),this[T]=new S(this)}))},stopXRSession(){return B().acquire(`X3DWebXRContext.session-${this.getId()}`,(async()=>{if(this.getSession()!==window)try{await this.getSession().end()}catch{}finally{this.finishedEvents().removeInterest("finishedFrame",this),this.endEvents().removeInterest("endFrame",this),this.setSession(window),this.setDefaultFrameBuffer(null),this[X]=null,this[j]=null,this[D]=null,this[L]=null,this[P]=null,this[_]=null,this[T]=null}}))},getReferenceSpace(){return this[j]},setReferenceSpace(){if(!this[X])return;const e=new(w()),t=new(V());this.getActiveViewpoint()?.getViewMatrix().get(e,t);const s=new XRRigidTransform(e,t.getQuaternion());this[j]=this[X].getOffsetReferenceSpace(s)},setFrame(e){if(!e)return;const t=!this.getCanvas().parent().is(this.getSurface()),s=e.getViewerPose(this[j]);this[L].cameraSpaceMatrix.assign(s.transform.matrix),this[L].viewMatrix.assign(s.transform.inverse.matrix);let i=0;for(const e of s.views){const{x:t,y:n,width:r,height:a}=this[D].getViewport(e);if(!r)continue;this.reshapeFrameBuffer(i,0|t,0|n,0|r,0|a);const o=this[L].views[i]??={projectionMatrix:new(g()),cameraSpaceMatrix:new(g()),viewMatrix:new(g()),matrix:new(g()),inverse:new(g())};o.projectionMatrix.assign(e.projectionMatrix),o.cameraSpaceMatrix.assign(e.transform.matrix),o.viewMatrix.assign(e.transform.inverse.matrix),o.matrix.assign(s.transform.matrix).multRight(e.transform.inverse.matrix),o.inverse.assign(o.matrix).inverse(),++i}this.getFrameBuffers().length=i,t&&this.getCanvas().css(this.getXREmulatorCSS());let n=0;for(const t of this.getSession().inputSources){const s=t.targetRaySpace,i=e.getPose(s,this[j]);if(!i)continue;const r=this[P][n]??={matrix:new(g()),inverse:new(g()),hit:this.getHit().copy()};r.matrix.assign(i.transform.matrix),r.inverse.assign(i.transform.inverse.matrix),r.buttons=t.gamepad?.buttons,++n}this[P].length=n,this.addBrowserEvent()},finishedFrame:function(){const e=new(A())(.5,.75,1),t=new(g()),s=new(w())(0,0,-.5),i=new(w()),n=new(w()),r=new(V());return function(){const a=this[L],o=this.getViewport().getValue();for(const e of this[P])this.touch(o[2]/2,o[3]/2,e,e.hit);for(const[c,h]of a.views.entries()){const a=this.getFrameBuffers()[c],l=h.projectionMatrix,f=h.viewMatrix;for(const{matrix:c,buttons:h,hit:m}of this[P]){const u=h?.some((e=>e.pressed)),d=u?e:A().White;if(t.assign(c).multRight(f),t.multVecMatrix(i.assign(w().Zero)),t.multVecMatrix(n.assign(s)),n.z>i.z)continue;if(M().projectPointMatrix(i,l,o,i),M().projectPointMatrix(n,l,o,n),i.z=0,n.z=0,this[_].setColor(d).display(i,n,a),!m.id)continue;const g=u?.005:.007;t.assign(c).multRight(f).translate(m.point).rotate(r.setFromToVec(w().zAxis,m.normal)),this[T].display(g,d,.3,t,l,a)}}}}(),endFrame(){this.getContext().bindVertexArray(null)},getPose(){return this[L]}});const I=O,z=v().add("X3DWebXRContext",I);i().add({name:"WebXR",concreteNodes:[],abstractNodes:[],browserContext:z});v().add("WebXRComponent",undefined)})();