/* X_ITE v10.2.0 */
const t=window[Symbol.for("X_ITE.X3D-10.2.0")];(()=>{var e={n:t=>{var n=t&&t.__esModule?()=>t.default:()=>t;return e.d(n,{a:n}),n},d:(t,n)=>{for(var i in n)e.o(n,i)&&!e.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:n[i]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e)};const n=t.Components;var i=e.n(n);const u=t.Fields;var p=e.n(u);const o=t.X3DFieldDefinition;var a=e.n(o);const w=t.FieldDefinitionArray;var l=e.n(w);const r=t.X3DChildNode;var S=e.n(r);const O=t.X3DConstants;var c=e.n(O);const F=t.Namespace;var s=e.n(F);function d(t){S().call(this,t),this.addType(c().DISEntityManager),t.getSpecificationVersion()<=3.3&&this.addAlias("mapping",this._children)}Object.setPrototypeOf(d.prototype,S().prototype),Object.defineProperties(d,{typeName:{value:"DISEntityManager",enumerable:!0},componentInfo:{value:Object.freeze({name:"DIS",level:2}),enumerable:!0},containerField:{value:"children",enumerable:!0},specificationRange:{value:Object.freeze({from:"3.0",to:"Infinity"}),enumerable:!0},fieldDefinitions:{value:new(l())([new(a())(c().inputOutput,"metadata",new(p().SFNode)),new(a())(c().inputOutput,"address",new(p().SFString)("localhost")),new(a())(c().inputOutput,"applicationID",new(p().SFInt32)),new(a())(c().inputOutput,"children",new(p().MFNode)),new(a())(c().inputOutput,"port",new(p().SFInt32)),new(a())(c().inputOutput,"siteID",new(p().SFInt32)),new(a())(c().outputOnly,"addedEntities",new(p().MFNode)),new(a())(c().outputOnly,"removedEntities",new(p().MFNode))]),enumerable:!0}});const y=d,m=s().add("DISEntityManager",y),I=t.X3DInfoNode;var f=e.n(I);const b=t.X3DUrlObject;var h=e.n(b);function g(t){f().call(this,t),h().call(this,t),this.addType(c().DISEntityTypeMapping)}Object.assign(Object.setPrototypeOf(g.prototype,f().prototype),h().prototype,{initialize(){f().prototype.initialize.call(this),h().prototype.initialize.call(this)},dispose(){h().prototype.dispose.call(this),f().prototype.dispose.call(this)}}),Object.defineProperties(g,{typeName:{value:"DISEntityTypeMapping",enumerable:!0},componentInfo:{value:Object.freeze({name:"DIS",level:2}),enumerable:!0},containerField:{value:"children",enumerable:!0},specificationRange:{value:Object.freeze({from:"3.0",to:"Infinity"}),enumerable:!0},fieldDefinitions:{value:new(l())([new(a())(c().inputOutput,"metadata",new(p().SFNode)),new(a())(c().inputOutput,"description",new(p().SFString)),new(a())(c().inputOutput,"load",new(p().SFBool)(!0)),new(a())(c().inputOutput,"url",new(p().MFString)),new(a())(c().inputOutput,"autoRefresh",new(p().SFTime)),new(a())(c().inputOutput,"autoRefreshTimeLimit",new(p().SFTime)(3600)),new(a())(c().initializeOnly,"category",new(p().SFInt32)),new(a())(c().initializeOnly,"country",new(p().SFInt32)),new(a())(c().initializeOnly,"domain",new(p().SFInt32)),new(a())(c().initializeOnly,"extra",new(p().SFInt32)),new(a())(c().initializeOnly,"kind",new(p().SFInt32)),new(a())(c().initializeOnly,"specific",new(p().SFInt32)),new(a())(c().initializeOnly,"subcategory",new(p().SFInt32))]),enumerable:!0}});const v=g,D=s().add("DISEntityTypeMapping",v),P=t.X3DGroupingNode;var T=e.n(P);const z=t.X3DSensorNode;var V=e.n(z);function B(t){T().call(this,t),V().call(this,t),this.addType(c().EspduTransform),t.getSpecificationVersion()<=3.3&&(this._applicationID=1,this._munitionApplicationID=1)}Object.assign(Object.setPrototypeOf(B.prototype,T().prototype),V().prototype,{initialize(){T().prototype.initialize.call(this),V().prototype.initialize.call(this)}}),Object.defineProperties(B,{typeName:{value:"EspduTransform",enumerable:!0},componentInfo:{value:Object.freeze({name:"DIS",level:1}),enumerable:!0},containerField:{value:"children",enumerable:!0},specificationRange:{value:Object.freeze({from:"3.0",to:"Infinity"}),enumerable:!0},fieldDefinitions:{value:new(l())([new(a())(c().inputOutput,"metadata",new(p().SFNode)),new(a())(c().inputOutput,"description",new(p().SFString)),new(a())(c().inputOutput,"enabled",new(p().SFBool)(!0)),new(a())(c().inputOutput,"visible",new(p().SFBool)(!0)),new(a())(c().inputOutput,"bboxDisplay",new(p().SFBool)),new(a())(c().initializeOnly,"bboxSize",new(p().SFVec3f)(-1,-1,-1)),new(a())(c().initializeOnly,"bboxCenter",new(p().SFVec3f)),new(a())(c().inputOnly,"addChildren",new(p().MFNode)),new(a())(c().inputOnly,"removeChildren",new(p().MFNode)),new(a())(c().inputOutput,"children",new(p().MFNode)),new(a())(c().outputOnly,"isActive",new(p().SFBool)),new(a())(c().inputOnly,"set_articulationParameterValue0",new(p().SFFloat)),new(a())(c().inputOnly,"set_articulationParameterValue1",new(p().SFFloat)),new(a())(c().inputOnly,"set_articulationParameterValue2",new(p().SFFloat)),new(a())(c().inputOnly,"set_articulationParameterValue3",new(p().SFFloat)),new(a())(c().inputOnly,"set_articulationParameterValue4",new(p().SFFloat)),new(a())(c().inputOnly,"set_articulationParameterValue5",new(p().SFFloat)),new(a())(c().inputOnly,"set_articulationParameterValue6",new(p().SFFloat)),new(a())(c().inputOnly,"set_articulationParameterValue7",new(p().SFFloat)),new(a())(c().inputOutput,"address",new(p().SFString)("localhost")),new(a())(c().inputOutput,"applicationID",new(p().SFInt32)),new(a())(c().inputOutput,"articulationParameterCount",new(p().SFInt32)),new(a())(c().inputOutput,"articulationParameterDesignatorArray",new(p().MFInt32)),new(a())(c().inputOutput,"articulationParameterChangeIndicatorArray",new(p().MFInt32)),new(a())(c().inputOutput,"articulationParameterIdPartAttachedToArray",new(p().MFInt32)),new(a())(c().inputOutput,"articulationParameterTypeArray",new(p().MFInt32)),new(a())(c().inputOutput,"articulationParameterArray",new(p().MFFloat)),new(a())(c().inputOutput,"center",new(p().SFVec3f)),new(a())(c().inputOutput,"collisionType",new(p().SFInt32)),new(a())(c().inputOutput,"deadReckoning",new(p().SFInt32)),new(a())(c().inputOutput,"detonationLocation",new(p().SFVec3f)),new(a())(c().inputOutput,"detonationRelativeLocation",new(p().SFVec3f)),new(a())(c().inputOutput,"detonationResult",new(p().SFInt32)),new(a())(c().inputOutput,"entityCategory",new(p().SFInt32)),new(a())(c().inputOutput,"entityCountry",new(p().SFInt32)),new(a())(c().inputOutput,"entityDomain",new(p().SFInt32)),new(a())(c().inputOutput,"entityExtra",new(p().SFInt32)),new(a())(c().inputOutput,"entityID",new(p().SFInt32)),new(a())(c().inputOutput,"entityKind",new(p().SFInt32)),new(a())(c().inputOutput,"entitySpecific",new(p().SFInt32)),new(a())(c().inputOutput,"entitySubcategory",new(p().SFInt32)),new(a())(c().inputOutput,"eventApplicationID",new(p().SFInt32)),new(a())(c().inputOutput,"eventEntityID",new(p().SFInt32)),new(a())(c().inputOutput,"eventNumber",new(p().SFInt32)),new(a())(c().inputOutput,"eventSiteID",new(p().SFInt32)),new(a())(c().inputOutput,"fired1",new(p().SFBool)),new(a())(c().inputOutput,"fired2",new(p().SFBool)),new(a())(c().inputOutput,"fireMissionIndex",new(p().SFInt32)),new(a())(c().inputOutput,"firingRange",new(p().SFFloat)),new(a())(c().inputOutput,"firingRate",new(p().SFInt32)),new(a())(c().inputOutput,"forceID",new(p().SFInt32)),new(a())(c().inputOutput,"fuse",new(p().SFInt32)),new(a())(c().inputOutput,"linearVelocity",new(p().SFVec3f)),new(a())(c().inputOutput,"linearAcceleration",new(p().SFVec3f)),new(a())(c().inputOutput,"marking",new(p().SFString)),new(a())(c().inputOutput,"multicastRelayHost",new(p().SFString)),new(a())(c().inputOutput,"multicastRelayPort",new(p().SFInt32)),new(a())(c().inputOutput,"munitionApplicationID",new(p().SFInt32)),new(a())(c().inputOutput,"munitionEndPoint",new(p().SFVec3f)),new(a())(c().inputOutput,"munitionEntityID",new(p().SFInt32)),new(a())(c().inputOutput,"munitionQuantity",new(p().SFInt32)),new(a())(c().inputOutput,"munitionSiteID",new(p().SFInt32)),new(a())(c().inputOutput,"munitionStartPoint",new(p().SFVec3f)),new(a())(c().inputOutput,"networkMode",new(p().SFString)("standAlone")),new(a())(c().inputOutput,"port",new(p().SFInt32)),new(a())(c().inputOutput,"readInterval",new(p().SFTime)(.1)),new(a())(c().inputOutput,"rotation",new(p().SFRotation)),new(a())(c().inputOutput,"scale",new(p().SFVec3f)(1,1,1)),new(a())(c().inputOutput,"scaleOrientation",new(p().SFRotation)),new(a())(c().inputOutput,"siteID",new(p().SFInt32)),new(a())(c().inputOutput,"translation",new(p().SFVec3f)),new(a())(c().inputOutput,"warhead",new(p().SFInt32)),new(a())(c().inputOutput,"writeInterval",new(p().SFTime)(1)),new(a())(c().outputOnly,"articulationParameterValue0_changed",new(p().SFFloat)),new(a())(c().outputOnly,"articulationParameterValue1_changed",new(p().SFFloat)),new(a())(c().outputOnly,"articulationParameterValue2_changed",new(p().SFFloat)),new(a())(c().outputOnly,"articulationParameterValue3_changed",new(p().SFFloat)),new(a())(c().outputOnly,"articulationParameterValue4_changed",new(p().SFFloat)),new(a())(c().outputOnly,"articulationParameterValue5_changed",new(p().SFFloat)),new(a())(c().outputOnly,"articulationParameterValue6_changed",new(p().SFFloat)),new(a())(c().outputOnly,"articulationParameterValue7_changed",new(p().SFFloat)),new(a())(c().outputOnly,"collideTime",new(p().SFTime)),new(a())(c().outputOnly,"detonateTime",new(p().SFTime)),new(a())(c().outputOnly,"firedTime",new(p().SFTime)),new(a())(c().outputOnly,"isCollided",new(p().SFBool)),new(a())(c().outputOnly,"isDetonated",new(p().SFBool)),new(a())(c().outputOnly,"isNetworkReader",new(p().SFBool)),new(a())(c().outputOnly,"isNetworkWriter",new(p().SFBool)),new(a())(c().outputOnly,"isRtpHeaderHeard",new(p().SFBool)),new(a())(c().outputOnly,"isStandAlone",new(p().SFBool)),new(a())(c().outputOnly,"timestamp",new(p().SFTime)),new(a())(c().inputOutput,"rtpHeaderExpected",new(p().SFBool)),new(a())(c().inputOutput,"geoCoords",new(p().SFVec3d)),new(a())(c().initializeOnly,"geoSystem",new(p().MFString)("GD","WE"))]),enumerable:!0}});const N=B,R=s().add("EspduTransform",N),j=t.X3DBoundedObject;var E=e.n(j);function M(t){V().call(this,t),E().call(this,t),this.addType(c().ReceiverPdu),t.getSpecificationVersion()<=3.3&&(this._applicationID=1,this._transmitterApplicationID=1)}Object.assign(Object.setPrototypeOf(M.prototype,V().prototype),E().prototype,{initialize(){V().prototype.initialize.call(this),E().prototype.initialize.call(this)},dispose(){E().prototype.dispose.call(this),V().prototype.dispose.call(this)}}),Object.defineProperties(M,{typeName:{value:"ReceiverPdu",enumerable:!0},componentInfo:{value:Object.freeze({name:"DIS",level:1}),enumerable:!0},containerField:{value:"children",enumerable:!0},specificationRange:{value:Object.freeze({from:"3.0",to:"Infinity"}),enumerable:!0},fieldDefinitions:{value:new(l())([new(a())(c().inputOutput,"metadata",new(p().SFNode)),new(a())(c().inputOutput,"description",new(p().SFString)),new(a())(c().inputOutput,"visible",new(p().SFBool)(!0)),new(a())(c().inputOutput,"bboxDisplay",new(p().SFBool)),new(a())(c().initializeOnly,"bboxSize",new(p().SFVec3f)(-1,-1,-1)),new(a())(c().initializeOnly,"bboxCenter",new(p().SFVec3f)),new(a())(c().inputOutput,"enabled",new(p().SFBool)(!0)),new(a())(c().outputOnly,"isActive",new(p().SFBool)),new(a())(c().inputOutput,"address",new(p().SFString)("localhost")),new(a())(c().inputOutput,"applicationID",new(p().SFInt32)),new(a())(c().inputOutput,"entityID",new(p().SFInt32)),new(a())(c().inputOutput,"multicastRelayHost",new(p().SFString)),new(a())(c().inputOutput,"multicastRelayPort",new(p().SFInt32)),new(a())(c().inputOutput,"networkMode",new(p().SFString)("standAlone")),new(a())(c().inputOutput,"port",new(p().SFInt32)),new(a())(c().inputOutput,"radioID",new(p().SFInt32)),new(a())(c().inputOutput,"readInterval",new(p().SFTime)(.1)),new(a())(c().inputOutput,"receivedPower",new(p().SFFloat)),new(a())(c().inputOutput,"receiverState",new(p().SFInt32)),new(a())(c().inputOutput,"rtpHeaderExpected",new(p().SFBool)),new(a())(c().inputOutput,"siteID",new(p().SFInt32)),new(a())(c().inputOutput,"transmitterApplicationID",new(p().SFInt32)),new(a())(c().inputOutput,"transmitterEntityID",new(p().SFInt32)),new(a())(c().inputOutput,"transmitterRadioID",new(p().SFInt32)),new(a())(c().inputOutput,"transmitterSiteID",new(p().SFInt32)),new(a())(c().inputOutput,"whichGeometry",new(p().SFInt32)(1)),new(a())(c().inputOutput,"writeInterval",new(p().SFTime)(1)),new(a())(c().outputOnly,"isNetworkReader",new(p().SFBool)),new(a())(c().outputOnly,"isNetworkWriter",new(p().SFBool)),new(a())(c().outputOnly,"isRtpHeaderHeard",new(p().SFBool)),new(a())(c().outputOnly,"isStandAlone",new(p().SFBool)),new(a())(c().outputOnly,"timestamp",new(p().SFTime)),new(a())(c().inputOutput,"geoCoords",new(p().SFVec3d)),new(a())(c().initializeOnly,"geoSystem",new(p().MFString)("GD","WE"))]),enumerable:!0}});const A=M,_=s().add("ReceiverPdu",A);function C(t){V().call(this,t),E().call(this,t),this.addType(c().SignalPdu),t.getSpecificationVersion()<=3.3&&(this._applicationID=1)}Object.assign(Object.setPrototypeOf(C.prototype,V().prototype),E().prototype,{initialize(){V().prototype.initialize.call(this),E().prototype.initialize.call(this)},dispose(){E().prototype.dispose.call(this),V().prototype.dispose.call(this)}}),Object.defineProperties(C,{typeName:{value:"SignalPdu",enumerable:!0},componentInfo:{value:Object.freeze({name:"DIS",level:1}),enumerable:!0},containerField:{value:"children",enumerable:!0},specificationRange:{value:Object.freeze({from:"3.0",to:"Infinity"}),enumerable:!0},fieldDefinitions:{value:new(l())([new(a())(c().inputOutput,"metadata",new(p().SFNode)),new(a())(c().inputOutput,"description",new(p().SFString)),new(a())(c().inputOutput,"visible",new(p().SFBool)(!0)),new(a())(c().inputOutput,"bboxDisplay",new(p().SFBool)),new(a())(c().initializeOnly,"bboxSize",new(p().SFVec3f)(-1,-1,-1)),new(a())(c().initializeOnly,"bboxCenter",new(p().SFVec3f)),new(a())(c().inputOutput,"enabled",new(p().SFBool)(!0)),new(a())(c().outputOnly,"isActive",new(p().SFBool)),new(a())(c().inputOutput,"address",new(p().SFString)("localhost")),new(a())(c().inputOutput,"applicationID",new(p().SFInt32)),new(a())(c().inputOutput,"data",new(p().MFInt32)),new(a())(c().inputOutput,"dataLength",new(p().SFInt32)),new(a())(c().inputOutput,"encodingScheme",new(p().SFInt32)),new(a())(c().inputOutput,"entityID",new(p().SFInt32)),new(a())(c().inputOutput,"multicastRelayHost",new(p().SFString)),new(a())(c().inputOutput,"multicastRelayPort",new(p().SFInt32)),new(a())(c().inputOutput,"networkMode",new(p().SFString)("standAlone")),new(a())(c().inputOutput,"port",new(p().SFInt32)),new(a())(c().inputOutput,"radioID",new(p().SFInt32)),new(a())(c().inputOutput,"readInterval",new(p().SFTime)(.1)),new(a())(c().inputOutput,"rtpHeaderExpected",new(p().SFBool)),new(a())(c().inputOutput,"sampleRate",new(p().SFInt32)),new(a())(c().inputOutput,"samples",new(p().SFInt32)),new(a())(c().inputOutput,"siteID",new(p().SFInt32)),new(a())(c().inputOutput,"tdlType",new(p().SFInt32)),new(a())(c().inputOutput,"whichGeometry",new(p().SFInt32)(1)),new(a())(c().inputOutput,"writeInterval",new(p().SFTime)(1)),new(a())(c().outputOnly,"isNetworkReader",new(p().SFBool)),new(a())(c().outputOnly,"isNetworkWriter",new(p().SFBool)),new(a())(c().outputOnly,"isRtpHeaderHeard",new(p().SFBool)),new(a())(c().outputOnly,"isStandAlone",new(p().SFBool)),new(a())(c().outputOnly,"timestamp",new(p().SFTime)),new(a())(c().inputOutput,"geoCoords",new(p().SFVec3d)),new(a())(c().initializeOnly,"geoSystem",new(p().MFString)("GD","WE"))]),enumerable:!0}});const x=C,H=s().add("SignalPdu",x);function k(t){V().call(this,t),E().call(this,t),this.addType(c().TransmitterPdu),t.getSpecificationVersion()<=3.3&&(this._applicationID=1)}Object.assign(Object.setPrototypeOf(k.prototype,V().prototype),E().prototype,{initialize(){V().prototype.initialize.call(this),E().prototype.initialize.call(this)},dispose(){E().prototype.dispose.call(this),V().prototype.dispose.call(this)}}),Object.defineProperties(k,{typeName:{value:"TransmitterPdu",enumerable:!0},componentInfo:{value:Object.freeze({name:"DIS",level:1}),enumerable:!0},containerField:{value:"children",enumerable:!0},specificationRange:{value:Object.freeze({from:"3.0",to:"Infinity"}),enumerable:!0},fieldDefinitions:{value:new(l())([new(a())(c().inputOutput,"metadata",new(p().SFNode)),new(a())(c().inputOutput,"description",new(p().SFString)),new(a())(c().inputOutput,"visible",new(p().SFBool)(!0)),new(a())(c().inputOutput,"bboxDisplay",new(p().SFBool)),new(a())(c().initializeOnly,"bboxSize",new(p().SFVec3f)(-1,-1,-1)),new(a())(c().initializeOnly,"bboxCenter",new(p().SFVec3f)),new(a())(c().inputOutput,"enabled",new(p().SFBool)(!0)),new(a())(c().outputOnly,"isActive",new(p().SFBool)),new(a())(c().inputOutput,"address",new(p().SFString)("localhost")),new(a())(c().inputOutput,"antennaLocation",new(p().SFVec3f)),new(a())(c().inputOutput,"antennaPatternLength",new(p().SFInt32)),new(a())(c().inputOutput,"antennaPatternType",new(p().SFInt32)),new(a())(c().inputOutput,"applicationID",new(p().SFInt32)),new(a())(c().inputOutput,"cryptoKeyID",new(p().SFInt32)),new(a())(c().inputOutput,"cryptoSystem",new(p().SFInt32)),new(a())(c().inputOutput,"entityID",new(p().SFInt32)),new(a())(c().inputOutput,"frequency",new(p().SFInt32)),new(a())(c().inputOutput,"inputSource",new(p().SFInt32)),new(a())(c().inputOutput,"lengthOfModulationParameters",new(p().SFInt32)),new(a())(c().inputOutput,"modulationTypeDetail",new(p().SFInt32)),new(a())(c().inputOutput,"modulationTypeMajor",new(p().SFInt32)),new(a())(c().inputOutput,"modulationTypeSpreadSpectrum",new(p().SFInt32)),new(a())(c().inputOutput,"modulationTypeSystem",new(p().SFInt32)),new(a())(c().inputOutput,"multicastRelayHost",new(p().SFString)),new(a())(c().inputOutput,"multicastRelayPort",new(p().SFInt32)),new(a())(c().inputOutput,"networkMode",new(p().SFString)("standAlone")),new(a())(c().inputOutput,"port",new(p().SFInt32)),new(a())(c().inputOutput,"power",new(p().SFFloat)),new(a())(c().inputOutput,"radioEntityTypeCategory",new(p().SFInt32)),new(a())(c().inputOutput,"radioEntityTypeCountry",new(p().SFInt32)),new(a())(c().inputOutput,"radioEntityTypeDomain",new(p().SFInt32)),new(a())(c().inputOutput,"radioEntityTypeKind",new(p().SFInt32)),new(a())(c().inputOutput,"radioEntityTypeNomenclature",new(p().SFInt32)),new(a())(c().inputOutput,"radioEntityTypeNomenclatureVersion",new(p().SFInt32)),new(a())(c().inputOutput,"radioID",new(p().SFInt32)),new(a())(c().inputOutput,"readInterval",new(p().SFTime)(.1)),new(a())(c().inputOutput,"relativeAntennaLocation",new(p().SFVec3f)),new(a())(c().inputOutput,"rtpHeaderExpected",new(p().SFBool)),new(a())(c().inputOutput,"siteID",new(p().SFInt32)),new(a())(c().inputOutput,"transmitFrequencyBandwidth",new(p().SFFloat)),new(a())(c().inputOutput,"transmitState",new(p().SFInt32)),new(a())(c().inputOutput,"whichGeometry",new(p().SFInt32)(1)),new(a())(c().inputOutput,"writeInterval",new(p().SFTime)(1)),new(a())(c().outputOnly,"isNetworkReader",new(p().SFBool)),new(a())(c().outputOnly,"isNetworkWriter",new(p().SFBool)),new(a())(c().outputOnly,"isRtpHeaderHeard",new(p().SFBool)),new(a())(c().outputOnly,"isStandAlone",new(p().SFBool)),new(a())(c().outputOnly,"timestamp",new(p().SFTime)),new(a())(c().inputOutput,"geoCoords",new(p().SFVec3d)),new(a())(c().initializeOnly,"geoSystem",new(p().MFString)("GD","WE"))]),enumerable:!0}});const X=k,G=s().add("TransmitterPdu",X);i().add({name:"DIS",concreteNodes:[m,D,R,_,H,G],abstractNodes:[]});s().add("DISComponent",undefined)})();