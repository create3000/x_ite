/* X_ITE v10.2.0 */
const __X_ITE_X3D__=window[Symbol.for("X_ITE.X3D-10.2.0")];(()=>{"use strict";var e={n:t=>{var n=t&&t.__esModule?()=>t.default:()=>t;return e.d(n,{a:n}),n},d:(t,n)=>{for(var i in n)e.o(n,i)&&!e.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:n[i]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};const t=__X_ITE_X3D__.Components;var n=e.n(t);const i=__X_ITE_X3D__.Fields;var o=e.n(i);const a=__X_ITE_X3D__.X3DFieldDefinition;var l=e.n(a);const r=__X_ITE_X3D__.FieldDefinitionArray;var s=e.n(r);const u=__X_ITE_X3D__.X3DGroupingNode;var d=e.n(u);const p=__X_ITE_X3D__.X3DChildNode;var c=e.n(p);const _=__X_ITE_X3D__.X3DConstants;var b=e.n(_);const w=__X_ITE_X3D__.Namespace;var h=e.n(w);function O(e){c().call(this,e),this.addType(b().X3DProductStructureChildNode)}Object.setPrototypeOf(O.prototype,c().prototype),Object.defineProperties(O,{typeName:{value:"X3DProductStructureChildNode",enumerable:!0},componentInfo:{value:Object.freeze({name:"CADGeometry",level:2}),enumerable:!0}});const y=O,m=h().add("X3DProductStructureChildNode",y);function f(e){d().call(this,e),m.call(this,e),this.addType(b().CADAssembly)}Object.assign(Object.setPrototypeOf(f.prototype,d().prototype),{}),Object.defineProperties(f,{typeName:{value:"CADAssembly",enumerable:!0},componentInfo:{value:Object.freeze({name:"CADGeometry",level:2}),enumerable:!0},containerField:{value:"children",enumerable:!0},specificationRange:{value:Object.freeze({from:"3.1",to:"Infinity"}),enumerable:!0},fieldDefinitions:{value:new(s())([new(l())(b().inputOutput,"metadata",new(o().SFNode)),new(l())(b().inputOutput,"name",new(o().SFString)),new(l())(b().inputOutput,"visible",new(o().SFBool)(!0)),new(l())(b().inputOutput,"bboxDisplay",new(o().SFBool)),new(l())(b().initializeOnly,"bboxSize",new(o().SFVec3f)(-1,-1,-1)),new(l())(b().initializeOnly,"bboxCenter",new(o().SFVec3f)),new(l())(b().inputOnly,"addChildren",new(o().MFNode)),new(l())(b().inputOnly,"removeChildren",new(o().MFNode)),new(l())(b().inputOutput,"children",new(o().MFNode))]),enumerable:!0}});const v=f,S=h().add("CADAssembly",v),N=__X_ITE_X3D__.X3DBoundedObject;var F=e.n(N);const D=__X_ITE_X3D__.TraverseType;var g=e.n(D);const C=__X_ITE_X3D__.X3DCast;var I=e.n(C);function j(e){m.call(this,e),F().call(this,e),this.addType(b().CADFace),this.childNode=null,this.visibleNode=null,this.boundedObject=null}Object.assign(Object.setPrototypeOf(j.prototype,m.prototype),F().prototype,{initialize(){m.prototype.initialize.call(this),F().prototype.initialize.call(this),this._shape.addInterest("set_shape__",this),this.set_shape__()},getBBox(e,t){return this._bboxSize.getValue().equals(this.getDefaultBBoxSize())?this.visibleNode?.getBBox(e,t)??e.set():e.set(this._bboxSize.getValue(),this._bboxCenter.getValue())},set_shape__(){this.childNode&&(this.childNode._isCameraObject.removeInterest("set_cameraObject__",this),this.childNode._isPickableObject.removeInterest("set_transformSensors__",this),this.childNode._display.removeInterest("set_display__",this),this.childNode._bboxDisplay.removeInterest("set_bboxDisplay__",this)),this.childNode=null;const e=I()(b().X3DChildNode,this._shape);if(e){const t=e.getType();for(let n=t.length-1;n>=0;--n){switch(t[n]){case b().LOD:case b().Transform:case b().X3DShapeNode:e._isCameraObject.addInterest("set_cameraObject__",this),e._isPickableObject.addInterest("set_transformSensors__",this),e._display.addInterest("set_display__",this),e._bboxDisplay.addInterest("set_bboxDisplay__",this),this.childNode=e;break;default:continue}break}}this.childNode?delete this.traverse:this.traverse=Function.prototype,this.set_display__(),this.set_bboxDisplay__()},set_cameraObject__(){this.setCameraObject(this.visibleNode?.isCameraObject())},set_transformSensors__(){this.setPickableObject(this.visibleNode?.isPickableObject())},set_display__(){this.childNode?this.visibleNode=this.childNode._display.getValue()?this.childNode:null:this.visibleNode=null,this.set_cameraObject__(),this.set_transformSensors__()},set_bboxDisplay__(){this.childNode?this.boundedObject=this.childNode._bboxDisplay.getValue()?this.childNode:null:this.boundedObject=null},traverse(e,t){switch(e){case g().POINTER:case g().CAMERA:case g().SHADOW:return void this.visibleNode?.traverse(e,t);case g().PICKING:{const n=this.getBrowser().getPickingHierarchy();return n.push(this),this.visibleNode?.traverse(e,t),void n.pop()}case g().COLLISION:return void this.visibleNode?.traverse(e,t);case g().DISPLAY:return this.visibleNode?.traverse(e,t),void this.boundedObject?.displayBBox(e,t)}},dispose(){F().prototype.dispose.call(this),m.prototype.dispose.call(this)}}),Object.defineProperties(j,{typeName:{value:"CADFace",enumerable:!0},componentInfo:{value:Object.freeze({name:"CADGeometry",level:2}),enumerable:!0},containerField:{value:"children",enumerable:!0},specificationRange:{value:Object.freeze({from:"3.1",to:"Infinity"}),enumerable:!0},fieldDefinitions:{value:new(s())([new(l())(b().inputOutput,"metadata",new(o().SFNode)),new(l())(b().inputOutput,"name",new(o().SFString)),new(l())(b().inputOutput,"visible",new(o().SFBool)(!0)),new(l())(b().inputOutput,"bboxDisplay",new(o().SFBool)),new(l())(b().initializeOnly,"bboxSize",new(o().SFVec3f)(-1,-1,-1)),new(l())(b().initializeOnly,"bboxCenter",new(o().SFVec3f)),new(l())(b().inputOutput,"shape",new(o().SFNode))]),enumerable:!0}});const x=j,z=h().add("CADFace",x);function X(e){d().call(this,e),this.addType(b().CADLayer)}Object.setPrototypeOf(X.prototype,d().prototype),Object.defineProperties(X,{typeName:{value:"CADLayer",enumerable:!0},componentInfo:{value:Object.freeze({name:"CADGeometry",level:2}),enumerable:!0},containerField:{value:"children",enumerable:!0},specificationRange:{value:Object.freeze({from:"3.1",to:"Infinity"}),enumerable:!0},fieldDefinitions:{value:new(s())([new(l())(b().inputOutput,"metadata",new(o().SFNode)),new(l())(b().inputOutput,"name",new(o().SFString)),new(l())(b().inputOutput,"visible",new(o().SFBool)(!0)),new(l())(b().inputOutput,"bboxDisplay",new(o().SFBool)),new(l())(b().initializeOnly,"bboxSize",new(o().SFVec3f)(-1,-1,-1)),new(l())(b().initializeOnly,"bboxCenter",new(o().SFVec3f)),new(l())(b().inputOnly,"addChildren",new(o().MFNode)),new(l())(b().inputOnly,"removeChildren",new(o().MFNode)),new(l())(b().inputOutput,"children",new(o().MFNode))]),enumerable:!0}});const P=X,T=h().add("CADLayer",P),A=__X_ITE_X3D__.X3DTransformNode;var B=e.n(A);function V(e){B().call(this,e),m.call(this,e),this.addType(b().CADPart)}Object.assign(Object.setPrototypeOf(V.prototype,B().prototype),{}),Object.defineProperties(V,{typeName:{value:"CADPart",enumerable:!0},componentInfo:{value:Object.freeze({name:"CADGeometry",level:2}),enumerable:!0},containerField:{value:"children",enumerable:!0},specificationRange:{value:Object.freeze({from:"3.1",to:"Infinity"}),enumerable:!0},fieldDefinitions:{value:new(s())([new(l())(b().inputOutput,"metadata",new(o().SFNode)),new(l())(b().inputOutput,"name",new(o().SFString)),new(l())(b().inputOutput,"translation",new(o().SFVec3f)),new(l())(b().inputOutput,"rotation",new(o().SFRotation)),new(l())(b().inputOutput,"scale",new(o().SFVec3f)(1,1,1)),new(l())(b().inputOutput,"scaleOrientation",new(o().SFRotation)),new(l())(b().inputOutput,"center",new(o().SFVec3f)),new(l())(b().inputOutput,"visible",new(o().SFBool)(!0)),new(l())(b().inputOutput,"bboxDisplay",new(o().SFBool)),new(l())(b().initializeOnly,"bboxSize",new(o().SFVec3f)(-1,-1,-1)),new(l())(b().initializeOnly,"bboxCenter",new(o().SFVec3f)),new(l())(b().inputOnly,"addChildren",new(o().MFNode)),new(l())(b().inputOnly,"removeChildren",new(o().MFNode)),new(l())(b().inputOutput,"children",new(o().MFNode))]),enumerable:!0}});const M=V,E=h().add("CADPart",M),G=__X_ITE_X3D__.X3DComposedGeometryNode;var R=e.n(G);function k(e){R().call(this,e),this.addType(b().IndexedQuadSet)}Object.assign(Object.setPrototypeOf(k.prototype,R().prototype),{initialize(){R().prototype.initialize.call(this),this._set_index.addFieldInterest(this._index)},getTriangleIndex(e){const t=e%6;return 4*Math.floor(e/6)+t%3+Math.floor(t/4)},getPolygonIndex(e){return this._index[e]},getVerticesPerPolygon:()=>4,getNumVertices(){return this._index.length},build(){let e=this._index.length;e-=e%4,R().prototype.build.call(this,4,e,6,e/4*6)}}),Object.defineProperties(k,{typeName:{value:"IndexedQuadSet",enumerable:!0},componentInfo:{value:Object.freeze({name:"CADGeometry",level:1}),enumerable:!0},containerField:{value:"geometry",enumerable:!0},specificationRange:{value:Object.freeze({from:"3.1",to:"Infinity"}),enumerable:!0},fieldDefinitions:{value:new(s())([new(l())(b().inputOutput,"metadata",new(o().SFNode)),new(l())(b().inputOnly,"set_index",new(o().MFInt32)),new(l())(b().initializeOnly,"solid",new(o().SFBool)(!0)),new(l())(b().initializeOnly,"ccw",new(o().SFBool)(!0)),new(l())(b().initializeOnly,"colorPerVertex",new(o().SFBool)(!0)),new(l())(b().initializeOnly,"normalPerVertex",new(o().SFBool)(!0)),new(l())(b().initializeOnly,"index",new(o().MFInt32)),new(l())(b().inputOutput,"attrib",new(o().MFNode)),new(l())(b().inputOutput,"fogCoord",new(o().SFNode)),new(l())(b().inputOutput,"color",new(o().SFNode)),new(l())(b().inputOutput,"texCoord",new(o().SFNode)),new(l())(b().inputOutput,"tangent",new(o().SFNode)),new(l())(b().inputOutput,"normal",new(o().SFNode)),new(l())(b().inputOutput,"coord",new(o().SFNode))]),enumerable:!0}});const L=k,Q=h().add("IndexedQuadSet",L);function H(e){R().call(this,e),this.addType(b().QuadSet)}Object.assign(Object.setPrototypeOf(H.prototype,R().prototype),{getTriangleIndex(e){const t=e%6;return 4*Math.floor(e/6)+t%3+Math.floor(t/4)},getVerticesPerPolygon:()=>4,getNumVertices(){return this.getCoord()?.getSize()},build(){if(!this.getCoord())return;let e=this.getCoord().getSize();e-=e%4,R().prototype.build.call(this,4,e,6,e/4*6)},createNormals(e,t){return this.createFaceNormals(e,t)}}),Object.defineProperties(H,{typeName:{value:"QuadSet",enumerable:!0},componentInfo:{value:Object.freeze({name:"CADGeometry",level:1}),enumerable:!0},containerField:{value:"geometry",enumerable:!0},specificationRange:{value:Object.freeze({from:"3.1",to:"Infinity"}),enumerable:!0},fieldDefinitions:{value:new(s())([new(l())(b().inputOutput,"metadata",new(o().SFNode)),new(l())(b().initializeOnly,"solid",new(o().SFBool)(!0)),new(l())(b().initializeOnly,"ccw",new(o().SFBool)(!0)),new(l())(b().initializeOnly,"colorPerVertex",new(o().SFBool)(!0)),new(l())(b().initializeOnly,"normalPerVertex",new(o().SFBool)(!0)),new(l())(b().inputOutput,"attrib",new(o().MFNode)),new(l())(b().inputOutput,"fogCoord",new(o().SFNode)),new(l())(b().inputOutput,"color",new(o().SFNode)),new(l())(b().inputOutput,"texCoord",new(o().SFNode)),new(l())(b().inputOutput,"tangent",new(o().SFNode)),new(l())(b().inputOutput,"normal",new(o().SFNode)),new(l())(b().inputOutput,"coord",new(o().SFNode))]),enumerable:!0}});const q=H,K=h().add("QuadSet",q);n().add({name:"CADGeometry",concreteNodes:[S,z,T,E,Q,K],abstractNodes:[m]});h().add("CADGeometry",undefined)})();