/* X_ITE v10.2.0 */
const e=window[Symbol.for("X_ITE.X3D-10.2.0")];(()=>{var t={n:e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},d:(e,n)=>{for(var i in n)t.o(n,i)&&!t.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:n[i]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};const n=e.Components;var i=t.n(n);const o=e.Fields;var a=t.n(o);const l=e.X3DFieldDefinition;var r=t.n(l);const s=e.FieldDefinitionArray;var u=t.n(s);const d=e.X3DGroupingNode;var p=t.n(d);const c=e.X3DChildNode;var b=t.n(c);const w=e.X3DConstants;var h=t.n(w);const O=e.Namespace;var y=t.n(O);function m(e){b().call(this,e),this.addType(h().X3DProductStructureChildNode)}Object.setPrototypeOf(m.prototype,b().prototype),Object.defineProperties(m,{typeName:{value:"X3DProductStructureChildNode",enumerable:!0},componentInfo:{value:Object.freeze({name:"CADGeometry",level:2}),enumerable:!0}});const f=m,v=y().add("X3DProductStructureChildNode",f);function S(e){p().call(this,e),v.call(this,e),this.addType(h().CADAssembly)}Object.assign(Object.setPrototypeOf(S.prototype,p().prototype),{}),Object.defineProperties(S,{typeName:{value:"CADAssembly",enumerable:!0},componentInfo:{value:Object.freeze({name:"CADGeometry",level:2}),enumerable:!0},containerField:{value:"children",enumerable:!0},specificationRange:{value:Object.freeze({from:"3.1",to:"Infinity"}),enumerable:!0},fieldDefinitions:{value:new(u())([new(r())(h().inputOutput,"metadata",new(a().SFNode)),new(r())(h().inputOutput,"name",new(a().SFString)),new(r())(h().inputOutput,"visible",new(a().SFBool)(!0)),new(r())(h().inputOutput,"bboxDisplay",new(a().SFBool)),new(r())(h().initializeOnly,"bboxSize",new(a().SFVec3f)(-1,-1,-1)),new(r())(h().initializeOnly,"bboxCenter",new(a().SFVec3f)),new(r())(h().inputOnly,"addChildren",new(a().MFNode)),new(r())(h().inputOnly,"removeChildren",new(a().MFNode)),new(r())(h().inputOutput,"children",new(a().MFNode))]),enumerable:!0}});const _=S,N=y().add("CADAssembly",_),F=e.X3DBoundedObject;var D=t.n(F);const g=e.TraverseType;var C=t.n(g);const j=e.X3DCast;var x=t.n(j);function z(e){v.call(this,e),D().call(this,e),this.addType(h().CADFace),this.childNode=null,this.visibleNode=null,this.boundedObject=null}Object.assign(Object.setPrototypeOf(z.prototype,v.prototype),D().prototype,{initialize(){v.prototype.initialize.call(this),D().prototype.initialize.call(this),this._shape.addInterest("set_shape__",this),this.set_shape__()},getBBox(e,t){return this._bboxSize.getValue().equals(this.getDefaultBBoxSize())?this.visibleNode?.getBBox(e,t)??e.set():e.set(this._bboxSize.getValue(),this._bboxCenter.getValue())},set_shape__(){this.childNode&&(this.childNode._isCameraObject.removeInterest("set_cameraObject__",this),this.childNode._isPickableObject.removeInterest("set_transformSensors__",this),this.childNode._display.removeInterest("set_display__",this),this.childNode._bboxDisplay.removeInterest("set_bboxDisplay__",this)),this.childNode=null;const e=x()(h().X3DChildNode,this._shape);if(e){const t=e.getType();for(let n=t.length-1;n>=0;--n){switch(t[n]){case h().LOD:case h().Transform:case h().X3DShapeNode:e._isCameraObject.addInterest("set_cameraObject__",this),e._isPickableObject.addInterest("set_transformSensors__",this),e._display.addInterest("set_display__",this),e._bboxDisplay.addInterest("set_bboxDisplay__",this),this.childNode=e;break;default:continue}break}}this.childNode?delete this.traverse:this.traverse=Function.prototype,this.set_display__(),this.set_bboxDisplay__()},set_cameraObject__(){this.setCameraObject(this.visibleNode?.isCameraObject())},set_transformSensors__(){this.setPickableObject(this.visibleNode?.isPickableObject())},set_display__(){this.childNode?this.visibleNode=this.childNode._display.getValue()?this.childNode:null:this.visibleNode=null,this.set_cameraObject__(),this.set_transformSensors__()},set_bboxDisplay__(){this.childNode?this.boundedObject=this.childNode._bboxDisplay.getValue()?this.childNode:null:this.boundedObject=null},traverse(e,t){switch(e){case C().POINTER:case C().CAMERA:case C().SHADOW:return void this.visibleNode?.traverse(e,t);case C().PICKING:{const n=this.getBrowser().getPickingHierarchy();return n.push(this),this.visibleNode?.traverse(e,t),void n.pop()}case C().COLLISION:return void this.visibleNode?.traverse(e,t);case C().DISPLAY:return this.visibleNode?.traverse(e,t),void this.boundedObject?.displayBBox(e,t)}},dispose(){D().prototype.dispose.call(this),v.prototype.dispose.call(this)}}),Object.defineProperties(z,{typeName:{value:"CADFace",enumerable:!0},componentInfo:{value:Object.freeze({name:"CADGeometry",level:2}),enumerable:!0},containerField:{value:"children",enumerable:!0},specificationRange:{value:Object.freeze({from:"3.1",to:"Infinity"}),enumerable:!0},fieldDefinitions:{value:new(u())([new(r())(h().inputOutput,"metadata",new(a().SFNode)),new(r())(h().inputOutput,"name",new(a().SFString)),new(r())(h().inputOutput,"visible",new(a().SFBool)(!0)),new(r())(h().inputOutput,"bboxDisplay",new(a().SFBool)),new(r())(h().initializeOnly,"bboxSize",new(a().SFVec3f)(-1,-1,-1)),new(r())(h().initializeOnly,"bboxCenter",new(a().SFVec3f)),new(r())(h().inputOutput,"shape",new(a().SFNode))]),enumerable:!0}});const P=z,I=y().add("CADFace",P);function A(e){p().call(this,e),this.addType(h().CADLayer)}Object.setPrototypeOf(A.prototype,p().prototype),Object.defineProperties(A,{typeName:{value:"CADLayer",enumerable:!0},componentInfo:{value:Object.freeze({name:"CADGeometry",level:2}),enumerable:!0},containerField:{value:"children",enumerable:!0},specificationRange:{value:Object.freeze({from:"3.1",to:"Infinity"}),enumerable:!0},fieldDefinitions:{value:new(u())([new(r())(h().inputOutput,"metadata",new(a().SFNode)),new(r())(h().inputOutput,"name",new(a().SFString)),new(r())(h().inputOutput,"visible",new(a().SFBool)(!0)),new(r())(h().inputOutput,"bboxDisplay",new(a().SFBool)),new(r())(h().initializeOnly,"bboxSize",new(a().SFVec3f)(-1,-1,-1)),new(r())(h().initializeOnly,"bboxCenter",new(a().SFVec3f)),new(r())(h().inputOnly,"addChildren",new(a().MFNode)),new(r())(h().inputOnly,"removeChildren",new(a().MFNode)),new(r())(h().inputOutput,"children",new(a().MFNode))]),enumerable:!0}});const B=A,V=y().add("CADLayer",B),M=e.X3DTransformNode;var T=t.n(M);function X(e){T().call(this,e),v.call(this,e),this.addType(h().CADPart)}Object.assign(Object.setPrototypeOf(X.prototype,T().prototype),{}),Object.defineProperties(X,{typeName:{value:"CADPart",enumerable:!0},componentInfo:{value:Object.freeze({name:"CADGeometry",level:2}),enumerable:!0},containerField:{value:"children",enumerable:!0},specificationRange:{value:Object.freeze({from:"3.1",to:"Infinity"}),enumerable:!0},fieldDefinitions:{value:new(u())([new(r())(h().inputOutput,"metadata",new(a().SFNode)),new(r())(h().inputOutput,"name",new(a().SFString)),new(r())(h().inputOutput,"translation",new(a().SFVec3f)),new(r())(h().inputOutput,"rotation",new(a().SFRotation)),new(r())(h().inputOutput,"scale",new(a().SFVec3f)(1,1,1)),new(r())(h().inputOutput,"scaleOrientation",new(a().SFRotation)),new(r())(h().inputOutput,"center",new(a().SFVec3f)),new(r())(h().inputOutput,"visible",new(a().SFBool)(!0)),new(r())(h().inputOutput,"bboxDisplay",new(a().SFBool)),new(r())(h().initializeOnly,"bboxSize",new(a().SFVec3f)(-1,-1,-1)),new(r())(h().initializeOnly,"bboxCenter",new(a().SFVec3f)),new(r())(h().inputOnly,"addChildren",new(a().MFNode)),new(r())(h().inputOnly,"removeChildren",new(a().MFNode)),new(r())(h().inputOutput,"children",new(a().MFNode))]),enumerable:!0}});const G=X,R=y().add("CADPart",G),k=e.X3DComposedGeometryNode;var L=t.n(k);function Q(e){L().call(this,e),this.addType(h().IndexedQuadSet)}Object.assign(Object.setPrototypeOf(Q.prototype,L().prototype),{initialize(){L().prototype.initialize.call(this),this._set_index.addFieldInterest(this._index)},getTriangleIndex(e){const t=e%6;return 4*Math.floor(e/6)+t%3+Math.floor(t/4)},getPolygonIndex(e){return this._index[e]},getVerticesPerPolygon:()=>4,getNumVertices(){return this._index.length},build(){let e=this._index.length;e-=e%4,L().prototype.build.call(this,4,e,6,e/4*6)}}),Object.defineProperties(Q,{typeName:{value:"IndexedQuadSet",enumerable:!0},componentInfo:{value:Object.freeze({name:"CADGeometry",level:1}),enumerable:!0},containerField:{value:"geometry",enumerable:!0},specificationRange:{value:Object.freeze({from:"3.1",to:"Infinity"}),enumerable:!0},fieldDefinitions:{value:new(u())([new(r())(h().inputOutput,"metadata",new(a().SFNode)),new(r())(h().inputOnly,"set_index",new(a().MFInt32)),new(r())(h().initializeOnly,"solid",new(a().SFBool)(!0)),new(r())(h().initializeOnly,"ccw",new(a().SFBool)(!0)),new(r())(h().initializeOnly,"colorPerVertex",new(a().SFBool)(!0)),new(r())(h().initializeOnly,"normalPerVertex",new(a().SFBool)(!0)),new(r())(h().initializeOnly,"index",new(a().MFInt32)),new(r())(h().inputOutput,"attrib",new(a().MFNode)),new(r())(h().inputOutput,"fogCoord",new(a().SFNode)),new(r())(h().inputOutput,"color",new(a().SFNode)),new(r())(h().inputOutput,"texCoord",new(a().SFNode)),new(r())(h().inputOutput,"tangent",new(a().SFNode)),new(r())(h().inputOutput,"normal",new(a().SFNode)),new(r())(h().inputOutput,"coord",new(a().SFNode))]),enumerable:!0}});const E=Q,H=y().add("IndexedQuadSet",E);function q(e){L().call(this,e),this.addType(h().QuadSet)}Object.assign(Object.setPrototypeOf(q.prototype,L().prototype),{getTriangleIndex(e){const t=e%6;return 4*Math.floor(e/6)+t%3+Math.floor(t/4)},getVerticesPerPolygon:()=>4,getNumVertices(){return this.getCoord()?.getSize()},build(){if(!this.getCoord())return;let e=this.getCoord().getSize();e-=e%4,L().prototype.build.call(this,4,e,6,e/4*6)},createNormals(e,t){return this.createFaceNormals(e,t)}}),Object.defineProperties(q,{typeName:{value:"QuadSet",enumerable:!0},componentInfo:{value:Object.freeze({name:"CADGeometry",level:1}),enumerable:!0},containerField:{value:"geometry",enumerable:!0},specificationRange:{value:Object.freeze({from:"3.1",to:"Infinity"}),enumerable:!0},fieldDefinitions:{value:new(u())([new(r())(h().inputOutput,"metadata",new(a().SFNode)),new(r())(h().initializeOnly,"solid",new(a().SFBool)(!0)),new(r())(h().initializeOnly,"ccw",new(a().SFBool)(!0)),new(r())(h().initializeOnly,"colorPerVertex",new(a().SFBool)(!0)),new(r())(h().initializeOnly,"normalPerVertex",new(a().SFBool)(!0)),new(r())(h().inputOutput,"attrib",new(a().MFNode)),new(r())(h().inputOutput,"fogCoord",new(a().SFNode)),new(r())(h().inputOutput,"color",new(a().SFNode)),new(r())(h().inputOutput,"texCoord",new(a().SFNode)),new(r())(h().inputOutput,"tangent",new(a().SFNode)),new(r())(h().inputOutput,"normal",new(a().SFNode)),new(r())(h().inputOutput,"coord",new(a().SFNode))]),enumerable:!0}});const K=q,W=y().add("QuadSet",K);i().add({name:"CADGeometry",concreteNodes:[N,I,V,R,H,W],abstractNodes:[v]});y().add("CADGeometry",undefined)})();