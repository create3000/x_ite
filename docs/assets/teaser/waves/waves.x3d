<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE X3D PUBLIC "ISO//Web3D//DTD X3D 4.0//EN" "https://www.web3d.org/specifications/x3d-4.0.dtd">
<X3D profile='Interchange' version='4.0' xmlns:xsd='http://www.w3.org/2001/XMLSchema-instance' xsd:noNamespaceSchemaLocation='https://www.web3d.org/specifications/x3d-4.0.xsd'>
  <head>
    <component name='Geometry2D' level='2'/>
    <component name='Layering' level='1'/>
    <component name='Scripting' level='1'/>
    <component name='Shaders' level='1'/>
    <component name='Text' level='1'/>
    <component name='X_ITE' level='1'/>
    <meta name='created' content='Sat, 17 May 2025 17:44:03 GMT'/>
    <meta name='creator' content='Holger Seelig'/>
    <meta name='generator' content='Sunrize X3D Editor V1.8.29, https://create3000.github.io/sunrize/'/>
    <meta name='modified' content='Thu, 04 Sep 2025 11:31:53 GMT'/>
  </head>
  <Scene>
    <ProtoDeclare name='ColorScheme'>
      <ProtoInterface>
        <field accessType='outputOnly' type='SFBool' name='light'/>
        <field accessType='outputOnly' type='SFBool' name='dark'/>
      </ProtoInterface>
      <ProtoBody>
        <Script DEF='ColorSchemeScript'>
          <field accessType='outputOnly' type='SFBool' name='light'/>
          <field accessType='outputOnly' type='SFBool' name='dark'/>
          <IS>
            <connect nodeField='light' protoField='light'/>
            <connect nodeField='dark' protoField='dark'/>
          </IS>
<![CDATA[ecmascript:

function initialize ()
{
   const colorScheme = window .matchMedia ("(prefers-color-scheme: light)");

   colorScheme .addEventListener ("change", event => changeColorScheme (event));

   changeColorScheme (colorScheme);
}

function changeColorScheme (event)
{
   light = event .matches;

   if (typeof $ !== "undefined")
   {
      if ($("html") .attr ("data-mode") === "light")
         light = true;

      if ($("html") .attr ("data-mode") === "dark")
         light = false;
   }

   dark = !light;
}
]]>
        </Script>
      </ProtoBody>
    </ProtoDeclare>
    <ProtoDeclare name='Boxes'>
      <ProtoInterface>
        <field accessType='inputOutput' type='SFBool' name='enabled' value='true'/>
        <field accessType='inputOutput' type='SFFloat' name='amplitude' value='1'/>
        <field accessType='inputOutput' type='SFInt32' name='xDimension'/>
        <field accessType='inputOutput' type='SFInt32' name='zDimension'/>
        <field accessType='inputOutput' type='SFFloat' name='xSpacing'/>
        <field accessType='inputOutput' type='SFFloat' name='zSpacing'/>
        <field accessType='inputOutput' type='SFColor' name='highColor' value='1 1 1'/>
        <field accessType='inputOutput' type='SFColor' name='lowColor'/>
      </ProtoInterface>
      <ProtoBody>
        <InstancedShape DEF='Shape'>
          <Appearance>
            <ComposedShader DEF='BoxesShader'
                language='GLSL'>
              <field accessType='inputOnly' type='SFTime' name='set_time'/>
              <field accessType='inputOutput' type='SFFloat' name='amplitude'/>
              <field accessType='inputOutput' type='SFInt32' name='xDimension'/>
              <field accessType='inputOutput' type='SFInt32' name='zDimension'/>
              <field accessType='inputOutput' type='SFColor' name='highColor'/>
              <field accessType='inputOutput' type='SFColor' name='lowColor'/>
              <IS>
                <connect nodeField='amplitude' protoField='amplitude'/>
                <connect nodeField='xDimension' protoField='xDimension'/>
                <connect nodeField='zDimension' protoField='zDimension'/>
                <connect nodeField='highColor' protoField='highColor'/>
                <connect nodeField='lowColor' protoField='lowColor'/>
              </IS>
              <ShaderPart DEF='BoxesVertexShader'>
<![CDATA[data:text/plain,#version 300 es

precision highp float;
precision highp int;

uniform mat4 x3d_ProjectionMatrix;
uniform mat4 x3d_ModelViewMatrix;
uniform mat3 x3d_NormalMatrix;

uniform x3d_PointPropertiesParameters x3d_PointProperties;

in mat4 x3d_InstanceMatrix;
in vec4 x3d_Vertex;
in vec3 x3d_Normal;

out vec3  vertex;
out vec3  normal;
out float height;

uniform float set_time;
uniform int   xDimension;
uniform int   zDimension;
uniform float amplitude;

vec4
wave (const in vec4 vertex)
{
   float x = float (gl_InstanceID %25 xDimension - xDimension / 2);
   float z = float (gl_InstanceID / xDimension - zDimension / 2);

   float y = sin (length (vec2 (x, z)) - set_time) * amplitude;

   height = y;

   return vec4 (vertex .x, vertex .y + y, vertex .zw);
}

void
main ()
{
   gl_PointSize = x3d_PointProperties .pointSizeScaleFactor;

   vertex = vec3 (x3d_ModelViewMatrix * wave (x3d_InstanceMatrix * x3d_Vertex));
   normal = normalize (x3d_NormalMatrix * x3d_Normal);

   gl_Position = x3d_ProjectionMatrix * vec4 (vertex, 1.0);
}
]]>
              </ShaderPart>
              <ShaderPart DEF='BoxesFragmentShader'
                  type='FRAGMENT'>
<![CDATA[data:text/plain,#version 300 es

precision highp float;

in vec3  vertex;
in vec3  normal;
in float height;

out vec4 x3d_FragColor;

uniform float set_time;
uniform float amplitude;
uniform vec3  highColor;
uniform vec3  lowColor;

vec3 
hsv2rgb (const in vec3 c)
{
   vec4 K = vec4 (1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
   vec3 p = abs (fract (c .xxx + K .xyz) * 6.0 - K .www);

   return c .z * mix (K .xxx, clamp (p - K .xxx, 0.0, 1.0), c .y);
}

void
main ()
{
   vec3  finalColor = vec3 (0.0, 0.0, 0.0);

   vec3 N = normalize (gl_FrontFacing ? normal : -normal);
   vec3 V = normalize (-vertex); // normalized vector from point on geometry to viewer's position

   vec3 d = vec3 (0.0, 0.0, -1.0); // light direction
   vec3 L = -d;
   vec3 H = normalize (L + V); // specular term

   float c = height / amplitude * 0.5 + 0.5;

   vec3 diffuseColor = mix (lowColor, highColor, c); 
   vec3 diffuseTerm  = diffuseColor * max (dot (N, L), 0.0);

   finalColor += diffuseTerm;

   x3d_FragColor = vec4 (finalColor, 1.0);
}
]]>
              </ShaderPart>
            </ComposedShader>
          </Appearance>
          <Box/>
        </InstancedShape>
        <TimeSensor DEF='Timer'
            loop='true'>
          <IS>
            <connect nodeField='enabled' protoField='enabled'/>
          </IS>
        </TimeSensor>
        <Script DEF='BoxesScript'>
          <field accessType='inputOutput' type='SFInt32' name='xDimension'/>
          <field accessType='inputOutput' type='SFInt32' name='zDimension'/>
          <field accessType='inputOutput' type='SFFloat' name='xSpacing'/>
          <field accessType='inputOutput' type='SFFloat' name='zSpacing'/>
          <field accessType='initializeOnly' type='SFNode' name='shape'>
            <InstancedShape USE='Shape'/>
          </field>
          <IS>
            <connect nodeField='xDimension' protoField='xDimension'/>
            <connect nodeField='zDimension' protoField='zDimension'/>
            <connect nodeField='xSpacing' protoField='xSpacing'/>
            <connect nodeField='zSpacing' protoField='zSpacing'/>
          </IS>
<![CDATA[ecmascript:

function initialize ()
{
   eventsProcessed ();
}

function eventsProcessed ()
{
   shape .translations .length = 0;
   
   for (let z = 0; z < zDimension; ++ z)
   {
      for (let x = 0; x < xDimension; ++ x)
      {
         shape .translations .push (new SFVec3f (x * xSpacing, 0, z * zSpacing));
      }
   }
}
]]>
        </Script>
        <ROUTE fromNode='Timer' fromField='elapsedTime' toNode='BoxesShader' toField='set_time'/>
      </ProtoBody>
    </ProtoDeclare>
    <WorldInfo
        title='pluto'>
      <MetadataSet containerField='metadata'
          name='Sunrize'
          reference='https://create3000.github.io/sunrize/'>
        <MetadataSet
            name='BrowserFrame'
            reference='https://create3000.github.io/sunrize/'>
          <MetadataBoolean
              name='fixedSize'
              reference='https://create3000.github.io/sunrize/'
              value='true'/>
          <MetadataDouble
              name='aspectRatio'
              reference='https://create3000.github.io/sunrize/'
              value='16, 5'/>
          <MetadataString
              name='backgroundColor'
              reference='https://create3000.github.io/sunrize/'
              value='""'/>
        </MetadataSet>
      </MetadataSet>
    </WorldInfo>
    <ProtoInstance name='ColorScheme' DEF='_12'/>
    <LayerSet
        activeLayer='-1'
        order='1, 2, 3'>
      <Layer DEF='Background'>
        <Background DEF='Dark_3'/>
        <Background DEF='Light_2'
            skyColor='1 1 1'/>
      </Layer>
      <Layer DEF='Waves'>
        <Viewpoint
            description='Initial View'
            position='299.3833 109.0399 211.6044'
            orientation='-0.107055720216471 0.864757644339518 0.490645788043982 2.76860871210511'
            centerOfRotation='273.5794 5.37422 267.9201'/>
        <ProtoInstance name='Boxes'>
          <fieldValue name='amplitude' value='2'/>
          <fieldValue name='xDimension' value='150'/>
          <fieldValue name='zDimension' value='150'/>
          <fieldValue name='xSpacing' value='3'/>
          <fieldValue name='zSpacing' value='3'/>
          <fieldValue name='highColor' value='0.2666667 0.5960784 0.8941176'/>
          <fieldValue name='lowColor' value='0.02745098 0.1529412 0.2705882'/>
        </ProtoInstance>
      </Layer>
      <Layer DEF='Text'>
        <Transform DEF='Rectangle2D'
            translation='0 0.04948798 0'
            scale='32 1.2 1'>
          <Shape DEF='Light_3'
              visible='false'>
            <Appearance>
              <UnlitMaterial
                  transparency='0.5'/>
            </Appearance>
            <Rectangle2D DEF='_6'/>
          </Shape>
          <Shape DEF='Dark_2'>
            <Appearance>
              <UnlitMaterial
                  emissiveColor='0 0 0'
                  transparency='0.5'/>
            </Appearance>
            <Rectangle2D USE='_6'/>
          </Shape>
        </Transform>
        <Transform DEF='Text_1'
            translation='-9 0 3'
            rotation='1 0 0 3.14159265358979'
            scale='0.8288495 0.8288495 0.8288495'
            center='5.160146 0 0'>
          <Group DEF='Animation'>
            <TimeSensor DEF='_3'
                cycleInterval='0.5'
                startTime='1744035866.764'/>
            <OrientationInterpolator DEF='_4'
                key='0, 0.5, 1'
                keyValue='1 0 0 0, 1 0 0 1.5707963267949, 1 0 0 3.14159265358979'/>
          </Group>
          <Group DEF='Light_1'
              visible='false'>
            <Transform DEF='Front_1'>
              <Shape DEF='_13'>
                <Appearance>
                  <UnlitMaterial
                      emissiveColor='0 0 0'/>
                </Appearance>
                <Text DEF='_5'
                    string='"X_ITE v12.0.6"'
                    solid='true'>
                  <FontStyle
                      family='"Neuropol.otf", "SANS"'
                      size='1.4'
                      justify='"BEGIN", "MIDDLE"'/>
                </Text>
              </Shape>
            </Transform>
            <Transform DEF='Back_1'
                rotation='1 0 0 3.14159265358979'>
              <Shape USE='_13'/>
            </Transform>
          </Group>
          <Group DEF='Dark_1'>
            <Transform DEF='Front'>
              <Shape DEF='_14'>
                <Appearance>
                  <UnlitMaterial/>
                </Appearance>
                <Text USE='_5'/>
              </Shape>
            </Transform>
            <Transform DEF='Back'
                rotation='1 0 0 3.14159265358979'>
              <Shape USE='_14'/>
            </Transform>
          </Group>
          <Script DEF='X_ITE'>
            <field accessType='outputOnly' type='MFString' name='string_changed'/>
<![CDATA[ecmascript:

function initialize ()
{
   string_changed = new MFString (Browser .name + " v" + Browser .version);
}
]]>
          </Script>
        </Transform>
      </Layer>
    </LayerSet>
    <ROUTE fromNode='_3' fromField='fraction_changed' toNode='_4' toField='set_fraction'/>
    <ROUTE fromNode='_4' fromField='value_changed' toNode='Text_1' toField='set_rotation'/>
    <ROUTE fromNode='X_ITE' fromField='string_changed' toNode='_5' toField='set_string'/>
    <ROUTE fromNode='_12' fromField='dark' toNode='Dark_1' toField='set_visible'/>
    <ROUTE fromNode='_12' fromField='light' toNode='Light_1' toField='set_visible'/>
    <ROUTE fromNode='_12' fromField='dark' toNode='Dark_2' toField='set_visible'/>
    <ROUTE fromNode='_12' fromField='light' toNode='Light_3' toField='set_visible'/>
  </Scene>
</X3D>
