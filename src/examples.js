const X_ITE_EXAMPLES = [
   { component: "CADGeometry", test: "QuadSet" },
   { component: "Core", test: "glTF" },
   { component: "Core", test: "OBJ", xrButtonPosition: "tr" },
   { component: "Core", test: "STL", xrButtonPosition: "tr" },
   { component: "CubeMapTexturing", test: "ComposedCubeMapTexture" },
   { component: "CubeMapTexturing", test: "GeneratedCubeMapTexture" },
   { component: "EnvironmentalEffects", test: "Background" },
   { component: "EnvironmentalEffects", test: "Fog", xrButtonPosition: "tr" },
   { component: "EnvironmentalEffects", test: "LocalFog", xrButtonPosition: "tr" },
   { component: "EnvironmentalEffects", test: "TextureBackground" },
   { component: "EnvironmentalSensor", test: "ProximitySensor" },
   { component: "EnvironmentalSensor", test: "TransformSensor" },
   { component: "EnvironmentalSensor", test: "VisibilitySensor" },
   { component: "EventUtilities", test: "IntegerSequencer" },
   { component: "Followers", test: "ColorChaser" },
   { component: "Followers", test: "ColorDamper" },
   { component: "Followers", test: "CoordinateChaser" },
   { component: "Followers", test: "ScalarChaser", xrButtonPosition: "tr" },
   { component: "Geometry2D", test: "Arc2D" },
   { component: "Geometry2D", test: "ArcClose2D" },
   { component: "Geometry2D", test: "Circle2D" },
   { component: "Geometry2D", test: "Disk2D" },
   { component: "Geometry2D", test: "Polyline2D" },
   { component: "Geometry2D", test: "Polypoint2D" },
   { component: "Geometry2D", test: "Rectangle2D" },
   { component: "Geometry2D", test: "TriangleSet2D" },
   { component: "Geometry3D", test: "Box" },
   { component: "Geometry3D", test: "Cone" },
   { component: "Geometry3D", test: "Cylinder" },
   { component: "Geometry3D", test: "ElevationGrid" },
   { component: "Geometry3D", test: "Extrusion" },
   { component: "Geometry3D", test: "IndexedFaceSet" },
   { component: "Geometry3D", test: "Sphere" },
   { component: "Geospatial", test: "GeoElevationGrid" },
   { component: "Geospatial", test: "GeoLOD" },
   { component: "Geospatial", test: "GeoViewpoint" },
   { component: "Grouping", test: "Group" },
   { component: "Grouping", test: "StaticGroup" },
   { component: "Grouping", test: "Switch" },
   { component: "Grouping", test: "Transform" },
   { component: "HAnim", test: "HAnimHumanoid" },
   { component: "HAnim", test: "HAnimInstancedShape" },
   { component: "HAnim", test: "HAnimParticleSystem" },
   { component: "Interpolation", test: "ColorInterpolator" },
   { component: "Interpolation", test: "CoordinateInterpolator" },
   { component: "Interpolation", test: "OrientationInterpolator" },
   { component: "Interpolation", test: "PositionInterpolator", xrButtonPosition: "tr" },
   { component: "Interpolation", test: "PositionInterpolator2D" },
   { component: "Interpolation", test: "ScalarInterpolator" },
   { component: "Interpolation", test: "SplineScalarInterpolator" },
   { component: "Interpolation", test: "SquadOrientationInterpolator" },
   { component: "KeyDeviceSensor", test: "KeySensor" },
   { component: "KeyDeviceSensor", test: "StringSensor" },
   { component: "Layering", test: "LayerSet" },
   { component: "Layering", test: "Viewport" },
   { component: "Layout", test: "ScreenFontStyle" },
   { component: "Lighting", test: "DirectionalLight", xrButtonPosition: "bl" },
   { component: "Lighting", test: "PointLight" },
   { component: "Lighting", test: "Shadows" },
   { component: "Lighting", test: "SpotLight" },
   { component: "Navigation", test: "Billboard" },
   { component: "Navigation", test: "Collision" },
   { component: "Navigation", test: "LogarithmicDepthBuffer" },
   { component: "Navigation", test: "NavigationInfo" },
   { component: "Navigation", test: "OrthoViewpoint" },
   { component: "Navigation", test: "Viewpoint" },
   { component: "Networking", test: "Anchor" },
   { component: "Networking", test: "Inline" },
   { component: "Networking", test: "LoadSensor" },
   { component: "NURBS", test: "NurbsCurve" },
   { component: "NURBS", test: "NurbsPatchSurface" },
   { component: "NURBS", test: "NurbsSweptSurface" },
   { component: "NURBS", test: "NurbsTrimmedSurface" },
   { component: "ParticleSystems", test: "BoundedPhysicsModel" },
   { component: "ParticleSystems", test: "ConeEmitter" },
   { component: "ParticleSystems", test: "ExplosionEmitter" },
   { component: "ParticleSystems", test: "ForcePhysicsModel" },
   { component: "ParticleSystems", test: "ParticleSystem" },
   { component: "ParticleSystems", test: "PointEmitter" },
   { component: "ParticleSystems", test: "PolylineEmitter" },
   { component: "ParticleSystems", test: "SurfaceEmitter" },
   { component: "ParticleSystems", test: "VolumeEmitter" },
   { component: "ParticleSystems", test: "WindPhysicsModel" },
   { component: "Picking", test: "LinePickSensor" },
   { component: "Picking", test: "PointPickSensor" },
   { component: "Picking", test: "PrimitivePickSensor" },
   { component: "PointingDeviceSensor", test: "CylinderSensor" },
   { component: "PointingDeviceSensor", test: "PlaneSensor" },
   { component: "PointingDeviceSensor", test: "TouchSensor" },
   { component: "Rendering", test: "ClipPlane" },
   { component: "Rendering", test: "Color" },
   { component: "Rendering", test: "ColorRGBA" },
   { component: "Rendering", test: "Coordinate" },
   { component: "Rendering", test: "IndexedLineSet" },
   { component: "Rendering", test: "IndexedTriangleFanSet" },
   { component: "Rendering", test: "IndexedTriangleSet" },
   { component: "Rendering", test: "LineSet" },
   { component: "Rendering", test: "OrderIndependentTransparency", xrButtonPosition: "tr" },
   { component: "Rendering", test: "PointSet" },
   { component: "RigidBodyPhysics", test: "BallJoint" },
   { component: "RigidBodyPhysics", test: "CollidableShape" },
   { component: "RigidBodyPhysics", test: "CollisionCollection" },
   { component: "RigidBodyPhysics", test: "RigidBody" },
   { component: "RigidBodyPhysics", test: "RigidBodyCollection" },
   { component: "RigidBodyPhysics", test: "SingleAxisHingeJoint" },
   { component: "RigidBodyPhysics", test: "SliderJoint" },
   { component: "Shaders", test: "ComposedShader" },
   { component: "Shaders", test: "FloatVertexAttribute" },
   { component: "Shaders", test: "ShaderPart" },
   { component: "Shape", test: "Appearance" },
   { component: "Shape", test: "FillProperties" },
   { component: "Shape", test: "LineProperties" },
   { component: "Shape", test: "Material" },
   { component: "Shape", test: "TwoSidedMaterial" },
   { component: "Sound", test: "AudioClip" },
   { component: "Sound", test: "MicrophoneSource" },
   { component: "Text", test: "FontStyle" },
   { component: "Text", test: "Text" },
   { component: "TextureProjection", test: "TextureProjector" },
   { component: "Texturing", test: "ImageTexture" },
   { component: "Texturing", test: "MovieTexture" },
   { component: "Texturing", test: "MultiTexture" },
   { component: "Texturing", test: "PixelTexture" },
   { component: "Texturing3D", test: "ImageTexture3D" },
   { component: "Texturing3D", test: "ImageTextureAtlas" },
   { component: "Time", test: "TimeSensor" },
   { component: "VolumeRendering", test: "EdgeEnhancementVolumeStyle" },
   { component: "VolumeRendering", test: "IsoSurfaceVolumeData" },
   { component: "VolumeRendering", test: "ProjectionVolumeStyle" },
   { component: "VolumeRendering", test: "SegmentedVolumeData" },
   { component: "VolumeRendering", test: "ShadedVolumeStyle" },
   { component: "VolumeRendering", test: "ToneMappedVolumeStyle" },
   { component: "VolumeRendering", test: "VolumeData" },
   { component: "X3D", test: "Apartment" },
   { component: "X3D", test: "Approach" },
   { component: "X3D", test: "Arcadia", xrButtonPosition: "bl" },
   { component: "X3D", test: "Astronomy" },
   { component: "X3D", test: "BeyondGermany", xrButtonPosition: "tl" },
   { component: "X3D", test: "BIC" },
   { component: "X3D", test: "Capone" },
   { component: "X3D", test: "Chomp" },
   { component: "X3D", test: "Circles" },
   { component: "X3D", test: "CrazySpiral" },
   { component: "X3D", test: "Currencies" },
   { component: "X3D", test: "FlashingLights" },
   { component: "X3D", test: "FoldUp" },
   { component: "X3D", test: "LogoPieces" },
   { component: "X3D", test: "LustForLife" },
   { component: "X3D", test: "MagicMushrooms" },
   { component: "X3D", test: "MilkyWayAndBeyond" },
   { component: "X3D", test: "NYC" },
   { component: "X3D", test: "Pong" },
   { component: "X3D", test: "SecretLabyrinth" },
   { component: "X3D", test: "SlidingPuzzle", xrButtonPosition: "tl" },
   { component: "X3D", test: "SmartyBubbles", xrButtonPosition: "tr" },
   { component: "X3D", test: "SmashingBoxes", xrButtonPosition: "bl" },
   { component: "X3D", test: "SugarSmack" },
   { component: "X3D", test: "TikiWorld" },
   { component: "X3D", test: "TreasureIsland" },
   { component: "X3D", test: "Vattenfall" },
   { component: "X3D", test: "WaterQuality", xrButtonPosition: "cr" },
   { component: "X_ITE", test: "BlendMode" },
   { component: "X_ITE", test: "DepthMode" },
   { component: "X_ITE", test: "InstancedShape" },
];
X_ITE_EXAMPLES .server = "https://create3000.github.io/media/examples";

